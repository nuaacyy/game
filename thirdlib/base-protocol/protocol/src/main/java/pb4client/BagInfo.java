// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.BagInfo}
 */
public  final class BagInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.BagInfo)
    BagInfoOrBuilder {
  // Use BagInfo.newBuilder() to construct.
  private BagInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BagInfo() {
    itemId_ = 0L;
    itemProtoId_ = 0;
    num_ = 0;
    itemType_ = 0L;
    equipOnAddress_ = 0;
    equipLv_ = 0;
    props_ = java.util.Collections.emptyList();
    equipExp_ = 0;
    kingEquipCardInfos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BagInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            itemId_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            itemProtoId_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            num_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            itemType_ = input.readInt64();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000010;
            equipOnAddress_ = input.readInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000020;
            equipLv_ = input.readInt32();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              props_ = new java.util.ArrayList<pb4client.EquipProps>();
              mutable_bitField0_ |= 0x00000040;
            }
            props_.add(
                input.readMessage(pb4client.EquipProps.PARSER, extensionRegistry));
            break;
          }
          case 88: {
            bitField0_ |= 0x00000040;
            equipExp_ = input.readInt32();
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              kingEquipCardInfos_ = new java.util.ArrayList<pb4client.KingEquipCardInfo>();
              mutable_bitField0_ |= 0x00000100;
            }
            kingEquipCardInfos_.add(
                input.readMessage(pb4client.KingEquipCardInfo.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        props_ = java.util.Collections.unmodifiableList(props_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        kingEquipCardInfos_ = java.util.Collections.unmodifiableList(kingEquipCardInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_BagInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_BagInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.BagInfo.class, pb4client.BagInfo.Builder.class);
  }

  private int bitField0_;
  public static final int ITEMID_FIELD_NUMBER = 1;
  private long itemId_;
  /**
   * <pre>
   * 物品唯一ID
   * </pre>
   *
   * <code>required int64 itemId = 1;</code>
   */
  public boolean hasItemId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 物品唯一ID
   * </pre>
   *
   * <code>required int64 itemId = 1;</code>
   */
  public long getItemId() {
    return itemId_;
  }

  public static final int ITEMPROTOID_FIELD_NUMBER = 2;
  private int itemProtoId_;
  /**
   * <pre>
   *物品模板
   * </pre>
   *
   * <code>required int32 itemProtoId = 2;</code>
   */
  public boolean hasItemProtoId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *物品模板
   * </pre>
   *
   * <code>required int32 itemProtoId = 2;</code>
   */
  public int getItemProtoId() {
    return itemProtoId_;
  }

  public static final int NUM_FIELD_NUMBER = 3;
  private int num_;
  /**
   * <pre>
   *数量
   * </pre>
   *
   * <code>required int32 num = 3;</code>
   */
  public boolean hasNum() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *数量
   * </pre>
   *
   * <code>required int32 num = 3;</code>
   */
  public int getNum() {
    return num_;
  }

  public static final int ITEMTYPE_FIELD_NUMBER = 5;
  private long itemType_;
  /**
   * <pre>
   *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
   * </pre>
   *
   * <code>required int64 itemType = 5;</code>
   */
  public boolean hasItemType() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
   * </pre>
   *
   * <code>required int64 itemType = 5;</code>
   */
  public long getItemType() {
    return itemType_;
  }

  public static final int EQUIPONADDRESS_FIELD_NUMBER = 8;
  private int equipOnAddress_;
  /**
   * <code>required int32 equipOnAddress = 8;</code>
   */
  public boolean hasEquipOnAddress() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required int32 equipOnAddress = 8;</code>
   */
  public int getEquipOnAddress() {
    return equipOnAddress_;
  }

  public static final int EQUIPLV_FIELD_NUMBER = 9;
  private int equipLv_;
  /**
   * <pre>
   *装备强化等级
   * </pre>
   *
   * <code>required int32 equipLv = 9;</code>
   */
  public boolean hasEquipLv() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *装备强化等级
   * </pre>
   *
   * <code>required int32 equipLv = 9;</code>
   */
  public int getEquipLv() {
    return equipLv_;
  }

  public static final int PROPS_FIELD_NUMBER = 10;
  private java.util.List<pb4client.EquipProps> props_;
  /**
   * <pre>
   *装备属性
   * </pre>
   *
   * <code>repeated .client2server.EquipProps props = 10;</code>
   */
  public java.util.List<pb4client.EquipProps> getPropsList() {
    return props_;
  }
  /**
   * <pre>
   *装备属性
   * </pre>
   *
   * <code>repeated .client2server.EquipProps props = 10;</code>
   */
  public java.util.List<? extends pb4client.EquipPropsOrBuilder> 
      getPropsOrBuilderList() {
    return props_;
  }
  /**
   * <pre>
   *装备属性
   * </pre>
   *
   * <code>repeated .client2server.EquipProps props = 10;</code>
   */
  public int getPropsCount() {
    return props_.size();
  }
  /**
   * <pre>
   *装备属性
   * </pre>
   *
   * <code>repeated .client2server.EquipProps props = 10;</code>
   */
  public pb4client.EquipProps getProps(int index) {
    return props_.get(index);
  }
  /**
   * <pre>
   *装备属性
   * </pre>
   *
   * <code>repeated .client2server.EquipProps props = 10;</code>
   */
  public pb4client.EquipPropsOrBuilder getPropsOrBuilder(
      int index) {
    return props_.get(index);
  }

  public static final int EQUIPEXP_FIELD_NUMBER = 11;
  private int equipExp_;
  /**
   * <pre>
   *装备强化经验
   * </pre>
   *
   * <code>required int32 equipExp = 11;</code>
   */
  public boolean hasEquipExp() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *装备强化经验
   * </pre>
   *
   * <code>required int32 equipExp = 11;</code>
   */
  public int getEquipExp() {
    return equipExp_;
  }

  public static final int KINGEQUIPCARDINFOS_FIELD_NUMBER = 12;
  private java.util.List<pb4client.KingEquipCardInfo> kingEquipCardInfos_;
  /**
   * <pre>
   *君主装备的卡片信息
   * </pre>
   *
   * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
   */
  public java.util.List<pb4client.KingEquipCardInfo> getKingEquipCardInfosList() {
    return kingEquipCardInfos_;
  }
  /**
   * <pre>
   *君主装备的卡片信息
   * </pre>
   *
   * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
   */
  public java.util.List<? extends pb4client.KingEquipCardInfoOrBuilder> 
      getKingEquipCardInfosOrBuilderList() {
    return kingEquipCardInfos_;
  }
  /**
   * <pre>
   *君主装备的卡片信息
   * </pre>
   *
   * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
   */
  public int getKingEquipCardInfosCount() {
    return kingEquipCardInfos_.size();
  }
  /**
   * <pre>
   *君主装备的卡片信息
   * </pre>
   *
   * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
   */
  public pb4client.KingEquipCardInfo getKingEquipCardInfos(int index) {
    return kingEquipCardInfos_.get(index);
  }
  /**
   * <pre>
   *君主装备的卡片信息
   * </pre>
   *
   * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
   */
  public pb4client.KingEquipCardInfoOrBuilder getKingEquipCardInfosOrBuilder(
      int index) {
    return kingEquipCardInfos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasItemId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasItemProtoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasItemType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasEquipOnAddress()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasEquipLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasEquipExp()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getPropsCount(); i++) {
      if (!getProps(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getKingEquipCardInfosCount(); i++) {
      if (!getKingEquipCardInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, itemId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, itemProtoId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, num_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(5, itemType_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(8, equipOnAddress_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(9, equipLv_);
    }
    for (int i = 0; i < props_.size(); i++) {
      output.writeMessage(10, props_.get(i));
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(11, equipExp_);
    }
    for (int i = 0; i < kingEquipCardInfos_.size(); i++) {
      output.writeMessage(12, kingEquipCardInfos_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, itemId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, itemProtoId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, num_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, itemType_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, equipOnAddress_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, equipLv_);
    }
    for (int i = 0; i < props_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, props_.get(i));
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, equipExp_);
    }
    for (int i = 0; i < kingEquipCardInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, kingEquipCardInfos_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.BagInfo)) {
      return super.equals(obj);
    }
    pb4client.BagInfo other = (pb4client.BagInfo) obj;

    boolean result = true;
    result = result && (hasItemId() == other.hasItemId());
    if (hasItemId()) {
      result = result && (getItemId()
          == other.getItemId());
    }
    result = result && (hasItemProtoId() == other.hasItemProtoId());
    if (hasItemProtoId()) {
      result = result && (getItemProtoId()
          == other.getItemProtoId());
    }
    result = result && (hasNum() == other.hasNum());
    if (hasNum()) {
      result = result && (getNum()
          == other.getNum());
    }
    result = result && (hasItemType() == other.hasItemType());
    if (hasItemType()) {
      result = result && (getItemType()
          == other.getItemType());
    }
    result = result && (hasEquipOnAddress() == other.hasEquipOnAddress());
    if (hasEquipOnAddress()) {
      result = result && (getEquipOnAddress()
          == other.getEquipOnAddress());
    }
    result = result && (hasEquipLv() == other.hasEquipLv());
    if (hasEquipLv()) {
      result = result && (getEquipLv()
          == other.getEquipLv());
    }
    result = result && getPropsList()
        .equals(other.getPropsList());
    result = result && (hasEquipExp() == other.hasEquipExp());
    if (hasEquipExp()) {
      result = result && (getEquipExp()
          == other.getEquipExp());
    }
    result = result && getKingEquipCardInfosList()
        .equals(other.getKingEquipCardInfosList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasItemId()) {
      hash = (37 * hash) + ITEMID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getItemId());
    }
    if (hasItemProtoId()) {
      hash = (37 * hash) + ITEMPROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getItemProtoId();
    }
    if (hasNum()) {
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNum();
    }
    if (hasItemType()) {
      hash = (37 * hash) + ITEMTYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getItemType());
    }
    if (hasEquipOnAddress()) {
      hash = (37 * hash) + EQUIPONADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getEquipOnAddress();
    }
    if (hasEquipLv()) {
      hash = (37 * hash) + EQUIPLV_FIELD_NUMBER;
      hash = (53 * hash) + getEquipLv();
    }
    if (getPropsCount() > 0) {
      hash = (37 * hash) + PROPS_FIELD_NUMBER;
      hash = (53 * hash) + getPropsList().hashCode();
    }
    if (hasEquipExp()) {
      hash = (37 * hash) + EQUIPEXP_FIELD_NUMBER;
      hash = (53 * hash) + getEquipExp();
    }
    if (getKingEquipCardInfosCount() > 0) {
      hash = (37 * hash) + KINGEQUIPCARDINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getKingEquipCardInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.BagInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BagInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BagInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BagInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BagInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BagInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BagInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BagInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BagInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.BagInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BagInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BagInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.BagInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.BagInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.BagInfo)
      pb4client.BagInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_BagInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_BagInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.BagInfo.class, pb4client.BagInfo.Builder.class);
    }

    // Construct using pb4client.BagInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPropsFieldBuilder();
        getKingEquipCardInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      itemId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      itemProtoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      num_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      itemType_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      equipOnAddress_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      equipLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (propsBuilder_ == null) {
        props_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        propsBuilder_.clear();
      }
      equipExp_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      if (kingEquipCardInfosBuilder_ == null) {
        kingEquipCardInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        kingEquipCardInfosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_BagInfo_descriptor;
    }

    public pb4client.BagInfo getDefaultInstanceForType() {
      return pb4client.BagInfo.getDefaultInstance();
    }

    public pb4client.BagInfo build() {
      pb4client.BagInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.BagInfo buildPartial() {
      pb4client.BagInfo result = new pb4client.BagInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.itemId_ = itemId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.itemProtoId_ = itemProtoId_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.num_ = num_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.itemType_ = itemType_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.equipOnAddress_ = equipOnAddress_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.equipLv_ = equipLv_;
      if (propsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          props_ = java.util.Collections.unmodifiableList(props_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.props_ = props_;
      } else {
        result.props_ = propsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000040;
      }
      result.equipExp_ = equipExp_;
      if (kingEquipCardInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          kingEquipCardInfos_ = java.util.Collections.unmodifiableList(kingEquipCardInfos_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.kingEquipCardInfos_ = kingEquipCardInfos_;
      } else {
        result.kingEquipCardInfos_ = kingEquipCardInfosBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.BagInfo) {
        return mergeFrom((pb4client.BagInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.BagInfo other) {
      if (other == pb4client.BagInfo.getDefaultInstance()) return this;
      if (other.hasItemId()) {
        setItemId(other.getItemId());
      }
      if (other.hasItemProtoId()) {
        setItemProtoId(other.getItemProtoId());
      }
      if (other.hasNum()) {
        setNum(other.getNum());
      }
      if (other.hasItemType()) {
        setItemType(other.getItemType());
      }
      if (other.hasEquipOnAddress()) {
        setEquipOnAddress(other.getEquipOnAddress());
      }
      if (other.hasEquipLv()) {
        setEquipLv(other.getEquipLv());
      }
      if (propsBuilder_ == null) {
        if (!other.props_.isEmpty()) {
          if (props_.isEmpty()) {
            props_ = other.props_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePropsIsMutable();
            props_.addAll(other.props_);
          }
          onChanged();
        }
      } else {
        if (!other.props_.isEmpty()) {
          if (propsBuilder_.isEmpty()) {
            propsBuilder_.dispose();
            propsBuilder_ = null;
            props_ = other.props_;
            bitField0_ = (bitField0_ & ~0x00000040);
            propsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPropsFieldBuilder() : null;
          } else {
            propsBuilder_.addAllMessages(other.props_);
          }
        }
      }
      if (other.hasEquipExp()) {
        setEquipExp(other.getEquipExp());
      }
      if (kingEquipCardInfosBuilder_ == null) {
        if (!other.kingEquipCardInfos_.isEmpty()) {
          if (kingEquipCardInfos_.isEmpty()) {
            kingEquipCardInfos_ = other.kingEquipCardInfos_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureKingEquipCardInfosIsMutable();
            kingEquipCardInfos_.addAll(other.kingEquipCardInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.kingEquipCardInfos_.isEmpty()) {
          if (kingEquipCardInfosBuilder_.isEmpty()) {
            kingEquipCardInfosBuilder_.dispose();
            kingEquipCardInfosBuilder_ = null;
            kingEquipCardInfos_ = other.kingEquipCardInfos_;
            bitField0_ = (bitField0_ & ~0x00000100);
            kingEquipCardInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getKingEquipCardInfosFieldBuilder() : null;
          } else {
            kingEquipCardInfosBuilder_.addAllMessages(other.kingEquipCardInfos_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasItemId()) {
        return false;
      }
      if (!hasItemProtoId()) {
        return false;
      }
      if (!hasNum()) {
        return false;
      }
      if (!hasItemType()) {
        return false;
      }
      if (!hasEquipOnAddress()) {
        return false;
      }
      if (!hasEquipLv()) {
        return false;
      }
      if (!hasEquipExp()) {
        return false;
      }
      for (int i = 0; i < getPropsCount(); i++) {
        if (!getProps(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getKingEquipCardInfosCount(); i++) {
        if (!getKingEquipCardInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.BagInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.BagInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long itemId_ ;
    /**
     * <pre>
     * 物品唯一ID
     * </pre>
     *
     * <code>required int64 itemId = 1;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 物品唯一ID
     * </pre>
     *
     * <code>required int64 itemId = 1;</code>
     */
    public long getItemId() {
      return itemId_;
    }
    /**
     * <pre>
     * 物品唯一ID
     * </pre>
     *
     * <code>required int64 itemId = 1;</code>
     */
    public Builder setItemId(long value) {
      bitField0_ |= 0x00000001;
      itemId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 物品唯一ID
     * </pre>
     *
     * <code>required int64 itemId = 1;</code>
     */
    public Builder clearItemId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      itemId_ = 0L;
      onChanged();
      return this;
    }

    private int itemProtoId_ ;
    /**
     * <pre>
     *物品模板
     * </pre>
     *
     * <code>required int32 itemProtoId = 2;</code>
     */
    public boolean hasItemProtoId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *物品模板
     * </pre>
     *
     * <code>required int32 itemProtoId = 2;</code>
     */
    public int getItemProtoId() {
      return itemProtoId_;
    }
    /**
     * <pre>
     *物品模板
     * </pre>
     *
     * <code>required int32 itemProtoId = 2;</code>
     */
    public Builder setItemProtoId(int value) {
      bitField0_ |= 0x00000002;
      itemProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *物品模板
     * </pre>
     *
     * <code>required int32 itemProtoId = 2;</code>
     */
    public Builder clearItemProtoId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      itemProtoId_ = 0;
      onChanged();
      return this;
    }

    private int num_ ;
    /**
     * <pre>
     *数量
     * </pre>
     *
     * <code>required int32 num = 3;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *数量
     * </pre>
     *
     * <code>required int32 num = 3;</code>
     */
    public int getNum() {
      return num_;
    }
    /**
     * <pre>
     *数量
     * </pre>
     *
     * <code>required int32 num = 3;</code>
     */
    public Builder setNum(int value) {
      bitField0_ |= 0x00000004;
      num_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *数量
     * </pre>
     *
     * <code>required int32 num = 3;</code>
     */
    public Builder clearNum() {
      bitField0_ = (bitField0_ & ~0x00000004);
      num_ = 0;
      onChanged();
      return this;
    }

    private long itemType_ ;
    /**
     * <pre>
     *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
     * </pre>
     *
     * <code>required int64 itemType = 5;</code>
     */
    public boolean hasItemType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
     * </pre>
     *
     * <code>required int64 itemType = 5;</code>
     */
    public long getItemType() {
      return itemType_;
    }
    /**
     * <pre>
     *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
     * </pre>
     *
     * <code>required int64 itemType = 5;</code>
     */
    public Builder setItemType(long value) {
      bitField0_ |= 0x00000008;
      itemType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *装备状态  0-仓库内,非0表示武将ID,表示被此武将佩戴
     * </pre>
     *
     * <code>required int64 itemType = 5;</code>
     */
    public Builder clearItemType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      itemType_ = 0L;
      onChanged();
      return this;
    }

    private int equipOnAddress_ ;
    /**
     * <code>required int32 equipOnAddress = 8;</code>
     */
    public boolean hasEquipOnAddress() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 equipOnAddress = 8;</code>
     */
    public int getEquipOnAddress() {
      return equipOnAddress_;
    }
    /**
     * <code>required int32 equipOnAddress = 8;</code>
     */
    public Builder setEquipOnAddress(int value) {
      bitField0_ |= 0x00000010;
      equipOnAddress_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 equipOnAddress = 8;</code>
     */
    public Builder clearEquipOnAddress() {
      bitField0_ = (bitField0_ & ~0x00000010);
      equipOnAddress_ = 0;
      onChanged();
      return this;
    }

    private int equipLv_ ;
    /**
     * <pre>
     *装备强化等级
     * </pre>
     *
     * <code>required int32 equipLv = 9;</code>
     */
    public boolean hasEquipLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *装备强化等级
     * </pre>
     *
     * <code>required int32 equipLv = 9;</code>
     */
    public int getEquipLv() {
      return equipLv_;
    }
    /**
     * <pre>
     *装备强化等级
     * </pre>
     *
     * <code>required int32 equipLv = 9;</code>
     */
    public Builder setEquipLv(int value) {
      bitField0_ |= 0x00000020;
      equipLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *装备强化等级
     * </pre>
     *
     * <code>required int32 equipLv = 9;</code>
     */
    public Builder clearEquipLv() {
      bitField0_ = (bitField0_ & ~0x00000020);
      equipLv_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.EquipProps> props_ =
      java.util.Collections.emptyList();
    private void ensurePropsIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        props_ = new java.util.ArrayList<pb4client.EquipProps>(props_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.EquipProps, pb4client.EquipProps.Builder, pb4client.EquipPropsOrBuilder> propsBuilder_;

    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public java.util.List<pb4client.EquipProps> getPropsList() {
      if (propsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(props_);
      } else {
        return propsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public int getPropsCount() {
      if (propsBuilder_ == null) {
        return props_.size();
      } else {
        return propsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public pb4client.EquipProps getProps(int index) {
      if (propsBuilder_ == null) {
        return props_.get(index);
      } else {
        return propsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder setProps(
        int index, pb4client.EquipProps value) {
      if (propsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropsIsMutable();
        props_.set(index, value);
        onChanged();
      } else {
        propsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder setProps(
        int index, pb4client.EquipProps.Builder builderForValue) {
      if (propsBuilder_ == null) {
        ensurePropsIsMutable();
        props_.set(index, builderForValue.build());
        onChanged();
      } else {
        propsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder addProps(pb4client.EquipProps value) {
      if (propsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropsIsMutable();
        props_.add(value);
        onChanged();
      } else {
        propsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder addProps(
        int index, pb4client.EquipProps value) {
      if (propsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropsIsMutable();
        props_.add(index, value);
        onChanged();
      } else {
        propsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder addProps(
        pb4client.EquipProps.Builder builderForValue) {
      if (propsBuilder_ == null) {
        ensurePropsIsMutable();
        props_.add(builderForValue.build());
        onChanged();
      } else {
        propsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder addProps(
        int index, pb4client.EquipProps.Builder builderForValue) {
      if (propsBuilder_ == null) {
        ensurePropsIsMutable();
        props_.add(index, builderForValue.build());
        onChanged();
      } else {
        propsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder addAllProps(
        java.lang.Iterable<? extends pb4client.EquipProps> values) {
      if (propsBuilder_ == null) {
        ensurePropsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, props_);
        onChanged();
      } else {
        propsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder clearProps() {
      if (propsBuilder_ == null) {
        props_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        propsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public Builder removeProps(int index) {
      if (propsBuilder_ == null) {
        ensurePropsIsMutable();
        props_.remove(index);
        onChanged();
      } else {
        propsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public pb4client.EquipProps.Builder getPropsBuilder(
        int index) {
      return getPropsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public pb4client.EquipPropsOrBuilder getPropsOrBuilder(
        int index) {
      if (propsBuilder_ == null) {
        return props_.get(index);  } else {
        return propsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public java.util.List<? extends pb4client.EquipPropsOrBuilder> 
         getPropsOrBuilderList() {
      if (propsBuilder_ != null) {
        return propsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(props_);
      }
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public pb4client.EquipProps.Builder addPropsBuilder() {
      return getPropsFieldBuilder().addBuilder(
          pb4client.EquipProps.getDefaultInstance());
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public pb4client.EquipProps.Builder addPropsBuilder(
        int index) {
      return getPropsFieldBuilder().addBuilder(
          index, pb4client.EquipProps.getDefaultInstance());
    }
    /**
     * <pre>
     *装备属性
     * </pre>
     *
     * <code>repeated .client2server.EquipProps props = 10;</code>
     */
    public java.util.List<pb4client.EquipProps.Builder> 
         getPropsBuilderList() {
      return getPropsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.EquipProps, pb4client.EquipProps.Builder, pb4client.EquipPropsOrBuilder> 
        getPropsFieldBuilder() {
      if (propsBuilder_ == null) {
        propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.EquipProps, pb4client.EquipProps.Builder, pb4client.EquipPropsOrBuilder>(
                props_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        props_ = null;
      }
      return propsBuilder_;
    }

    private int equipExp_ ;
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>required int32 equipExp = 11;</code>
     */
    public boolean hasEquipExp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>required int32 equipExp = 11;</code>
     */
    public int getEquipExp() {
      return equipExp_;
    }
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>required int32 equipExp = 11;</code>
     */
    public Builder setEquipExp(int value) {
      bitField0_ |= 0x00000080;
      equipExp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>required int32 equipExp = 11;</code>
     */
    public Builder clearEquipExp() {
      bitField0_ = (bitField0_ & ~0x00000080);
      equipExp_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.KingEquipCardInfo> kingEquipCardInfos_ =
      java.util.Collections.emptyList();
    private void ensureKingEquipCardInfosIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        kingEquipCardInfos_ = new java.util.ArrayList<pb4client.KingEquipCardInfo>(kingEquipCardInfos_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.KingEquipCardInfo, pb4client.KingEquipCardInfo.Builder, pb4client.KingEquipCardInfoOrBuilder> kingEquipCardInfosBuilder_;

    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public java.util.List<pb4client.KingEquipCardInfo> getKingEquipCardInfosList() {
      if (kingEquipCardInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(kingEquipCardInfos_);
      } else {
        return kingEquipCardInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public int getKingEquipCardInfosCount() {
      if (kingEquipCardInfosBuilder_ == null) {
        return kingEquipCardInfos_.size();
      } else {
        return kingEquipCardInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public pb4client.KingEquipCardInfo getKingEquipCardInfos(int index) {
      if (kingEquipCardInfosBuilder_ == null) {
        return kingEquipCardInfos_.get(index);
      } else {
        return kingEquipCardInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder setKingEquipCardInfos(
        int index, pb4client.KingEquipCardInfo value) {
      if (kingEquipCardInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.set(index, value);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder setKingEquipCardInfos(
        int index, pb4client.KingEquipCardInfo.Builder builderForValue) {
      if (kingEquipCardInfosBuilder_ == null) {
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder addKingEquipCardInfos(pb4client.KingEquipCardInfo value) {
      if (kingEquipCardInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.add(value);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder addKingEquipCardInfos(
        int index, pb4client.KingEquipCardInfo value) {
      if (kingEquipCardInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.add(index, value);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder addKingEquipCardInfos(
        pb4client.KingEquipCardInfo.Builder builderForValue) {
      if (kingEquipCardInfosBuilder_ == null) {
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.add(builderForValue.build());
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder addKingEquipCardInfos(
        int index, pb4client.KingEquipCardInfo.Builder builderForValue) {
      if (kingEquipCardInfosBuilder_ == null) {
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder addAllKingEquipCardInfos(
        java.lang.Iterable<? extends pb4client.KingEquipCardInfo> values) {
      if (kingEquipCardInfosBuilder_ == null) {
        ensureKingEquipCardInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, kingEquipCardInfos_);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder clearKingEquipCardInfos() {
      if (kingEquipCardInfosBuilder_ == null) {
        kingEquipCardInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public Builder removeKingEquipCardInfos(int index) {
      if (kingEquipCardInfosBuilder_ == null) {
        ensureKingEquipCardInfosIsMutable();
        kingEquipCardInfos_.remove(index);
        onChanged();
      } else {
        kingEquipCardInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public pb4client.KingEquipCardInfo.Builder getKingEquipCardInfosBuilder(
        int index) {
      return getKingEquipCardInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public pb4client.KingEquipCardInfoOrBuilder getKingEquipCardInfosOrBuilder(
        int index) {
      if (kingEquipCardInfosBuilder_ == null) {
        return kingEquipCardInfos_.get(index);  } else {
        return kingEquipCardInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public java.util.List<? extends pb4client.KingEquipCardInfoOrBuilder> 
         getKingEquipCardInfosOrBuilderList() {
      if (kingEquipCardInfosBuilder_ != null) {
        return kingEquipCardInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(kingEquipCardInfos_);
      }
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public pb4client.KingEquipCardInfo.Builder addKingEquipCardInfosBuilder() {
      return getKingEquipCardInfosFieldBuilder().addBuilder(
          pb4client.KingEquipCardInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public pb4client.KingEquipCardInfo.Builder addKingEquipCardInfosBuilder(
        int index) {
      return getKingEquipCardInfosFieldBuilder().addBuilder(
          index, pb4client.KingEquipCardInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *君主装备的卡片信息
     * </pre>
     *
     * <code>repeated .client2server.KingEquipCardInfo kingEquipCardInfos = 12;</code>
     */
    public java.util.List<pb4client.KingEquipCardInfo.Builder> 
         getKingEquipCardInfosBuilderList() {
      return getKingEquipCardInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.KingEquipCardInfo, pb4client.KingEquipCardInfo.Builder, pb4client.KingEquipCardInfoOrBuilder> 
        getKingEquipCardInfosFieldBuilder() {
      if (kingEquipCardInfosBuilder_ == null) {
        kingEquipCardInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.KingEquipCardInfo, pb4client.KingEquipCardInfo.Builder, pb4client.KingEquipCardInfoOrBuilder>(
                kingEquipCardInfos_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        kingEquipCardInfos_ = null;
      }
      return kingEquipCardInfosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.BagInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.BagInfo)
  private static final pb4client.BagInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.BagInfo();
  }

  public static pb4client.BagInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<BagInfo>
      PARSER = new com.google.protobuf.AbstractParser<BagInfo>() {
    public BagInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new BagInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BagInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BagInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.BagInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

