// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *---------------------------------------------------------被侦察战报					      -----------------------------
 * </pre>
 *
 * Protobuf type {@code client2server.BeScoutReport}
 */
public  final class BeScoutReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.BeScoutReport)
    BeScoutReportOrBuilder {
  // Use BeScoutReport.newBuilder() to construct.
  private BeScoutReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BeScoutReport() {
    result_ = 0;
    cellType_ = 0;
    relicId_ = 0;
    strongholdLv_ = 0;
    resType_ = 0;
    resLv_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BeScoutReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            result_ = input.readInt32();
            break;
          }
          case 18: {
            pb4client.FightPlayerInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              subBuilder = playerInfo_.toBuilder();
            }
            playerInfo_ = input.readMessage(pb4client.FightPlayerInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(playerInfo_);
              playerInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            cellType_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            relicId_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            strongholdLv_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            resType_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            resLv_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_BeScoutReport_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_BeScoutReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.BeScoutReport.class, pb4client.BeScoutReport.Builder.class);
  }

  private int bitField0_;
  public static final int RESULT_FIELD_NUMBER = 1;
  private int result_;
  /**
   * <pre>
   *1 被侦察成功 2 被侦察失败
   * </pre>
   *
   * <code>required int32 result = 1;</code>
   */
  public boolean hasResult() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *1 被侦察成功 2 被侦察失败
   * </pre>
   *
   * <code>required int32 result = 1;</code>
   */
  public int getResult() {
    return result_;
  }

  public static final int PLAYERINFO_FIELD_NUMBER = 2;
  private pb4client.FightPlayerInfo playerInfo_;
  /**
   * <pre>
   *侦察玩家信息
   * </pre>
   *
   * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
   */
  public boolean hasPlayerInfo() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *侦察玩家信息
   * </pre>
   *
   * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
   */
  public pb4client.FightPlayerInfo getPlayerInfo() {
    return playerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : playerInfo_;
  }
  /**
   * <pre>
   *侦察玩家信息
   * </pre>
   *
   * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
   */
  public pb4client.FightPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
    return playerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : playerInfo_;
  }

  public static final int CELLTYPE_FIELD_NUMBER = 3;
  private int cellType_;
  /**
   * <pre>
   * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
   * </pre>
   *
   * <code>required int32 cellType = 3;</code>
   */
  public boolean hasCellType() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
   * </pre>
   *
   * <code>required int32 cellType = 3;</code>
   */
  public int getCellType() {
    return cellType_;
  }

  public static final int RELICID_FIELD_NUMBER = 4;
  private int relicId_;
  /**
   * <pre>
   * 遗迹Id
   * </pre>
   *
   * <code>optional int32 relicId = 4;</code>
   */
  public boolean hasRelicId() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 遗迹Id
   * </pre>
   *
   * <code>optional int32 relicId = 4;</code>
   */
  public int getRelicId() {
    return relicId_;
  }

  public static final int STRONGHOLDLV_FIELD_NUMBER = 5;
  private int strongholdLv_;
  /**
   * <pre>
   * 据点等级
   * </pre>
   *
   * <code>optional int32 strongholdLv = 5;</code>
   */
  public boolean hasStrongholdLv() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 据点等级
   * </pre>
   *
   * <code>optional int32 strongholdLv = 5;</code>
   */
  public int getStrongholdLv() {
    return strongholdLv_;
  }

  public static final int RESTYPE_FIELD_NUMBER = 6;
  private int resType_;
  /**
   * <pre>
   *资源类别
   * </pre>
   *
   * <code>optional int32 resType = 6;</code>
   */
  public boolean hasResType() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *资源类别
   * </pre>
   *
   * <code>optional int32 resType = 6;</code>
   */
  public int getResType() {
    return resType_;
  }

  public static final int RESLV_FIELD_NUMBER = 7;
  private int resLv_;
  /**
   * <pre>
   *资源点等级
   * </pre>
   *
   * <code>optional int32 resLv = 7;</code>
   */
  public boolean hasResLv() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *资源点等级
   * </pre>
   *
   * <code>optional int32 resLv = 7;</code>
   */
  public int getResLv() {
    return resLv_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasResult()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerInfo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCellType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, result_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getPlayerInfo());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, cellType_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, relicId_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, strongholdLv_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, resType_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, resLv_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, result_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPlayerInfo());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, cellType_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, relicId_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, strongholdLv_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, resType_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, resLv_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.BeScoutReport)) {
      return super.equals(obj);
    }
    pb4client.BeScoutReport other = (pb4client.BeScoutReport) obj;

    boolean result = true;
    result = result && (hasResult() == other.hasResult());
    if (hasResult()) {
      result = result && (getResult()
          == other.getResult());
    }
    result = result && (hasPlayerInfo() == other.hasPlayerInfo());
    if (hasPlayerInfo()) {
      result = result && getPlayerInfo()
          .equals(other.getPlayerInfo());
    }
    result = result && (hasCellType() == other.hasCellType());
    if (hasCellType()) {
      result = result && (getCellType()
          == other.getCellType());
    }
    result = result && (hasRelicId() == other.hasRelicId());
    if (hasRelicId()) {
      result = result && (getRelicId()
          == other.getRelicId());
    }
    result = result && (hasStrongholdLv() == other.hasStrongholdLv());
    if (hasStrongholdLv()) {
      result = result && (getStrongholdLv()
          == other.getStrongholdLv());
    }
    result = result && (hasResType() == other.hasResType());
    if (hasResType()) {
      result = result && (getResType()
          == other.getResType());
    }
    result = result && (hasResLv() == other.hasResLv());
    if (hasResLv()) {
      result = result && (getResLv()
          == other.getResLv());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasResult()) {
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult();
    }
    if (hasPlayerInfo()) {
      hash = (37 * hash) + PLAYERINFO_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerInfo().hashCode();
    }
    if (hasCellType()) {
      hash = (37 * hash) + CELLTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCellType();
    }
    if (hasRelicId()) {
      hash = (37 * hash) + RELICID_FIELD_NUMBER;
      hash = (53 * hash) + getRelicId();
    }
    if (hasStrongholdLv()) {
      hash = (37 * hash) + STRONGHOLDLV_FIELD_NUMBER;
      hash = (53 * hash) + getStrongholdLv();
    }
    if (hasResType()) {
      hash = (37 * hash) + RESTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getResType();
    }
    if (hasResLv()) {
      hash = (37 * hash) + RESLV_FIELD_NUMBER;
      hash = (53 * hash) + getResLv();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.BeScoutReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BeScoutReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BeScoutReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BeScoutReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BeScoutReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BeScoutReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BeScoutReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BeScoutReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BeScoutReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.BeScoutReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BeScoutReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BeScoutReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.BeScoutReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *---------------------------------------------------------被侦察战报					      -----------------------------
   * </pre>
   *
   * Protobuf type {@code client2server.BeScoutReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.BeScoutReport)
      pb4client.BeScoutReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_BeScoutReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_BeScoutReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.BeScoutReport.class, pb4client.BeScoutReport.Builder.class);
    }

    // Construct using pb4client.BeScoutReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPlayerInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      result_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (playerInfoBuilder_ == null) {
        playerInfo_ = null;
      } else {
        playerInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      cellType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      relicId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      strongholdLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      resType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      resLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_BeScoutReport_descriptor;
    }

    public pb4client.BeScoutReport getDefaultInstanceForType() {
      return pb4client.BeScoutReport.getDefaultInstance();
    }

    public pb4client.BeScoutReport build() {
      pb4client.BeScoutReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.BeScoutReport buildPartial() {
      pb4client.BeScoutReport result = new pb4client.BeScoutReport(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.result_ = result_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      if (playerInfoBuilder_ == null) {
        result.playerInfo_ = playerInfo_;
      } else {
        result.playerInfo_ = playerInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.cellType_ = cellType_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.relicId_ = relicId_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.strongholdLv_ = strongholdLv_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.resType_ = resType_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.resLv_ = resLv_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.BeScoutReport) {
        return mergeFrom((pb4client.BeScoutReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.BeScoutReport other) {
      if (other == pb4client.BeScoutReport.getDefaultInstance()) return this;
      if (other.hasResult()) {
        setResult(other.getResult());
      }
      if (other.hasPlayerInfo()) {
        mergePlayerInfo(other.getPlayerInfo());
      }
      if (other.hasCellType()) {
        setCellType(other.getCellType());
      }
      if (other.hasRelicId()) {
        setRelicId(other.getRelicId());
      }
      if (other.hasStrongholdLv()) {
        setStrongholdLv(other.getStrongholdLv());
      }
      if (other.hasResType()) {
        setResType(other.getResType());
      }
      if (other.hasResLv()) {
        setResLv(other.getResLv());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasResult()) {
        return false;
      }
      if (!hasPlayerInfo()) {
        return false;
      }
      if (!hasCellType()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.BeScoutReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.BeScoutReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int result_ ;
    /**
     * <pre>
     *1 被侦察成功 2 被侦察失败
     * </pre>
     *
     * <code>required int32 result = 1;</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *1 被侦察成功 2 被侦察失败
     * </pre>
     *
     * <code>required int32 result = 1;</code>
     */
    public int getResult() {
      return result_;
    }
    /**
     * <pre>
     *1 被侦察成功 2 被侦察失败
     * </pre>
     *
     * <code>required int32 result = 1;</code>
     */
    public Builder setResult(int value) {
      bitField0_ |= 0x00000001;
      result_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *1 被侦察成功 2 被侦察失败
     * </pre>
     *
     * <code>required int32 result = 1;</code>
     */
    public Builder clearResult() {
      bitField0_ = (bitField0_ & ~0x00000001);
      result_ = 0;
      onChanged();
      return this;
    }

    private pb4client.FightPlayerInfo playerInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder> playerInfoBuilder_;
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public boolean hasPlayerInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public pb4client.FightPlayerInfo getPlayerInfo() {
      if (playerInfoBuilder_ == null) {
        return playerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : playerInfo_;
      } else {
        return playerInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public Builder setPlayerInfo(pb4client.FightPlayerInfo value) {
      if (playerInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        playerInfo_ = value;
        onChanged();
      } else {
        playerInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public Builder setPlayerInfo(
        pb4client.FightPlayerInfo.Builder builderForValue) {
      if (playerInfoBuilder_ == null) {
        playerInfo_ = builderForValue.build();
        onChanged();
      } else {
        playerInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public Builder mergePlayerInfo(pb4client.FightPlayerInfo value) {
      if (playerInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            playerInfo_ != null &&
            playerInfo_ != pb4client.FightPlayerInfo.getDefaultInstance()) {
          playerInfo_ =
            pb4client.FightPlayerInfo.newBuilder(playerInfo_).mergeFrom(value).buildPartial();
        } else {
          playerInfo_ = value;
        }
        onChanged();
      } else {
        playerInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public Builder clearPlayerInfo() {
      if (playerInfoBuilder_ == null) {
        playerInfo_ = null;
        onChanged();
      } else {
        playerInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public pb4client.FightPlayerInfo.Builder getPlayerInfoBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getPlayerInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    public pb4client.FightPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
      if (playerInfoBuilder_ != null) {
        return playerInfoBuilder_.getMessageOrBuilder();
      } else {
        return playerInfo_ == null ?
            pb4client.FightPlayerInfo.getDefaultInstance() : playerInfo_;
      }
    }
    /**
     * <pre>
     *侦察玩家信息
     * </pre>
     *
     * <code>required .client2server.FightPlayerInfo playerInfo = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder> 
        getPlayerInfoFieldBuilder() {
      if (playerInfoBuilder_ == null) {
        playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder>(
                getPlayerInfo(),
                getParentForChildren(),
                isClean());
        playerInfo_ = null;
      }
      return playerInfoBuilder_;
    }

    private int cellType_ ;
    /**
     * <pre>
     * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
     * </pre>
     *
     * <code>required int32 cellType = 3;</code>
     */
    public boolean hasCellType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
     * </pre>
     *
     * <code>required int32 cellType = 3;</code>
     */
    public int getCellType() {
      return cellType_;
    }
    /**
     * <pre>
     * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
     * </pre>
     *
     * <code>required int32 cellType = 3;</code>
     */
    public Builder setCellType(int value) {
      bitField0_ |= 0x00000004;
      cellType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 侦察的地块类型 1 资源点 3 遗迹 4 玩家 5 奇观 6 空地 9 据点
     * </pre>
     *
     * <code>required int32 cellType = 3;</code>
     */
    public Builder clearCellType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cellType_ = 0;
      onChanged();
      return this;
    }

    private int relicId_ ;
    /**
     * <pre>
     * 遗迹Id
     * </pre>
     *
     * <code>optional int32 relicId = 4;</code>
     */
    public boolean hasRelicId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 遗迹Id
     * </pre>
     *
     * <code>optional int32 relicId = 4;</code>
     */
    public int getRelicId() {
      return relicId_;
    }
    /**
     * <pre>
     * 遗迹Id
     * </pre>
     *
     * <code>optional int32 relicId = 4;</code>
     */
    public Builder setRelicId(int value) {
      bitField0_ |= 0x00000008;
      relicId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹Id
     * </pre>
     *
     * <code>optional int32 relicId = 4;</code>
     */
    public Builder clearRelicId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      relicId_ = 0;
      onChanged();
      return this;
    }

    private int strongholdLv_ ;
    /**
     * <pre>
     * 据点等级
     * </pre>
     *
     * <code>optional int32 strongholdLv = 5;</code>
     */
    public boolean hasStrongholdLv() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 据点等级
     * </pre>
     *
     * <code>optional int32 strongholdLv = 5;</code>
     */
    public int getStrongholdLv() {
      return strongholdLv_;
    }
    /**
     * <pre>
     * 据点等级
     * </pre>
     *
     * <code>optional int32 strongholdLv = 5;</code>
     */
    public Builder setStrongholdLv(int value) {
      bitField0_ |= 0x00000010;
      strongholdLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 据点等级
     * </pre>
     *
     * <code>optional int32 strongholdLv = 5;</code>
     */
    public Builder clearStrongholdLv() {
      bitField0_ = (bitField0_ & ~0x00000010);
      strongholdLv_ = 0;
      onChanged();
      return this;
    }

    private int resType_ ;
    /**
     * <pre>
     *资源类别
     * </pre>
     *
     * <code>optional int32 resType = 6;</code>
     */
    public boolean hasResType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *资源类别
     * </pre>
     *
     * <code>optional int32 resType = 6;</code>
     */
    public int getResType() {
      return resType_;
    }
    /**
     * <pre>
     *资源类别
     * </pre>
     *
     * <code>optional int32 resType = 6;</code>
     */
    public Builder setResType(int value) {
      bitField0_ |= 0x00000020;
      resType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *资源类别
     * </pre>
     *
     * <code>optional int32 resType = 6;</code>
     */
    public Builder clearResType() {
      bitField0_ = (bitField0_ & ~0x00000020);
      resType_ = 0;
      onChanged();
      return this;
    }

    private int resLv_ ;
    /**
     * <pre>
     *资源点等级
     * </pre>
     *
     * <code>optional int32 resLv = 7;</code>
     */
    public boolean hasResLv() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *资源点等级
     * </pre>
     *
     * <code>optional int32 resLv = 7;</code>
     */
    public int getResLv() {
      return resLv_;
    }
    /**
     * <pre>
     *资源点等级
     * </pre>
     *
     * <code>optional int32 resLv = 7;</code>
     */
    public Builder setResLv(int value) {
      bitField0_ |= 0x00000040;
      resLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *资源点等级
     * </pre>
     *
     * <code>optional int32 resLv = 7;</code>
     */
    public Builder clearResLv() {
      bitField0_ = (bitField0_ & ~0x00000040);
      resLv_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.BeScoutReport)
  }

  // @@protoc_insertion_point(class_scope:client2server.BeScoutReport)
  private static final pb4client.BeScoutReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.BeScoutReport();
  }

  public static pb4client.BeScoutReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<BeScoutReport>
      PARSER = new com.google.protobuf.AbstractParser<BeScoutReport>() {
    public BeScoutReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new BeScoutReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BeScoutReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BeScoutReport> getParserForType() {
    return PARSER;
  }

  public pb4client.BeScoutReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

