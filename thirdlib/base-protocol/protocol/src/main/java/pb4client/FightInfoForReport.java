// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.FightInfoForReport}
 */
public  final class FightInfoForReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.FightInfoForReport)
    FightInfoForReportOrBuilder {
  // Use FightInfoForReport.newBuilder() to construct.
  private FightInfoForReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FightInfoForReport() {
    soliders_ = java.util.Collections.emptyList();
    killInfos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FightInfoForReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            pb4client.FightPlayerInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = fightPlayerInfo_.toBuilder();
            }
            fightPlayerInfo_ = input.readMessage(pb4client.FightPlayerInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(fightPlayerInfo_);
              fightPlayerInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              soliders_ = new java.util.ArrayList<pb4client.SoliderInfoForReport>();
              mutable_bitField0_ |= 0x00000002;
            }
            soliders_.add(
                input.readMessage(pb4client.SoliderInfoForReport.PARSER, extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              killInfos_ = new java.util.ArrayList<pb4client.KillInfoForReport>();
              mutable_bitField0_ |= 0x00000004;
            }
            killInfos_.add(
                input.readMessage(pb4client.KillInfoForReport.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        soliders_ = java.util.Collections.unmodifiableList(soliders_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        killInfos_ = java.util.Collections.unmodifiableList(killInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_FightInfoForReport_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_FightInfoForReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.FightInfoForReport.class, pb4client.FightInfoForReport.Builder.class);
  }

  private int bitField0_;
  public static final int FIGHTPLAYERINFO_FIELD_NUMBER = 1;
  private pb4client.FightPlayerInfo fightPlayerInfo_;
  /**
   * <pre>
   *玩家信息
   * </pre>
   *
   * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
   */
  public boolean hasFightPlayerInfo() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *玩家信息
   * </pre>
   *
   * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
   */
  public pb4client.FightPlayerInfo getFightPlayerInfo() {
    return fightPlayerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : fightPlayerInfo_;
  }
  /**
   * <pre>
   *玩家信息
   * </pre>
   *
   * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
   */
  public pb4client.FightPlayerInfoOrBuilder getFightPlayerInfoOrBuilder() {
    return fightPlayerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : fightPlayerInfo_;
  }

  public static final int SOLIDERS_FIELD_NUMBER = 3;
  private java.util.List<pb4client.SoliderInfoForReport> soliders_;
  /**
   * <pre>
   *玩家部队信息
   * </pre>
   *
   * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
   */
  public java.util.List<pb4client.SoliderInfoForReport> getSolidersList() {
    return soliders_;
  }
  /**
   * <pre>
   *玩家部队信息
   * </pre>
   *
   * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
   */
  public java.util.List<? extends pb4client.SoliderInfoForReportOrBuilder> 
      getSolidersOrBuilderList() {
    return soliders_;
  }
  /**
   * <pre>
   *玩家部队信息
   * </pre>
   *
   * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
   */
  public int getSolidersCount() {
    return soliders_.size();
  }
  /**
   * <pre>
   *玩家部队信息
   * </pre>
   *
   * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
   */
  public pb4client.SoliderInfoForReport getSoliders(int index) {
    return soliders_.get(index);
  }
  /**
   * <pre>
   *玩家部队信息
   * </pre>
   *
   * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
   */
  public pb4client.SoliderInfoForReportOrBuilder getSolidersOrBuilder(
      int index) {
    return soliders_.get(index);
  }

  public static final int KILLINFOS_FIELD_NUMBER = 4;
  private java.util.List<pb4client.KillInfoForReport> killInfos_;
  /**
   * <pre>
   *击杀信息
   * </pre>
   *
   * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
   */
  public java.util.List<pb4client.KillInfoForReport> getKillInfosList() {
    return killInfos_;
  }
  /**
   * <pre>
   *击杀信息
   * </pre>
   *
   * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
   */
  public java.util.List<? extends pb4client.KillInfoForReportOrBuilder> 
      getKillInfosOrBuilderList() {
    return killInfos_;
  }
  /**
   * <pre>
   *击杀信息
   * </pre>
   *
   * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
   */
  public int getKillInfosCount() {
    return killInfos_.size();
  }
  /**
   * <pre>
   *击杀信息
   * </pre>
   *
   * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
   */
  public pb4client.KillInfoForReport getKillInfos(int index) {
    return killInfos_.get(index);
  }
  /**
   * <pre>
   *击杀信息
   * </pre>
   *
   * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
   */
  public pb4client.KillInfoForReportOrBuilder getKillInfosOrBuilder(
      int index) {
    return killInfos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getSolidersCount(); i++) {
      if (!getSoliders(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getKillInfosCount(); i++) {
      if (!getKillInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getFightPlayerInfo());
    }
    for (int i = 0; i < soliders_.size(); i++) {
      output.writeMessage(3, soliders_.get(i));
    }
    for (int i = 0; i < killInfos_.size(); i++) {
      output.writeMessage(4, killInfos_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getFightPlayerInfo());
    }
    for (int i = 0; i < soliders_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, soliders_.get(i));
    }
    for (int i = 0; i < killInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, killInfos_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.FightInfoForReport)) {
      return super.equals(obj);
    }
    pb4client.FightInfoForReport other = (pb4client.FightInfoForReport) obj;

    boolean result = true;
    result = result && (hasFightPlayerInfo() == other.hasFightPlayerInfo());
    if (hasFightPlayerInfo()) {
      result = result && getFightPlayerInfo()
          .equals(other.getFightPlayerInfo());
    }
    result = result && getSolidersList()
        .equals(other.getSolidersList());
    result = result && getKillInfosList()
        .equals(other.getKillInfosList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFightPlayerInfo()) {
      hash = (37 * hash) + FIGHTPLAYERINFO_FIELD_NUMBER;
      hash = (53 * hash) + getFightPlayerInfo().hashCode();
    }
    if (getSolidersCount() > 0) {
      hash = (37 * hash) + SOLIDERS_FIELD_NUMBER;
      hash = (53 * hash) + getSolidersList().hashCode();
    }
    if (getKillInfosCount() > 0) {
      hash = (37 * hash) + KILLINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getKillInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.FightInfoForReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.FightInfoForReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.FightInfoForReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.FightInfoForReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.FightInfoForReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.FightInfoForReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.FightInfoForReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.FightInfoForReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.FightInfoForReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.FightInfoForReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.FightInfoForReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.FightInfoForReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.FightInfoForReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.FightInfoForReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.FightInfoForReport)
      pb4client.FightInfoForReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_FightInfoForReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_FightInfoForReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.FightInfoForReport.class, pb4client.FightInfoForReport.Builder.class);
    }

    // Construct using pb4client.FightInfoForReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFightPlayerInfoFieldBuilder();
        getSolidersFieldBuilder();
        getKillInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (fightPlayerInfoBuilder_ == null) {
        fightPlayerInfo_ = null;
      } else {
        fightPlayerInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (solidersBuilder_ == null) {
        soliders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        solidersBuilder_.clear();
      }
      if (killInfosBuilder_ == null) {
        killInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        killInfosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_FightInfoForReport_descriptor;
    }

    public pb4client.FightInfoForReport getDefaultInstanceForType() {
      return pb4client.FightInfoForReport.getDefaultInstance();
    }

    public pb4client.FightInfoForReport build() {
      pb4client.FightInfoForReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.FightInfoForReport buildPartial() {
      pb4client.FightInfoForReport result = new pb4client.FightInfoForReport(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (fightPlayerInfoBuilder_ == null) {
        result.fightPlayerInfo_ = fightPlayerInfo_;
      } else {
        result.fightPlayerInfo_ = fightPlayerInfoBuilder_.build();
      }
      if (solidersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          soliders_ = java.util.Collections.unmodifiableList(soliders_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.soliders_ = soliders_;
      } else {
        result.soliders_ = solidersBuilder_.build();
      }
      if (killInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          killInfos_ = java.util.Collections.unmodifiableList(killInfos_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.killInfos_ = killInfos_;
      } else {
        result.killInfos_ = killInfosBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.FightInfoForReport) {
        return mergeFrom((pb4client.FightInfoForReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.FightInfoForReport other) {
      if (other == pb4client.FightInfoForReport.getDefaultInstance()) return this;
      if (other.hasFightPlayerInfo()) {
        mergeFightPlayerInfo(other.getFightPlayerInfo());
      }
      if (solidersBuilder_ == null) {
        if (!other.soliders_.isEmpty()) {
          if (soliders_.isEmpty()) {
            soliders_ = other.soliders_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSolidersIsMutable();
            soliders_.addAll(other.soliders_);
          }
          onChanged();
        }
      } else {
        if (!other.soliders_.isEmpty()) {
          if (solidersBuilder_.isEmpty()) {
            solidersBuilder_.dispose();
            solidersBuilder_ = null;
            soliders_ = other.soliders_;
            bitField0_ = (bitField0_ & ~0x00000002);
            solidersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSolidersFieldBuilder() : null;
          } else {
            solidersBuilder_.addAllMessages(other.soliders_);
          }
        }
      }
      if (killInfosBuilder_ == null) {
        if (!other.killInfos_.isEmpty()) {
          if (killInfos_.isEmpty()) {
            killInfos_ = other.killInfos_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureKillInfosIsMutable();
            killInfos_.addAll(other.killInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.killInfos_.isEmpty()) {
          if (killInfosBuilder_.isEmpty()) {
            killInfosBuilder_.dispose();
            killInfosBuilder_ = null;
            killInfos_ = other.killInfos_;
            bitField0_ = (bitField0_ & ~0x00000004);
            killInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getKillInfosFieldBuilder() : null;
          } else {
            killInfosBuilder_.addAllMessages(other.killInfos_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      for (int i = 0; i < getSolidersCount(); i++) {
        if (!getSoliders(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getKillInfosCount(); i++) {
        if (!getKillInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.FightInfoForReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.FightInfoForReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private pb4client.FightPlayerInfo fightPlayerInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder> fightPlayerInfoBuilder_;
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public boolean hasFightPlayerInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public pb4client.FightPlayerInfo getFightPlayerInfo() {
      if (fightPlayerInfoBuilder_ == null) {
        return fightPlayerInfo_ == null ? pb4client.FightPlayerInfo.getDefaultInstance() : fightPlayerInfo_;
      } else {
        return fightPlayerInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public Builder setFightPlayerInfo(pb4client.FightPlayerInfo value) {
      if (fightPlayerInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fightPlayerInfo_ = value;
        onChanged();
      } else {
        fightPlayerInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public Builder setFightPlayerInfo(
        pb4client.FightPlayerInfo.Builder builderForValue) {
      if (fightPlayerInfoBuilder_ == null) {
        fightPlayerInfo_ = builderForValue.build();
        onChanged();
      } else {
        fightPlayerInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public Builder mergeFightPlayerInfo(pb4client.FightPlayerInfo value) {
      if (fightPlayerInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            fightPlayerInfo_ != null &&
            fightPlayerInfo_ != pb4client.FightPlayerInfo.getDefaultInstance()) {
          fightPlayerInfo_ =
            pb4client.FightPlayerInfo.newBuilder(fightPlayerInfo_).mergeFrom(value).buildPartial();
        } else {
          fightPlayerInfo_ = value;
        }
        onChanged();
      } else {
        fightPlayerInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public Builder clearFightPlayerInfo() {
      if (fightPlayerInfoBuilder_ == null) {
        fightPlayerInfo_ = null;
        onChanged();
      } else {
        fightPlayerInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public pb4client.FightPlayerInfo.Builder getFightPlayerInfoBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getFightPlayerInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    public pb4client.FightPlayerInfoOrBuilder getFightPlayerInfoOrBuilder() {
      if (fightPlayerInfoBuilder_ != null) {
        return fightPlayerInfoBuilder_.getMessageOrBuilder();
      } else {
        return fightPlayerInfo_ == null ?
            pb4client.FightPlayerInfo.getDefaultInstance() : fightPlayerInfo_;
      }
    }
    /**
     * <pre>
     *玩家信息
     * </pre>
     *
     * <code>optional .client2server.FightPlayerInfo fightPlayerInfo = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder> 
        getFightPlayerInfoFieldBuilder() {
      if (fightPlayerInfoBuilder_ == null) {
        fightPlayerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.FightPlayerInfo, pb4client.FightPlayerInfo.Builder, pb4client.FightPlayerInfoOrBuilder>(
                getFightPlayerInfo(),
                getParentForChildren(),
                isClean());
        fightPlayerInfo_ = null;
      }
      return fightPlayerInfoBuilder_;
    }

    private java.util.List<pb4client.SoliderInfoForReport> soliders_ =
      java.util.Collections.emptyList();
    private void ensureSolidersIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        soliders_ = new java.util.ArrayList<pb4client.SoliderInfoForReport>(soliders_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.SoliderInfoForReport, pb4client.SoliderInfoForReport.Builder, pb4client.SoliderInfoForReportOrBuilder> solidersBuilder_;

    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public java.util.List<pb4client.SoliderInfoForReport> getSolidersList() {
      if (solidersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(soliders_);
      } else {
        return solidersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public int getSolidersCount() {
      if (solidersBuilder_ == null) {
        return soliders_.size();
      } else {
        return solidersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public pb4client.SoliderInfoForReport getSoliders(int index) {
      if (solidersBuilder_ == null) {
        return soliders_.get(index);
      } else {
        return solidersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder setSoliders(
        int index, pb4client.SoliderInfoForReport value) {
      if (solidersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSolidersIsMutable();
        soliders_.set(index, value);
        onChanged();
      } else {
        solidersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder setSoliders(
        int index, pb4client.SoliderInfoForReport.Builder builderForValue) {
      if (solidersBuilder_ == null) {
        ensureSolidersIsMutable();
        soliders_.set(index, builderForValue.build());
        onChanged();
      } else {
        solidersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder addSoliders(pb4client.SoliderInfoForReport value) {
      if (solidersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSolidersIsMutable();
        soliders_.add(value);
        onChanged();
      } else {
        solidersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder addSoliders(
        int index, pb4client.SoliderInfoForReport value) {
      if (solidersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSolidersIsMutable();
        soliders_.add(index, value);
        onChanged();
      } else {
        solidersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder addSoliders(
        pb4client.SoliderInfoForReport.Builder builderForValue) {
      if (solidersBuilder_ == null) {
        ensureSolidersIsMutable();
        soliders_.add(builderForValue.build());
        onChanged();
      } else {
        solidersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder addSoliders(
        int index, pb4client.SoliderInfoForReport.Builder builderForValue) {
      if (solidersBuilder_ == null) {
        ensureSolidersIsMutable();
        soliders_.add(index, builderForValue.build());
        onChanged();
      } else {
        solidersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder addAllSoliders(
        java.lang.Iterable<? extends pb4client.SoliderInfoForReport> values) {
      if (solidersBuilder_ == null) {
        ensureSolidersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, soliders_);
        onChanged();
      } else {
        solidersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder clearSoliders() {
      if (solidersBuilder_ == null) {
        soliders_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        solidersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public Builder removeSoliders(int index) {
      if (solidersBuilder_ == null) {
        ensureSolidersIsMutable();
        soliders_.remove(index);
        onChanged();
      } else {
        solidersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public pb4client.SoliderInfoForReport.Builder getSolidersBuilder(
        int index) {
      return getSolidersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public pb4client.SoliderInfoForReportOrBuilder getSolidersOrBuilder(
        int index) {
      if (solidersBuilder_ == null) {
        return soliders_.get(index);  } else {
        return solidersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public java.util.List<? extends pb4client.SoliderInfoForReportOrBuilder> 
         getSolidersOrBuilderList() {
      if (solidersBuilder_ != null) {
        return solidersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(soliders_);
      }
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public pb4client.SoliderInfoForReport.Builder addSolidersBuilder() {
      return getSolidersFieldBuilder().addBuilder(
          pb4client.SoliderInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public pb4client.SoliderInfoForReport.Builder addSolidersBuilder(
        int index) {
      return getSolidersFieldBuilder().addBuilder(
          index, pb4client.SoliderInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     *玩家部队信息
     * </pre>
     *
     * <code>repeated .client2server.SoliderInfoForReport soliders = 3;</code>
     */
    public java.util.List<pb4client.SoliderInfoForReport.Builder> 
         getSolidersBuilderList() {
      return getSolidersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.SoliderInfoForReport, pb4client.SoliderInfoForReport.Builder, pb4client.SoliderInfoForReportOrBuilder> 
        getSolidersFieldBuilder() {
      if (solidersBuilder_ == null) {
        solidersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.SoliderInfoForReport, pb4client.SoliderInfoForReport.Builder, pb4client.SoliderInfoForReportOrBuilder>(
                soliders_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        soliders_ = null;
      }
      return solidersBuilder_;
    }

    private java.util.List<pb4client.KillInfoForReport> killInfos_ =
      java.util.Collections.emptyList();
    private void ensureKillInfosIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        killInfos_ = new java.util.ArrayList<pb4client.KillInfoForReport>(killInfos_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.KillInfoForReport, pb4client.KillInfoForReport.Builder, pb4client.KillInfoForReportOrBuilder> killInfosBuilder_;

    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public java.util.List<pb4client.KillInfoForReport> getKillInfosList() {
      if (killInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(killInfos_);
      } else {
        return killInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public int getKillInfosCount() {
      if (killInfosBuilder_ == null) {
        return killInfos_.size();
      } else {
        return killInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public pb4client.KillInfoForReport getKillInfos(int index) {
      if (killInfosBuilder_ == null) {
        return killInfos_.get(index);
      } else {
        return killInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder setKillInfos(
        int index, pb4client.KillInfoForReport value) {
      if (killInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKillInfosIsMutable();
        killInfos_.set(index, value);
        onChanged();
      } else {
        killInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder setKillInfos(
        int index, pb4client.KillInfoForReport.Builder builderForValue) {
      if (killInfosBuilder_ == null) {
        ensureKillInfosIsMutable();
        killInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        killInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder addKillInfos(pb4client.KillInfoForReport value) {
      if (killInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKillInfosIsMutable();
        killInfos_.add(value);
        onChanged();
      } else {
        killInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder addKillInfos(
        int index, pb4client.KillInfoForReport value) {
      if (killInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureKillInfosIsMutable();
        killInfos_.add(index, value);
        onChanged();
      } else {
        killInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder addKillInfos(
        pb4client.KillInfoForReport.Builder builderForValue) {
      if (killInfosBuilder_ == null) {
        ensureKillInfosIsMutable();
        killInfos_.add(builderForValue.build());
        onChanged();
      } else {
        killInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder addKillInfos(
        int index, pb4client.KillInfoForReport.Builder builderForValue) {
      if (killInfosBuilder_ == null) {
        ensureKillInfosIsMutable();
        killInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        killInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder addAllKillInfos(
        java.lang.Iterable<? extends pb4client.KillInfoForReport> values) {
      if (killInfosBuilder_ == null) {
        ensureKillInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, killInfos_);
        onChanged();
      } else {
        killInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder clearKillInfos() {
      if (killInfosBuilder_ == null) {
        killInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        killInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public Builder removeKillInfos(int index) {
      if (killInfosBuilder_ == null) {
        ensureKillInfosIsMutable();
        killInfos_.remove(index);
        onChanged();
      } else {
        killInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public pb4client.KillInfoForReport.Builder getKillInfosBuilder(
        int index) {
      return getKillInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public pb4client.KillInfoForReportOrBuilder getKillInfosOrBuilder(
        int index) {
      if (killInfosBuilder_ == null) {
        return killInfos_.get(index);  } else {
        return killInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public java.util.List<? extends pb4client.KillInfoForReportOrBuilder> 
         getKillInfosOrBuilderList() {
      if (killInfosBuilder_ != null) {
        return killInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(killInfos_);
      }
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public pb4client.KillInfoForReport.Builder addKillInfosBuilder() {
      return getKillInfosFieldBuilder().addBuilder(
          pb4client.KillInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public pb4client.KillInfoForReport.Builder addKillInfosBuilder(
        int index) {
      return getKillInfosFieldBuilder().addBuilder(
          index, pb4client.KillInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     *击杀信息
     * </pre>
     *
     * <code>repeated .client2server.KillInfoForReport killInfos = 4;</code>
     */
    public java.util.List<pb4client.KillInfoForReport.Builder> 
         getKillInfosBuilderList() {
      return getKillInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.KillInfoForReport, pb4client.KillInfoForReport.Builder, pb4client.KillInfoForReportOrBuilder> 
        getKillInfosFieldBuilder() {
      if (killInfosBuilder_ == null) {
        killInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.KillInfoForReport, pb4client.KillInfoForReport.Builder, pb4client.KillInfoForReportOrBuilder>(
                killInfos_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        killInfos_ = null;
      }
      return killInfosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.FightInfoForReport)
  }

  // @@protoc_insertion_point(class_scope:client2server.FightInfoForReport)
  private static final pb4client.FightInfoForReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.FightInfoForReport();
  }

  public static pb4client.FightInfoForReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<FightInfoForReport>
      PARSER = new com.google.protobuf.AbstractParser<FightInfoForReport>() {
    public FightInfoForReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new FightInfoForReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FightInfoForReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FightInfoForReport> getParserForType() {
    return PARSER;
  }

  public pb4client.FightInfoForReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

