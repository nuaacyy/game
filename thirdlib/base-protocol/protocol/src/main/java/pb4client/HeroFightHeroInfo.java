// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *英雄战英雄信息
 * </pre>
 *
 * Protobuf type {@code client2server.HeroFightHeroInfo}
 */
public  final class HeroFightHeroInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.HeroFightHeroInfo)
    HeroFightHeroInfoOrBuilder {
  // Use HeroFightHeroInfo.newBuilder() to construct.
  private HeroFightHeroInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HeroFightHeroInfo() {
    protoId_ = 0;
    lv_ = 0;
    rank_ = 0;
    star_ = 0;
    pos_ = 0;
    uniqueSkillList_ = java.util.Collections.emptyList();
    activeSkillList_ = java.util.Collections.emptyList();
    passiveSkillList_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HeroFightHeroInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            protoId_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            lv_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            rank_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            star_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            pos_ = input.readInt32();
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              uniqueSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            uniqueSkillList_.add(input.readInt32());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              uniqueSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              uniqueSkillList_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 56: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              activeSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000040;
            }
            activeSkillList_.add(input.readInt32());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              activeSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              activeSkillList_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 64: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              passiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            passiveSkillList_.add(input.readInt32());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              passiveSkillList_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              passiveSkillList_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        uniqueSkillList_ = java.util.Collections.unmodifiableList(uniqueSkillList_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        activeSkillList_ = java.util.Collections.unmodifiableList(activeSkillList_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        passiveSkillList_ = java.util.Collections.unmodifiableList(passiveSkillList_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_HeroFightHeroInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_HeroFightHeroInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.HeroFightHeroInfo.class, pb4client.HeroFightHeroInfo.Builder.class);
  }

  private int bitField0_;
  public static final int PROTOID_FIELD_NUMBER = 1;
  private int protoId_;
  /**
   * <pre>
   *英雄Id
   * </pre>
   *
   * <code>required int32 protoId = 1;</code>
   */
  public boolean hasProtoId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *英雄Id
   * </pre>
   *
   * <code>required int32 protoId = 1;</code>
   */
  public int getProtoId() {
    return protoId_;
  }

  public static final int LV_FIELD_NUMBER = 2;
  private int lv_;
  /**
   * <pre>
   *英雄等级
   * </pre>
   *
   * <code>required int32 lv = 2;</code>
   */
  public boolean hasLv() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *英雄等级
   * </pre>
   *
   * <code>required int32 lv = 2;</code>
   */
  public int getLv() {
    return lv_;
  }

  public static final int RANK_FIELD_NUMBER = 3;
  private int rank_;
  /**
   * <pre>
   *英雄爵位
   * </pre>
   *
   * <code>required int32 rank = 3;</code>
   */
  public boolean hasRank() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *英雄爵位
   * </pre>
   *
   * <code>required int32 rank = 3;</code>
   */
  public int getRank() {
    return rank_;
  }

  public static final int STAR_FIELD_NUMBER = 4;
  private int star_;
  /**
   * <pre>
   *英雄星级
   * </pre>
   *
   * <code>required int32 star = 4;</code>
   */
  public boolean hasStar() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *英雄星级
   * </pre>
   *
   * <code>required int32 star = 4;</code>
   */
  public int getStar() {
    return star_;
  }

  public static final int POS_FIELD_NUMBER = 5;
  private int pos_;
  /**
   * <pre>
   *英雄位置 (限定1-9)
   * </pre>
   *
   * <code>required int32 pos = 5;</code>
   */
  public boolean hasPos() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *英雄位置 (限定1-9)
   * </pre>
   *
   * <code>required int32 pos = 5;</code>
   */
  public int getPos() {
    return pos_;
  }

  public static final int UNIQUESKILLLIST_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Integer> uniqueSkillList_;
  /**
   * <pre>
   *大招技能列表（最多一个技能生效）
   * </pre>
   *
   * <code>repeated int32 uniqueSkillList = 6;</code>
   */
  public java.util.List<java.lang.Integer>
      getUniqueSkillListList() {
    return uniqueSkillList_;
  }
  /**
   * <pre>
   *大招技能列表（最多一个技能生效）
   * </pre>
   *
   * <code>repeated int32 uniqueSkillList = 6;</code>
   */
  public int getUniqueSkillListCount() {
    return uniqueSkillList_.size();
  }
  /**
   * <pre>
   *大招技能列表（最多一个技能生效）
   * </pre>
   *
   * <code>repeated int32 uniqueSkillList = 6;</code>
   */
  public int getUniqueSkillList(int index) {
    return uniqueSkillList_.get(index);
  }

  public static final int ACTIVESKILLLIST_FIELD_NUMBER = 7;
  private java.util.List<java.lang.Integer> activeSkillList_;
  /**
   * <pre>
   *主动技能列表（最多只有前两个技能生效）
   * </pre>
   *
   * <code>repeated int32 activeSkillList = 7;</code>
   */
  public java.util.List<java.lang.Integer>
      getActiveSkillListList() {
    return activeSkillList_;
  }
  /**
   * <pre>
   *主动技能列表（最多只有前两个技能生效）
   * </pre>
   *
   * <code>repeated int32 activeSkillList = 7;</code>
   */
  public int getActiveSkillListCount() {
    return activeSkillList_.size();
  }
  /**
   * <pre>
   *主动技能列表（最多只有前两个技能生效）
   * </pre>
   *
   * <code>repeated int32 activeSkillList = 7;</code>
   */
  public int getActiveSkillList(int index) {
    return activeSkillList_.get(index);
  }

  public static final int PASSIVESKILLLIST_FIELD_NUMBER = 8;
  private java.util.List<java.lang.Integer> passiveSkillList_;
  /**
   * <pre>
   *被动技能列表
   * </pre>
   *
   * <code>repeated int32 passiveSkillList = 8;</code>
   */
  public java.util.List<java.lang.Integer>
      getPassiveSkillListList() {
    return passiveSkillList_;
  }
  /**
   * <pre>
   *被动技能列表
   * </pre>
   *
   * <code>repeated int32 passiveSkillList = 8;</code>
   */
  public int getPassiveSkillListCount() {
    return passiveSkillList_.size();
  }
  /**
   * <pre>
   *被动技能列表
   * </pre>
   *
   * <code>repeated int32 passiveSkillList = 8;</code>
   */
  public int getPassiveSkillList(int index) {
    return passiveSkillList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasProtoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRank()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasStar()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPos()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, protoId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, lv_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, rank_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, star_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, pos_);
    }
    for (int i = 0; i < uniqueSkillList_.size(); i++) {
      output.writeInt32(6, uniqueSkillList_.get(i));
    }
    for (int i = 0; i < activeSkillList_.size(); i++) {
      output.writeInt32(7, activeSkillList_.get(i));
    }
    for (int i = 0; i < passiveSkillList_.size(); i++) {
      output.writeInt32(8, passiveSkillList_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, protoId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, lv_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, rank_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, star_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, pos_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < uniqueSkillList_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(uniqueSkillList_.get(i));
      }
      size += dataSize;
      size += 1 * getUniqueSkillListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < activeSkillList_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(activeSkillList_.get(i));
      }
      size += dataSize;
      size += 1 * getActiveSkillListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < passiveSkillList_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(passiveSkillList_.get(i));
      }
      size += dataSize;
      size += 1 * getPassiveSkillListList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.HeroFightHeroInfo)) {
      return super.equals(obj);
    }
    pb4client.HeroFightHeroInfo other = (pb4client.HeroFightHeroInfo) obj;

    boolean result = true;
    result = result && (hasProtoId() == other.hasProtoId());
    if (hasProtoId()) {
      result = result && (getProtoId()
          == other.getProtoId());
    }
    result = result && (hasLv() == other.hasLv());
    if (hasLv()) {
      result = result && (getLv()
          == other.getLv());
    }
    result = result && (hasRank() == other.hasRank());
    if (hasRank()) {
      result = result && (getRank()
          == other.getRank());
    }
    result = result && (hasStar() == other.hasStar());
    if (hasStar()) {
      result = result && (getStar()
          == other.getStar());
    }
    result = result && (hasPos() == other.hasPos());
    if (hasPos()) {
      result = result && (getPos()
          == other.getPos());
    }
    result = result && getUniqueSkillListList()
        .equals(other.getUniqueSkillListList());
    result = result && getActiveSkillListList()
        .equals(other.getActiveSkillListList());
    result = result && getPassiveSkillListList()
        .equals(other.getPassiveSkillListList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasProtoId()) {
      hash = (37 * hash) + PROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getProtoId();
    }
    if (hasLv()) {
      hash = (37 * hash) + LV_FIELD_NUMBER;
      hash = (53 * hash) + getLv();
    }
    if (hasRank()) {
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
    }
    if (hasStar()) {
      hash = (37 * hash) + STAR_FIELD_NUMBER;
      hash = (53 * hash) + getStar();
    }
    if (hasPos()) {
      hash = (37 * hash) + POS_FIELD_NUMBER;
      hash = (53 * hash) + getPos();
    }
    if (getUniqueSkillListCount() > 0) {
      hash = (37 * hash) + UNIQUESKILLLIST_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueSkillListList().hashCode();
    }
    if (getActiveSkillListCount() > 0) {
      hash = (37 * hash) + ACTIVESKILLLIST_FIELD_NUMBER;
      hash = (53 * hash) + getActiveSkillListList().hashCode();
    }
    if (getPassiveSkillListCount() > 0) {
      hash = (37 * hash) + PASSIVESKILLLIST_FIELD_NUMBER;
      hash = (53 * hash) + getPassiveSkillListList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.HeroFightHeroInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.HeroFightHeroInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.HeroFightHeroInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.HeroFightHeroInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.HeroFightHeroInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *英雄战英雄信息
   * </pre>
   *
   * Protobuf type {@code client2server.HeroFightHeroInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.HeroFightHeroInfo)
      pb4client.HeroFightHeroInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_HeroFightHeroInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_HeroFightHeroInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.HeroFightHeroInfo.class, pb4client.HeroFightHeroInfo.Builder.class);
    }

    // Construct using pb4client.HeroFightHeroInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      protoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      lv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      rank_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      star_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      pos_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      uniqueSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      activeSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      passiveSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_HeroFightHeroInfo_descriptor;
    }

    public pb4client.HeroFightHeroInfo getDefaultInstanceForType() {
      return pb4client.HeroFightHeroInfo.getDefaultInstance();
    }

    public pb4client.HeroFightHeroInfo build() {
      pb4client.HeroFightHeroInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.HeroFightHeroInfo buildPartial() {
      pb4client.HeroFightHeroInfo result = new pb4client.HeroFightHeroInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.protoId_ = protoId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.lv_ = lv_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.rank_ = rank_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.star_ = star_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.pos_ = pos_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        uniqueSkillList_ = java.util.Collections.unmodifiableList(uniqueSkillList_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.uniqueSkillList_ = uniqueSkillList_;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        activeSkillList_ = java.util.Collections.unmodifiableList(activeSkillList_);
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.activeSkillList_ = activeSkillList_;
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        passiveSkillList_ = java.util.Collections.unmodifiableList(passiveSkillList_);
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.passiveSkillList_ = passiveSkillList_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.HeroFightHeroInfo) {
        return mergeFrom((pb4client.HeroFightHeroInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.HeroFightHeroInfo other) {
      if (other == pb4client.HeroFightHeroInfo.getDefaultInstance()) return this;
      if (other.hasProtoId()) {
        setProtoId(other.getProtoId());
      }
      if (other.hasLv()) {
        setLv(other.getLv());
      }
      if (other.hasRank()) {
        setRank(other.getRank());
      }
      if (other.hasStar()) {
        setStar(other.getStar());
      }
      if (other.hasPos()) {
        setPos(other.getPos());
      }
      if (!other.uniqueSkillList_.isEmpty()) {
        if (uniqueSkillList_.isEmpty()) {
          uniqueSkillList_ = other.uniqueSkillList_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureUniqueSkillListIsMutable();
          uniqueSkillList_.addAll(other.uniqueSkillList_);
        }
        onChanged();
      }
      if (!other.activeSkillList_.isEmpty()) {
        if (activeSkillList_.isEmpty()) {
          activeSkillList_ = other.activeSkillList_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureActiveSkillListIsMutable();
          activeSkillList_.addAll(other.activeSkillList_);
        }
        onChanged();
      }
      if (!other.passiveSkillList_.isEmpty()) {
        if (passiveSkillList_.isEmpty()) {
          passiveSkillList_ = other.passiveSkillList_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensurePassiveSkillListIsMutable();
          passiveSkillList_.addAll(other.passiveSkillList_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasProtoId()) {
        return false;
      }
      if (!hasLv()) {
        return false;
      }
      if (!hasRank()) {
        return false;
      }
      if (!hasStar()) {
        return false;
      }
      if (!hasPos()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.HeroFightHeroInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.HeroFightHeroInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int protoId_ ;
    /**
     * <pre>
     *英雄Id
     * </pre>
     *
     * <code>required int32 protoId = 1;</code>
     */
    public boolean hasProtoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *英雄Id
     * </pre>
     *
     * <code>required int32 protoId = 1;</code>
     */
    public int getProtoId() {
      return protoId_;
    }
    /**
     * <pre>
     *英雄Id
     * </pre>
     *
     * <code>required int32 protoId = 1;</code>
     */
    public Builder setProtoId(int value) {
      bitField0_ |= 0x00000001;
      protoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *英雄Id
     * </pre>
     *
     * <code>required int32 protoId = 1;</code>
     */
    public Builder clearProtoId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      protoId_ = 0;
      onChanged();
      return this;
    }

    private int lv_ ;
    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>required int32 lv = 2;</code>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>required int32 lv = 2;</code>
     */
    public int getLv() {
      return lv_;
    }
    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>required int32 lv = 2;</code>
     */
    public Builder setLv(int value) {
      bitField0_ |= 0x00000002;
      lv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *英雄等级
     * </pre>
     *
     * <code>required int32 lv = 2;</code>
     */
    public Builder clearLv() {
      bitField0_ = (bitField0_ & ~0x00000002);
      lv_ = 0;
      onChanged();
      return this;
    }

    private int rank_ ;
    /**
     * <pre>
     *英雄爵位
     * </pre>
     *
     * <code>required int32 rank = 3;</code>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *英雄爵位
     * </pre>
     *
     * <code>required int32 rank = 3;</code>
     */
    public int getRank() {
      return rank_;
    }
    /**
     * <pre>
     *英雄爵位
     * </pre>
     *
     * <code>required int32 rank = 3;</code>
     */
    public Builder setRank(int value) {
      bitField0_ |= 0x00000004;
      rank_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *英雄爵位
     * </pre>
     *
     * <code>required int32 rank = 3;</code>
     */
    public Builder clearRank() {
      bitField0_ = (bitField0_ & ~0x00000004);
      rank_ = 0;
      onChanged();
      return this;
    }

    private int star_ ;
    /**
     * <pre>
     *英雄星级
     * </pre>
     *
     * <code>required int32 star = 4;</code>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *英雄星级
     * </pre>
     *
     * <code>required int32 star = 4;</code>
     */
    public int getStar() {
      return star_;
    }
    /**
     * <pre>
     *英雄星级
     * </pre>
     *
     * <code>required int32 star = 4;</code>
     */
    public Builder setStar(int value) {
      bitField0_ |= 0x00000008;
      star_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *英雄星级
     * </pre>
     *
     * <code>required int32 star = 4;</code>
     */
    public Builder clearStar() {
      bitField0_ = (bitField0_ & ~0x00000008);
      star_ = 0;
      onChanged();
      return this;
    }

    private int pos_ ;
    /**
     * <pre>
     *英雄位置 (限定1-9)
     * </pre>
     *
     * <code>required int32 pos = 5;</code>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *英雄位置 (限定1-9)
     * </pre>
     *
     * <code>required int32 pos = 5;</code>
     */
    public int getPos() {
      return pos_;
    }
    /**
     * <pre>
     *英雄位置 (限定1-9)
     * </pre>
     *
     * <code>required int32 pos = 5;</code>
     */
    public Builder setPos(int value) {
      bitField0_ |= 0x00000010;
      pos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *英雄位置 (限定1-9)
     * </pre>
     *
     * <code>required int32 pos = 5;</code>
     */
    public Builder clearPos() {
      bitField0_ = (bitField0_ & ~0x00000010);
      pos_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> uniqueSkillList_ = java.util.Collections.emptyList();
    private void ensureUniqueSkillListIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        uniqueSkillList_ = new java.util.ArrayList<java.lang.Integer>(uniqueSkillList_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getUniqueSkillListList() {
      return java.util.Collections.unmodifiableList(uniqueSkillList_);
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public int getUniqueSkillListCount() {
      return uniqueSkillList_.size();
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public int getUniqueSkillList(int index) {
      return uniqueSkillList_.get(index);
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public Builder setUniqueSkillList(
        int index, int value) {
      ensureUniqueSkillListIsMutable();
      uniqueSkillList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public Builder addUniqueSkillList(int value) {
      ensureUniqueSkillListIsMutable();
      uniqueSkillList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public Builder addAllUniqueSkillList(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUniqueSkillListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, uniqueSkillList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大招技能列表（最多一个技能生效）
     * </pre>
     *
     * <code>repeated int32 uniqueSkillList = 6;</code>
     */
    public Builder clearUniqueSkillList() {
      uniqueSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> activeSkillList_ = java.util.Collections.emptyList();
    private void ensureActiveSkillListIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        activeSkillList_ = new java.util.ArrayList<java.lang.Integer>(activeSkillList_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getActiveSkillListList() {
      return java.util.Collections.unmodifiableList(activeSkillList_);
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public int getActiveSkillListCount() {
      return activeSkillList_.size();
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public int getActiveSkillList(int index) {
      return activeSkillList_.get(index);
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public Builder setActiveSkillList(
        int index, int value) {
      ensureActiveSkillListIsMutable();
      activeSkillList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public Builder addActiveSkillList(int value) {
      ensureActiveSkillListIsMutable();
      activeSkillList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public Builder addAllActiveSkillList(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureActiveSkillListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, activeSkillList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *主动技能列表（最多只有前两个技能生效）
     * </pre>
     *
     * <code>repeated int32 activeSkillList = 7;</code>
     */
    public Builder clearActiveSkillList() {
      activeSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> passiveSkillList_ = java.util.Collections.emptyList();
    private void ensurePassiveSkillListIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        passiveSkillList_ = new java.util.ArrayList<java.lang.Integer>(passiveSkillList_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getPassiveSkillListList() {
      return java.util.Collections.unmodifiableList(passiveSkillList_);
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public int getPassiveSkillListCount() {
      return passiveSkillList_.size();
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public int getPassiveSkillList(int index) {
      return passiveSkillList_.get(index);
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public Builder setPassiveSkillList(
        int index, int value) {
      ensurePassiveSkillListIsMutable();
      passiveSkillList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public Builder addPassiveSkillList(int value) {
      ensurePassiveSkillListIsMutable();
      passiveSkillList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public Builder addAllPassiveSkillList(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePassiveSkillListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, passiveSkillList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被动技能列表
     * </pre>
     *
     * <code>repeated int32 passiveSkillList = 8;</code>
     */
    public Builder clearPassiveSkillList() {
      passiveSkillList_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.HeroFightHeroInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.HeroFightHeroInfo)
  private static final pb4client.HeroFightHeroInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.HeroFightHeroInfo();
  }

  public static pb4client.HeroFightHeroInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<HeroFightHeroInfo>
      PARSER = new com.google.protobuf.AbstractParser<HeroFightHeroInfo>() {
    public HeroFightHeroInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeroFightHeroInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HeroFightHeroInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HeroFightHeroInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.HeroFightHeroInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

