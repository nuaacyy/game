// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 * msgType = 3135
 * 服务器 -&gt; 客户端
 * 进游戏时的public服推送过来的数据(通过game)
 * </pre>
 *
 * Protobuf type {@code client2server.EnterGamePublicRt}
 */
public  final class EnterGamePublicRt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.EnterGamePublicRt)
    EnterGamePublicRtOrBuilder {
  // Use EnterGamePublicRt.newBuilder() to construct.
  private EnterGamePublicRt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EnterGamePublicRt() {
    relationShips_ = java.util.Collections.emptyList();
    members_ = java.util.Collections.emptyList();
    occupiedFlag_ = 0;
    occupiedById_ = 0L;
    occupiedByName_ = "";
    occupiedByShortName_ = "";
    occupiedByAt_ = 0;
    occupiedByPlayerId_ = 0L;
    occupiedByPlayerName_ = "";
    demandProtoId_ = 0;
    demandUnRead_ = 0;
    allianceMarks_ = java.util.Collections.emptyList();
    redPoints_ = java.util.Collections.emptyList();
    noReadTopic_ = 0;
    allianceWaijiaoTime_ = java.util.Collections.emptyList();
    rankLv_ = 0;
    chatAllianceInfos_ = java.util.Collections.emptyList();
    reqListNum_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EnterGamePublicRt(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              relationShips_ = new java.util.ArrayList<pb4client.RelationShip>();
              mutable_bitField0_ |= 0x00000001;
            }
            relationShips_.add(
                input.readMessage(pb4client.RelationShip.PARSER, extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              members_ = new java.util.ArrayList<pb4client.MemberPlayerInfo>();
              mutable_bitField0_ |= 0x00000002;
            }
            members_.add(
                input.readMessage(pb4client.MemberPlayerInfo.PARSER, extensionRegistry));
            break;
          }
          case 34: {
            pb4client.AllianceInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = allianceInfo_.toBuilder();
            }
            allianceInfo_ = input.readMessage(pb4client.AllianceInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(allianceInfo_);
              allianceInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 40: {
            bitField0_ |= 0x00000002;
            occupiedFlag_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000004;
            occupiedById_ = input.readInt64();
            break;
          }
          case 58: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000008;
            occupiedByName_ = bs;
            break;
          }
          case 66: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000010;
            occupiedByShortName_ = bs;
            break;
          }
          case 72: {
            bitField0_ |= 0x00000020;
            occupiedByAt_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000040;
            occupiedByPlayerId_ = input.readInt64();
            break;
          }
          case 90: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000080;
            occupiedByPlayerName_ = bs;
            break;
          }
          case 96: {
            bitField0_ |= 0x00000100;
            demandProtoId_ = input.readInt32();
            break;
          }
          case 104: {
            bitField0_ |= 0x00000200;
            demandUnRead_ = input.readInt32();
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              allianceMarks_ = new java.util.ArrayList<pb4client.AllianceMarkInfo>();
              mutable_bitField0_ |= 0x00001000;
            }
            allianceMarks_.add(
                input.readMessage(pb4client.AllianceMarkInfo.PARSER, extensionRegistry));
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
              redPoints_ = new java.util.ArrayList<pb4client.RedPoint>();
              mutable_bitField0_ |= 0x00002000;
            }
            redPoints_.add(
                input.readMessage(pb4client.RedPoint.PARSER, extensionRegistry));
            break;
          }
          case 128: {
            bitField0_ |= 0x00000400;
            noReadTopic_ = input.readInt32();
            break;
          }
          case 136: {
            if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
              allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00008000;
            }
            allianceWaijiaoTime_.add(input.readInt32());
            break;
          }
          case 138: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
              allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00008000;
            }
            while (input.getBytesUntilLimit() > 0) {
              allianceWaijiaoTime_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 146: {
            pb4client.AllianceLivenessVo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              subBuilder = allianceLivenessVo_.toBuilder();
            }
            allianceLivenessVo_ = input.readMessage(pb4client.AllianceLivenessVo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(allianceLivenessVo_);
              allianceLivenessVo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000800;
            break;
          }
          case 152: {
            bitField0_ |= 0x00001000;
            rankLv_ = input.readInt32();
            break;
          }
          case 170: {
            if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
              chatAllianceInfos_ = new java.util.ArrayList<pb4client.ChatInfo>();
              mutable_bitField0_ |= 0x00040000;
            }
            chatAllianceInfos_.add(
                input.readMessage(pb4client.ChatInfo.PARSER, extensionRegistry));
            break;
          }
          case 176: {
            bitField0_ |= 0x00002000;
            reqListNum_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        relationShips_ = java.util.Collections.unmodifiableList(relationShips_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        members_ = java.util.Collections.unmodifiableList(members_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
      }
      if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
        redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
      }
      if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
        allianceWaijiaoTime_ = java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
      }
      if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
        chatAllianceInfos_ = java.util.Collections.unmodifiableList(chatAllianceInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_EnterGamePublicRt_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_EnterGamePublicRt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.EnterGamePublicRt.class, pb4client.EnterGamePublicRt.Builder.class);
  }

  private int bitField0_;
  public static final int RELATIONSHIPS_FIELD_NUMBER = 2;
  private java.util.List<pb4client.RelationShip> relationShips_;
  /**
   * <pre>
   *联盟关系
   * </pre>
   *
   * <code>repeated .client2server.RelationShip relationShips = 2;</code>
   */
  public java.util.List<pb4client.RelationShip> getRelationShipsList() {
    return relationShips_;
  }
  /**
   * <pre>
   *联盟关系
   * </pre>
   *
   * <code>repeated .client2server.RelationShip relationShips = 2;</code>
   */
  public java.util.List<? extends pb4client.RelationShipOrBuilder> 
      getRelationShipsOrBuilderList() {
    return relationShips_;
  }
  /**
   * <pre>
   *联盟关系
   * </pre>
   *
   * <code>repeated .client2server.RelationShip relationShips = 2;</code>
   */
  public int getRelationShipsCount() {
    return relationShips_.size();
  }
  /**
   * <pre>
   *联盟关系
   * </pre>
   *
   * <code>repeated .client2server.RelationShip relationShips = 2;</code>
   */
  public pb4client.RelationShip getRelationShips(int index) {
    return relationShips_.get(index);
  }
  /**
   * <pre>
   *联盟关系
   * </pre>
   *
   * <code>repeated .client2server.RelationShip relationShips = 2;</code>
   */
  public pb4client.RelationShipOrBuilder getRelationShipsOrBuilder(
      int index) {
    return relationShips_.get(index);
  }

  public static final int MEMBERS_FIELD_NUMBER = 3;
  private java.util.List<pb4client.MemberPlayerInfo> members_;
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
   */
  public java.util.List<pb4client.MemberPlayerInfo> getMembersList() {
    return members_;
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
   */
  public java.util.List<? extends pb4client.MemberPlayerInfoOrBuilder> 
      getMembersOrBuilderList() {
    return members_;
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
   */
  public int getMembersCount() {
    return members_.size();
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
   */
  public pb4client.MemberPlayerInfo getMembers(int index) {
    return members_.get(index);
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
   */
  public pb4client.MemberPlayerInfoOrBuilder getMembersOrBuilder(
      int index) {
    return members_.get(index);
  }

  public static final int ALLIANCEINFO_FIELD_NUMBER = 4;
  private pb4client.AllianceInfo allianceInfo_;
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
   */
  public boolean hasAllianceInfo() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
   */
  public pb4client.AllianceInfo getAllianceInfo() {
    return allianceInfo_ == null ? pb4client.AllianceInfo.getDefaultInstance() : allianceInfo_;
  }
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
   */
  public pb4client.AllianceInfoOrBuilder getAllianceInfoOrBuilder() {
    return allianceInfo_ == null ? pb4client.AllianceInfo.getDefaultInstance() : allianceInfo_;
  }

  public static final int OCCUPIEDFLAG_FIELD_NUMBER = 5;
  private int occupiedFlag_;
  /**
   * <pre>
   *是否是首次沦陷提醒（本次）
   * </pre>
   *
   * <code>optional int32 occupiedFlag = 5;</code>
   */
  public boolean hasOccupiedFlag() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *是否是首次沦陷提醒（本次）
   * </pre>
   *
   * <code>optional int32 occupiedFlag = 5;</code>
   */
  public int getOccupiedFlag() {
    return occupiedFlag_;
  }

  public static final int OCCUPIEDBYID_FIELD_NUMBER = 6;
  private long occupiedById_;
  /**
   * <pre>
   *上级同盟ID
   * </pre>
   *
   * <code>optional int64 occupiedById = 6;</code>
   */
  public boolean hasOccupiedById() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *上级同盟ID
   * </pre>
   *
   * <code>optional int64 occupiedById = 6;</code>
   */
  public long getOccupiedById() {
    return occupiedById_;
  }

  public static final int OCCUPIEDBYNAME_FIELD_NUMBER = 7;
  private volatile java.lang.Object occupiedByName_;
  /**
   * <pre>
   *上级同盟名称
   * </pre>
   *
   * <code>optional string occupiedByName = 7;</code>
   */
  public boolean hasOccupiedByName() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *上级同盟名称
   * </pre>
   *
   * <code>optional string occupiedByName = 7;</code>
   */
  public java.lang.String getOccupiedByName() {
    java.lang.Object ref = occupiedByName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        occupiedByName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *上级同盟名称
   * </pre>
   *
   * <code>optional string occupiedByName = 7;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByNameBytes() {
    java.lang.Object ref = occupiedByName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCCUPIEDBYSHORTNAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object occupiedByShortName_;
  /**
   * <pre>
   *上级同盟简称
   * </pre>
   *
   * <code>optional string occupiedByShortName = 8;</code>
   */
  public boolean hasOccupiedByShortName() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *上级同盟简称
   * </pre>
   *
   * <code>optional string occupiedByShortName = 8;</code>
   */
  public java.lang.String getOccupiedByShortName() {
    java.lang.Object ref = occupiedByShortName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        occupiedByShortName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *上级同盟简称
   * </pre>
   *
   * <code>optional string occupiedByShortName = 8;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByShortNameBytes() {
    java.lang.Object ref = occupiedByShortName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByShortName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCCUPIEDBYAT_FIELD_NUMBER = 9;
  private int occupiedByAt_;
  /**
   * <pre>
   *被沦陷的时间
   * </pre>
   *
   * <code>optional int32 occupiedByAt = 9;</code>
   */
  public boolean hasOccupiedByAt() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *被沦陷的时间
   * </pre>
   *
   * <code>optional int32 occupiedByAt = 9;</code>
   */
  public int getOccupiedByAt() {
    return occupiedByAt_;
  }

  public static final int OCCUPIEDBYPLAYERID_FIELD_NUMBER = 10;
  private long occupiedByPlayerId_;
  /**
   * <pre>
   *攻击的玩家ID
   * </pre>
   *
   * <code>optional int64 occupiedByPlayerId = 10;</code>
   */
  public boolean hasOccupiedByPlayerId() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *攻击的玩家ID
   * </pre>
   *
   * <code>optional int64 occupiedByPlayerId = 10;</code>
   */
  public long getOccupiedByPlayerId() {
    return occupiedByPlayerId_;
  }

  public static final int OCCUPIEDBYPLAYERNAME_FIELD_NUMBER = 11;
  private volatile java.lang.Object occupiedByPlayerName_;
  /**
   * <pre>
   *攻击的玩家名字
   * </pre>
   *
   * <code>optional string occupiedByPlayerName = 11;</code>
   */
  public boolean hasOccupiedByPlayerName() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *攻击的玩家名字
   * </pre>
   *
   * <code>optional string occupiedByPlayerName = 11;</code>
   */
  public java.lang.String getOccupiedByPlayerName() {
    java.lang.Object ref = occupiedByPlayerName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        occupiedByPlayerName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *攻击的玩家名字
   * </pre>
   *
   * <code>optional string occupiedByPlayerName = 11;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByPlayerNameBytes() {
    java.lang.Object ref = occupiedByPlayerName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByPlayerName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEMANDPROTOID_FIELD_NUMBER = 12;
  private int demandProtoId_;
  /**
   * <pre>
   *请求捐卡的模版ID
   * </pre>
   *
   * <code>optional int32 demandProtoId = 12;</code>
   */
  public boolean hasDemandProtoId() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *请求捐卡的模版ID
   * </pre>
   *
   * <code>optional int32 demandProtoId = 12;</code>
   */
  public int getDemandProtoId() {
    return demandProtoId_;
  }

  public static final int DEMANDUNREAD_FIELD_NUMBER = 13;
  private int demandUnRead_;
  /**
   * <pre>
   *请求捐卡未读消息数量
   * </pre>
   *
   * <code>optional int32 demandUnRead = 13;</code>
   */
  public boolean hasDemandUnRead() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *请求捐卡未读消息数量
   * </pre>
   *
   * <code>optional int32 demandUnRead = 13;</code>
   */
  public int getDemandUnRead() {
    return demandUnRead_;
  }

  public static final int ALLIANCEMARKS_FIELD_NUMBER = 14;
  private java.util.List<pb4client.AllianceMarkInfo> allianceMarks_;
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
   */
  public java.util.List<pb4client.AllianceMarkInfo> getAllianceMarksList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
   */
  public java.util.List<? extends pb4client.AllianceMarkInfoOrBuilder> 
      getAllianceMarksOrBuilderList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
   */
  public int getAllianceMarksCount() {
    return allianceMarks_.size();
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
   */
  public pb4client.AllianceMarkInfo getAllianceMarks(int index) {
    return allianceMarks_.get(index);
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
   */
  public pb4client.AllianceMarkInfoOrBuilder getAllianceMarksOrBuilder(
      int index) {
    return allianceMarks_.get(index);
  }

  public static final int REDPOINTS_FIELD_NUMBER = 15;
  private java.util.List<pb4client.RedPoint> redPoints_;
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 15;</code>
   */
  public java.util.List<pb4client.RedPoint> getRedPointsList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 15;</code>
   */
  public java.util.List<? extends pb4client.RedPointOrBuilder> 
      getRedPointsOrBuilderList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 15;</code>
   */
  public int getRedPointsCount() {
    return redPoints_.size();
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 15;</code>
   */
  public pb4client.RedPoint getRedPoints(int index) {
    return redPoints_.get(index);
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 15;</code>
   */
  public pb4client.RedPointOrBuilder getRedPointsOrBuilder(
      int index) {
    return redPoints_.get(index);
  }

  public static final int NOREADTOPIC_FIELD_NUMBER = 16;
  private int noReadTopic_;
  /**
   * <pre>
   *是否有未读的联盟邮件主题
   * </pre>
   *
   * <code>optional int32 noReadTopic = 16;</code>
   */
  public boolean hasNoReadTopic() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   *是否有未读的联盟邮件主题
   * </pre>
   *
   * <code>optional int32 noReadTopic = 16;</code>
   */
  public int getNoReadTopic() {
    return noReadTopic_;
  }

  public static final int ALLIANCEWAIJIAOTIME_FIELD_NUMBER = 17;
  private java.util.List<java.lang.Integer> allianceWaijiaoTime_;
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 17;</code>
   */
  public java.util.List<java.lang.Integer>
      getAllianceWaijiaoTimeList() {
    return allianceWaijiaoTime_;
  }
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 17;</code>
   */
  public int getAllianceWaijiaoTimeCount() {
    return allianceWaijiaoTime_.size();
  }
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 17;</code>
   */
  public int getAllianceWaijiaoTime(int index) {
    return allianceWaijiaoTime_.get(index);
  }

  public static final int ALLIANCELIVENESSVO_FIELD_NUMBER = 18;
  private pb4client.AllianceLivenessVo allianceLivenessVo_;
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
   */
  public boolean hasAllianceLivenessVo() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
   */
  public pb4client.AllianceLivenessVo getAllianceLivenessVo() {
    return allianceLivenessVo_ == null ? pb4client.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
  }
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
   */
  public pb4client.AllianceLivenessVoOrBuilder getAllianceLivenessVoOrBuilder() {
    return allianceLivenessVo_ == null ? pb4client.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
  }

  public static final int RANKLV_FIELD_NUMBER = 19;
  private int rankLv_;
  /**
   * <pre>
   *联盟段位等级
   * </pre>
   *
   * <code>optional int32 rankLv = 19;</code>
   */
  public boolean hasRankLv() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <pre>
   *联盟段位等级
   * </pre>
   *
   * <code>optional int32 rankLv = 19;</code>
   */
  public int getRankLv() {
    return rankLv_;
  }

  public static final int CHATALLIANCEINFOS_FIELD_NUMBER = 21;
  private java.util.List<pb4client.ChatInfo> chatAllianceInfos_;
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
   */
  public java.util.List<pb4client.ChatInfo> getChatAllianceInfosList() {
    return chatAllianceInfos_;
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
   */
  public java.util.List<? extends pb4client.ChatInfoOrBuilder> 
      getChatAllianceInfosOrBuilderList() {
    return chatAllianceInfos_;
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
   */
  public int getChatAllianceInfosCount() {
    return chatAllianceInfos_.size();
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
   */
  public pb4client.ChatInfo getChatAllianceInfos(int index) {
    return chatAllianceInfos_.get(index);
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
   */
  public pb4client.ChatInfoOrBuilder getChatAllianceInfosOrBuilder(
      int index) {
    return chatAllianceInfos_.get(index);
  }

  public static final int REQLISTNUM_FIELD_NUMBER = 22;
  private int reqListNum_;
  /**
   * <pre>
   *申请加入联盟的玩家数量
   * </pre>
   *
   * <code>optional int32 reqListNum = 22;</code>
   */
  public boolean hasReqListNum() {
    return ((bitField0_ & 0x00002000) == 0x00002000);
  }
  /**
   * <pre>
   *申请加入联盟的玩家数量
   * </pre>
   *
   * <code>optional int32 reqListNum = 22;</code>
   */
  public int getReqListNum() {
    return reqListNum_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getRelationShipsCount(); i++) {
      if (!getRelationShips(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getMembersCount(); i++) {
      if (!getMembers(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasAllianceInfo()) {
      if (!getAllianceInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getAllianceMarksCount(); i++) {
      if (!getAllianceMarks(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getRedPointsCount(); i++) {
      if (!getRedPoints(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasAllianceLivenessVo()) {
      if (!getAllianceLivenessVo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getChatAllianceInfosCount(); i++) {
      if (!getChatAllianceInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < relationShips_.size(); i++) {
      output.writeMessage(2, relationShips_.get(i));
    }
    for (int i = 0; i < members_.size(); i++) {
      output.writeMessage(3, members_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(4, getAllianceInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(5, occupiedFlag_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(6, occupiedById_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, occupiedByName_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, occupiedByShortName_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(9, occupiedByAt_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(10, occupiedByPlayerId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, occupiedByPlayerName_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(12, demandProtoId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(13, demandUnRead_);
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      output.writeMessage(14, allianceMarks_.get(i));
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      output.writeMessage(15, redPoints_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(16, noReadTopic_);
    }
    for (int i = 0; i < allianceWaijiaoTime_.size(); i++) {
      output.writeInt32(17, allianceWaijiaoTime_.get(i));
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeMessage(18, getAllianceLivenessVo());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeInt32(19, rankLv_);
    }
    for (int i = 0; i < chatAllianceInfos_.size(); i++) {
      output.writeMessage(21, chatAllianceInfos_.get(i));
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      output.writeInt32(22, reqListNum_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < relationShips_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, relationShips_.get(i));
    }
    for (int i = 0; i < members_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, members_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAllianceInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, occupiedFlag_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, occupiedById_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, occupiedByName_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, occupiedByShortName_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, occupiedByAt_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, occupiedByPlayerId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, occupiedByPlayerName_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, demandProtoId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, demandUnRead_);
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, allianceMarks_.get(i));
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, redPoints_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, noReadTopic_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < allianceWaijiaoTime_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(allianceWaijiaoTime_.get(i));
      }
      size += dataSize;
      size += 2 * getAllianceWaijiaoTimeList().size();
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getAllianceLivenessVo());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, rankLv_);
    }
    for (int i = 0; i < chatAllianceInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, chatAllianceInfos_.get(i));
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, reqListNum_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.EnterGamePublicRt)) {
      return super.equals(obj);
    }
    pb4client.EnterGamePublicRt other = (pb4client.EnterGamePublicRt) obj;

    boolean result = true;
    result = result && getRelationShipsList()
        .equals(other.getRelationShipsList());
    result = result && getMembersList()
        .equals(other.getMembersList());
    result = result && (hasAllianceInfo() == other.hasAllianceInfo());
    if (hasAllianceInfo()) {
      result = result && getAllianceInfo()
          .equals(other.getAllianceInfo());
    }
    result = result && (hasOccupiedFlag() == other.hasOccupiedFlag());
    if (hasOccupiedFlag()) {
      result = result && (getOccupiedFlag()
          == other.getOccupiedFlag());
    }
    result = result && (hasOccupiedById() == other.hasOccupiedById());
    if (hasOccupiedById()) {
      result = result && (getOccupiedById()
          == other.getOccupiedById());
    }
    result = result && (hasOccupiedByName() == other.hasOccupiedByName());
    if (hasOccupiedByName()) {
      result = result && getOccupiedByName()
          .equals(other.getOccupiedByName());
    }
    result = result && (hasOccupiedByShortName() == other.hasOccupiedByShortName());
    if (hasOccupiedByShortName()) {
      result = result && getOccupiedByShortName()
          .equals(other.getOccupiedByShortName());
    }
    result = result && (hasOccupiedByAt() == other.hasOccupiedByAt());
    if (hasOccupiedByAt()) {
      result = result && (getOccupiedByAt()
          == other.getOccupiedByAt());
    }
    result = result && (hasOccupiedByPlayerId() == other.hasOccupiedByPlayerId());
    if (hasOccupiedByPlayerId()) {
      result = result && (getOccupiedByPlayerId()
          == other.getOccupiedByPlayerId());
    }
    result = result && (hasOccupiedByPlayerName() == other.hasOccupiedByPlayerName());
    if (hasOccupiedByPlayerName()) {
      result = result && getOccupiedByPlayerName()
          .equals(other.getOccupiedByPlayerName());
    }
    result = result && (hasDemandProtoId() == other.hasDemandProtoId());
    if (hasDemandProtoId()) {
      result = result && (getDemandProtoId()
          == other.getDemandProtoId());
    }
    result = result && (hasDemandUnRead() == other.hasDemandUnRead());
    if (hasDemandUnRead()) {
      result = result && (getDemandUnRead()
          == other.getDemandUnRead());
    }
    result = result && getAllianceMarksList()
        .equals(other.getAllianceMarksList());
    result = result && getRedPointsList()
        .equals(other.getRedPointsList());
    result = result && (hasNoReadTopic() == other.hasNoReadTopic());
    if (hasNoReadTopic()) {
      result = result && (getNoReadTopic()
          == other.getNoReadTopic());
    }
    result = result && getAllianceWaijiaoTimeList()
        .equals(other.getAllianceWaijiaoTimeList());
    result = result && (hasAllianceLivenessVo() == other.hasAllianceLivenessVo());
    if (hasAllianceLivenessVo()) {
      result = result && getAllianceLivenessVo()
          .equals(other.getAllianceLivenessVo());
    }
    result = result && (hasRankLv() == other.hasRankLv());
    if (hasRankLv()) {
      result = result && (getRankLv()
          == other.getRankLv());
    }
    result = result && getChatAllianceInfosList()
        .equals(other.getChatAllianceInfosList());
    result = result && (hasReqListNum() == other.hasReqListNum());
    if (hasReqListNum()) {
      result = result && (getReqListNum()
          == other.getReqListNum());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRelationShipsCount() > 0) {
      hash = (37 * hash) + RELATIONSHIPS_FIELD_NUMBER;
      hash = (53 * hash) + getRelationShipsList().hashCode();
    }
    if (getMembersCount() > 0) {
      hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
      hash = (53 * hash) + getMembersList().hashCode();
    }
    if (hasAllianceInfo()) {
      hash = (37 * hash) + ALLIANCEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceInfo().hashCode();
    }
    if (hasOccupiedFlag()) {
      hash = (37 * hash) + OCCUPIEDFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedFlag();
    }
    if (hasOccupiedById()) {
      hash = (37 * hash) + OCCUPIEDBYID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOccupiedById());
    }
    if (hasOccupiedByName()) {
      hash = (37 * hash) + OCCUPIEDBYNAME_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedByName().hashCode();
    }
    if (hasOccupiedByShortName()) {
      hash = (37 * hash) + OCCUPIEDBYSHORTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedByShortName().hashCode();
    }
    if (hasOccupiedByAt()) {
      hash = (37 * hash) + OCCUPIEDBYAT_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedByAt();
    }
    if (hasOccupiedByPlayerId()) {
      hash = (37 * hash) + OCCUPIEDBYPLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOccupiedByPlayerId());
    }
    if (hasOccupiedByPlayerName()) {
      hash = (37 * hash) + OCCUPIEDBYPLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedByPlayerName().hashCode();
    }
    if (hasDemandProtoId()) {
      hash = (37 * hash) + DEMANDPROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getDemandProtoId();
    }
    if (hasDemandUnRead()) {
      hash = (37 * hash) + DEMANDUNREAD_FIELD_NUMBER;
      hash = (53 * hash) + getDemandUnRead();
    }
    if (getAllianceMarksCount() > 0) {
      hash = (37 * hash) + ALLIANCEMARKS_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceMarksList().hashCode();
    }
    if (getRedPointsCount() > 0) {
      hash = (37 * hash) + REDPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getRedPointsList().hashCode();
    }
    if (hasNoReadTopic()) {
      hash = (37 * hash) + NOREADTOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getNoReadTopic();
    }
    if (getAllianceWaijiaoTimeCount() > 0) {
      hash = (37 * hash) + ALLIANCEWAIJIAOTIME_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceWaijiaoTimeList().hashCode();
    }
    if (hasAllianceLivenessVo()) {
      hash = (37 * hash) + ALLIANCELIVENESSVO_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceLivenessVo().hashCode();
    }
    if (hasRankLv()) {
      hash = (37 * hash) + RANKLV_FIELD_NUMBER;
      hash = (53 * hash) + getRankLv();
    }
    if (getChatAllianceInfosCount() > 0) {
      hash = (37 * hash) + CHATALLIANCEINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getChatAllianceInfosList().hashCode();
    }
    if (hasReqListNum()) {
      hash = (37 * hash) + REQLISTNUM_FIELD_NUMBER;
      hash = (53 * hash) + getReqListNum();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.EnterGamePublicRt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGamePublicRt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGamePublicRt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.EnterGamePublicRt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.EnterGamePublicRt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.EnterGamePublicRt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.EnterGamePublicRt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * msgType = 3135
   * 服务器 -&gt; 客户端
   * 进游戏时的public服推送过来的数据(通过game)
   * </pre>
   *
   * Protobuf type {@code client2server.EnterGamePublicRt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.EnterGamePublicRt)
      pb4client.EnterGamePublicRtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGamePublicRt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGamePublicRt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.EnterGamePublicRt.class, pb4client.EnterGamePublicRt.Builder.class);
    }

    // Construct using pb4client.EnterGamePublicRt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRelationShipsFieldBuilder();
        getMembersFieldBuilder();
        getAllianceInfoFieldBuilder();
        getAllianceMarksFieldBuilder();
        getRedPointsFieldBuilder();
        getAllianceLivenessVoFieldBuilder();
        getChatAllianceInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (relationShipsBuilder_ == null) {
        relationShips_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        relationShipsBuilder_.clear();
      }
      if (membersBuilder_ == null) {
        members_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        membersBuilder_.clear();
      }
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = null;
      } else {
        allianceInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      occupiedFlag_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      occupiedById_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      occupiedByName_ = "";
      bitField0_ = (bitField0_ & ~0x00000020);
      occupiedByShortName_ = "";
      bitField0_ = (bitField0_ & ~0x00000040);
      occupiedByAt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      occupiedByPlayerId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      occupiedByPlayerName_ = "";
      bitField0_ = (bitField0_ & ~0x00000200);
      demandProtoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      demandUnRead_ = 0;
      bitField0_ = (bitField0_ & ~0x00000800);
      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        allianceMarksBuilder_.clear();
      }
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
      } else {
        redPointsBuilder_.clear();
      }
      noReadTopic_ = 0;
      bitField0_ = (bitField0_ & ~0x00004000);
      allianceWaijiaoTime_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00008000);
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = null;
      } else {
        allianceLivenessVoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      rankLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00020000);
      if (chatAllianceInfosBuilder_ == null) {
        chatAllianceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
      } else {
        chatAllianceInfosBuilder_.clear();
      }
      reqListNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00080000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGamePublicRt_descriptor;
    }

    public pb4client.EnterGamePublicRt getDefaultInstanceForType() {
      return pb4client.EnterGamePublicRt.getDefaultInstance();
    }

    public pb4client.EnterGamePublicRt build() {
      pb4client.EnterGamePublicRt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.EnterGamePublicRt buildPartial() {
      pb4client.EnterGamePublicRt result = new pb4client.EnterGamePublicRt(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (relationShipsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          relationShips_ = java.util.Collections.unmodifiableList(relationShips_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.relationShips_ = relationShips_;
      } else {
        result.relationShips_ = relationShipsBuilder_.build();
      }
      if (membersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          members_ = java.util.Collections.unmodifiableList(members_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.members_ = members_;
      } else {
        result.members_ = membersBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000001;
      }
      if (allianceInfoBuilder_ == null) {
        result.allianceInfo_ = allianceInfo_;
      } else {
        result.allianceInfo_ = allianceInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000002;
      }
      result.occupiedFlag_ = occupiedFlag_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000004;
      }
      result.occupiedById_ = occupiedById_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000008;
      }
      result.occupiedByName_ = occupiedByName_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000010;
      }
      result.occupiedByShortName_ = occupiedByShortName_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000020;
      }
      result.occupiedByAt_ = occupiedByAt_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000040;
      }
      result.occupiedByPlayerId_ = occupiedByPlayerId_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000080;
      }
      result.occupiedByPlayerName_ = occupiedByPlayerName_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000100;
      }
      result.demandProtoId_ = demandProtoId_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000200;
      }
      result.demandUnRead_ = demandUnRead_;
      if (allianceMarksBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.allianceMarks_ = allianceMarks_;
      } else {
        result.allianceMarks_ = allianceMarksBuilder_.build();
      }
      if (redPointsBuilder_ == null) {
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.redPoints_ = redPoints_;
      } else {
        result.redPoints_ = redPointsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
        to_bitField0_ |= 0x00000400;
      }
      result.noReadTopic_ = noReadTopic_;
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        allianceWaijiaoTime_ = java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
        bitField0_ = (bitField0_ & ~0x00008000);
      }
      result.allianceWaijiaoTime_ = allianceWaijiaoTime_;
      if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
        to_bitField0_ |= 0x00000800;
      }
      if (allianceLivenessVoBuilder_ == null) {
        result.allianceLivenessVo_ = allianceLivenessVo_;
      } else {
        result.allianceLivenessVo_ = allianceLivenessVoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
        to_bitField0_ |= 0x00001000;
      }
      result.rankLv_ = rankLv_;
      if (chatAllianceInfosBuilder_ == null) {
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          chatAllianceInfos_ = java.util.Collections.unmodifiableList(chatAllianceInfos_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.chatAllianceInfos_ = chatAllianceInfos_;
      } else {
        result.chatAllianceInfos_ = chatAllianceInfosBuilder_.build();
      }
      if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
        to_bitField0_ |= 0x00002000;
      }
      result.reqListNum_ = reqListNum_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.EnterGamePublicRt) {
        return mergeFrom((pb4client.EnterGamePublicRt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.EnterGamePublicRt other) {
      if (other == pb4client.EnterGamePublicRt.getDefaultInstance()) return this;
      if (relationShipsBuilder_ == null) {
        if (!other.relationShips_.isEmpty()) {
          if (relationShips_.isEmpty()) {
            relationShips_ = other.relationShips_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRelationShipsIsMutable();
            relationShips_.addAll(other.relationShips_);
          }
          onChanged();
        }
      } else {
        if (!other.relationShips_.isEmpty()) {
          if (relationShipsBuilder_.isEmpty()) {
            relationShipsBuilder_.dispose();
            relationShipsBuilder_ = null;
            relationShips_ = other.relationShips_;
            bitField0_ = (bitField0_ & ~0x00000001);
            relationShipsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRelationShipsFieldBuilder() : null;
          } else {
            relationShipsBuilder_.addAllMessages(other.relationShips_);
          }
        }
      }
      if (membersBuilder_ == null) {
        if (!other.members_.isEmpty()) {
          if (members_.isEmpty()) {
            members_ = other.members_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMembersIsMutable();
            members_.addAll(other.members_);
          }
          onChanged();
        }
      } else {
        if (!other.members_.isEmpty()) {
          if (membersBuilder_.isEmpty()) {
            membersBuilder_.dispose();
            membersBuilder_ = null;
            members_ = other.members_;
            bitField0_ = (bitField0_ & ~0x00000002);
            membersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMembersFieldBuilder() : null;
          } else {
            membersBuilder_.addAllMessages(other.members_);
          }
        }
      }
      if (other.hasAllianceInfo()) {
        mergeAllianceInfo(other.getAllianceInfo());
      }
      if (other.hasOccupiedFlag()) {
        setOccupiedFlag(other.getOccupiedFlag());
      }
      if (other.hasOccupiedById()) {
        setOccupiedById(other.getOccupiedById());
      }
      if (other.hasOccupiedByName()) {
        bitField0_ |= 0x00000020;
        occupiedByName_ = other.occupiedByName_;
        onChanged();
      }
      if (other.hasOccupiedByShortName()) {
        bitField0_ |= 0x00000040;
        occupiedByShortName_ = other.occupiedByShortName_;
        onChanged();
      }
      if (other.hasOccupiedByAt()) {
        setOccupiedByAt(other.getOccupiedByAt());
      }
      if (other.hasOccupiedByPlayerId()) {
        setOccupiedByPlayerId(other.getOccupiedByPlayerId());
      }
      if (other.hasOccupiedByPlayerName()) {
        bitField0_ |= 0x00000200;
        occupiedByPlayerName_ = other.occupiedByPlayerName_;
        onChanged();
      }
      if (other.hasDemandProtoId()) {
        setDemandProtoId(other.getDemandProtoId());
      }
      if (other.hasDemandUnRead()) {
        setDemandUnRead(other.getDemandUnRead());
      }
      if (allianceMarksBuilder_ == null) {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarks_.isEmpty()) {
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureAllianceMarksIsMutable();
            allianceMarks_.addAll(other.allianceMarks_);
          }
          onChanged();
        }
      } else {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarksBuilder_.isEmpty()) {
            allianceMarksBuilder_.dispose();
            allianceMarksBuilder_ = null;
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00001000);
            allianceMarksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAllianceMarksFieldBuilder() : null;
          } else {
            allianceMarksBuilder_.addAllMessages(other.allianceMarks_);
          }
        }
      }
      if (redPointsBuilder_ == null) {
        if (!other.redPoints_.isEmpty()) {
          if (redPoints_.isEmpty()) {
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureRedPointsIsMutable();
            redPoints_.addAll(other.redPoints_);
          }
          onChanged();
        }
      } else {
        if (!other.redPoints_.isEmpty()) {
          if (redPointsBuilder_.isEmpty()) {
            redPointsBuilder_.dispose();
            redPointsBuilder_ = null;
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00002000);
            redPointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRedPointsFieldBuilder() : null;
          } else {
            redPointsBuilder_.addAllMessages(other.redPoints_);
          }
        }
      }
      if (other.hasNoReadTopic()) {
        setNoReadTopic(other.getNoReadTopic());
      }
      if (!other.allianceWaijiaoTime_.isEmpty()) {
        if (allianceWaijiaoTime_.isEmpty()) {
          allianceWaijiaoTime_ = other.allianceWaijiaoTime_;
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          ensureAllianceWaijiaoTimeIsMutable();
          allianceWaijiaoTime_.addAll(other.allianceWaijiaoTime_);
        }
        onChanged();
      }
      if (other.hasAllianceLivenessVo()) {
        mergeAllianceLivenessVo(other.getAllianceLivenessVo());
      }
      if (other.hasRankLv()) {
        setRankLv(other.getRankLv());
      }
      if (chatAllianceInfosBuilder_ == null) {
        if (!other.chatAllianceInfos_.isEmpty()) {
          if (chatAllianceInfos_.isEmpty()) {
            chatAllianceInfos_ = other.chatAllianceInfos_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureChatAllianceInfosIsMutable();
            chatAllianceInfos_.addAll(other.chatAllianceInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.chatAllianceInfos_.isEmpty()) {
          if (chatAllianceInfosBuilder_.isEmpty()) {
            chatAllianceInfosBuilder_.dispose();
            chatAllianceInfosBuilder_ = null;
            chatAllianceInfos_ = other.chatAllianceInfos_;
            bitField0_ = (bitField0_ & ~0x00040000);
            chatAllianceInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChatAllianceInfosFieldBuilder() : null;
          } else {
            chatAllianceInfosBuilder_.addAllMessages(other.chatAllianceInfos_);
          }
        }
      }
      if (other.hasReqListNum()) {
        setReqListNum(other.getReqListNum());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      for (int i = 0; i < getRelationShipsCount(); i++) {
        if (!getRelationShips(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getMembersCount(); i++) {
        if (!getMembers(i).isInitialized()) {
          return false;
        }
      }
      if (hasAllianceInfo()) {
        if (!getAllianceInfo().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getAllianceMarksCount(); i++) {
        if (!getAllianceMarks(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getRedPointsCount(); i++) {
        if (!getRedPoints(i).isInitialized()) {
          return false;
        }
      }
      if (hasAllianceLivenessVo()) {
        if (!getAllianceLivenessVo().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getChatAllianceInfosCount(); i++) {
        if (!getChatAllianceInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.EnterGamePublicRt parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.EnterGamePublicRt) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<pb4client.RelationShip> relationShips_ =
      java.util.Collections.emptyList();
    private void ensureRelationShipsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        relationShips_ = new java.util.ArrayList<pb4client.RelationShip>(relationShips_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RelationShip, pb4client.RelationShip.Builder, pb4client.RelationShipOrBuilder> relationShipsBuilder_;

    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public java.util.List<pb4client.RelationShip> getRelationShipsList() {
      if (relationShipsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relationShips_);
      } else {
        return relationShipsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public int getRelationShipsCount() {
      if (relationShipsBuilder_ == null) {
        return relationShips_.size();
      } else {
        return relationShipsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public pb4client.RelationShip getRelationShips(int index) {
      if (relationShipsBuilder_ == null) {
        return relationShips_.get(index);
      } else {
        return relationShipsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder setRelationShips(
        int index, pb4client.RelationShip value) {
      if (relationShipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationShipsIsMutable();
        relationShips_.set(index, value);
        onChanged();
      } else {
        relationShipsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder setRelationShips(
        int index, pb4client.RelationShip.Builder builderForValue) {
      if (relationShipsBuilder_ == null) {
        ensureRelationShipsIsMutable();
        relationShips_.set(index, builderForValue.build());
        onChanged();
      } else {
        relationShipsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder addRelationShips(pb4client.RelationShip value) {
      if (relationShipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationShipsIsMutable();
        relationShips_.add(value);
        onChanged();
      } else {
        relationShipsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder addRelationShips(
        int index, pb4client.RelationShip value) {
      if (relationShipsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationShipsIsMutable();
        relationShips_.add(index, value);
        onChanged();
      } else {
        relationShipsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder addRelationShips(
        pb4client.RelationShip.Builder builderForValue) {
      if (relationShipsBuilder_ == null) {
        ensureRelationShipsIsMutable();
        relationShips_.add(builderForValue.build());
        onChanged();
      } else {
        relationShipsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder addRelationShips(
        int index, pb4client.RelationShip.Builder builderForValue) {
      if (relationShipsBuilder_ == null) {
        ensureRelationShipsIsMutable();
        relationShips_.add(index, builderForValue.build());
        onChanged();
      } else {
        relationShipsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder addAllRelationShips(
        java.lang.Iterable<? extends pb4client.RelationShip> values) {
      if (relationShipsBuilder_ == null) {
        ensureRelationShipsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relationShips_);
        onChanged();
      } else {
        relationShipsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder clearRelationShips() {
      if (relationShipsBuilder_ == null) {
        relationShips_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        relationShipsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public Builder removeRelationShips(int index) {
      if (relationShipsBuilder_ == null) {
        ensureRelationShipsIsMutable();
        relationShips_.remove(index);
        onChanged();
      } else {
        relationShipsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public pb4client.RelationShip.Builder getRelationShipsBuilder(
        int index) {
      return getRelationShipsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public pb4client.RelationShipOrBuilder getRelationShipsOrBuilder(
        int index) {
      if (relationShipsBuilder_ == null) {
        return relationShips_.get(index);  } else {
        return relationShipsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public java.util.List<? extends pb4client.RelationShipOrBuilder> 
         getRelationShipsOrBuilderList() {
      if (relationShipsBuilder_ != null) {
        return relationShipsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relationShips_);
      }
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public pb4client.RelationShip.Builder addRelationShipsBuilder() {
      return getRelationShipsFieldBuilder().addBuilder(
          pb4client.RelationShip.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public pb4client.RelationShip.Builder addRelationShipsBuilder(
        int index) {
      return getRelationShipsFieldBuilder().addBuilder(
          index, pb4client.RelationShip.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟关系
     * </pre>
     *
     * <code>repeated .client2server.RelationShip relationShips = 2;</code>
     */
    public java.util.List<pb4client.RelationShip.Builder> 
         getRelationShipsBuilderList() {
      return getRelationShipsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RelationShip, pb4client.RelationShip.Builder, pb4client.RelationShipOrBuilder> 
        getRelationShipsFieldBuilder() {
      if (relationShipsBuilder_ == null) {
        relationShipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.RelationShip, pb4client.RelationShip.Builder, pb4client.RelationShipOrBuilder>(
                relationShips_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        relationShips_ = null;
      }
      return relationShipsBuilder_;
    }

    private java.util.List<pb4client.MemberPlayerInfo> members_ =
      java.util.Collections.emptyList();
    private void ensureMembersIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        members_ = new java.util.ArrayList<pb4client.MemberPlayerInfo>(members_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.MemberPlayerInfo, pb4client.MemberPlayerInfo.Builder, pb4client.MemberPlayerInfoOrBuilder> membersBuilder_;

    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public java.util.List<pb4client.MemberPlayerInfo> getMembersList() {
      if (membersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(members_);
      } else {
        return membersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public int getMembersCount() {
      if (membersBuilder_ == null) {
        return members_.size();
      } else {
        return membersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public pb4client.MemberPlayerInfo getMembers(int index) {
      if (membersBuilder_ == null) {
        return members_.get(index);
      } else {
        return membersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder setMembers(
        int index, pb4client.MemberPlayerInfo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.set(index, value);
        onChanged();
      } else {
        membersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder setMembers(
        int index, pb4client.MemberPlayerInfo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.set(index, builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder addMembers(pb4client.MemberPlayerInfo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.add(value);
        onChanged();
      } else {
        membersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder addMembers(
        int index, pb4client.MemberPlayerInfo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.add(index, value);
        onChanged();
      } else {
        membersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder addMembers(
        pb4client.MemberPlayerInfo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.add(builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder addMembers(
        int index, pb4client.MemberPlayerInfo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.add(index, builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder addAllMembers(
        java.lang.Iterable<? extends pb4client.MemberPlayerInfo> values) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, members_);
        onChanged();
      } else {
        membersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder clearMembers() {
      if (membersBuilder_ == null) {
        members_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        membersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public Builder removeMembers(int index) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.remove(index);
        onChanged();
      } else {
        membersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public pb4client.MemberPlayerInfo.Builder getMembersBuilder(
        int index) {
      return getMembersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public pb4client.MemberPlayerInfoOrBuilder getMembersOrBuilder(
        int index) {
      if (membersBuilder_ == null) {
        return members_.get(index);  } else {
        return membersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public java.util.List<? extends pb4client.MemberPlayerInfoOrBuilder> 
         getMembersOrBuilderList() {
      if (membersBuilder_ != null) {
        return membersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(members_);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public pb4client.MemberPlayerInfo.Builder addMembersBuilder() {
      return getMembersFieldBuilder().addBuilder(
          pb4client.MemberPlayerInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public pb4client.MemberPlayerInfo.Builder addMembersBuilder(
        int index) {
      return getMembersFieldBuilder().addBuilder(
          index, pb4client.MemberPlayerInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .client2server.MemberPlayerInfo members = 3;</code>
     */
    public java.util.List<pb4client.MemberPlayerInfo.Builder> 
         getMembersBuilderList() {
      return getMembersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.MemberPlayerInfo, pb4client.MemberPlayerInfo.Builder, pb4client.MemberPlayerInfoOrBuilder> 
        getMembersFieldBuilder() {
      if (membersBuilder_ == null) {
        membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.MemberPlayerInfo, pb4client.MemberPlayerInfo.Builder, pb4client.MemberPlayerInfoOrBuilder>(
                members_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        members_ = null;
      }
      return membersBuilder_;
    }

    private pb4client.AllianceInfo allianceInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.AllianceInfo, pb4client.AllianceInfo.Builder, pb4client.AllianceInfoOrBuilder> allianceInfoBuilder_;
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public boolean hasAllianceInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public pb4client.AllianceInfo getAllianceInfo() {
      if (allianceInfoBuilder_ == null) {
        return allianceInfo_ == null ? pb4client.AllianceInfo.getDefaultInstance() : allianceInfo_;
      } else {
        return allianceInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public Builder setAllianceInfo(pb4client.AllianceInfo value) {
      if (allianceInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allianceInfo_ = value;
        onChanged();
      } else {
        allianceInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public Builder setAllianceInfo(
        pb4client.AllianceInfo.Builder builderForValue) {
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = builderForValue.build();
        onChanged();
      } else {
        allianceInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public Builder mergeAllianceInfo(pb4client.AllianceInfo value) {
      if (allianceInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            allianceInfo_ != null &&
            allianceInfo_ != pb4client.AllianceInfo.getDefaultInstance()) {
          allianceInfo_ =
            pb4client.AllianceInfo.newBuilder(allianceInfo_).mergeFrom(value).buildPartial();
        } else {
          allianceInfo_ = value;
        }
        onChanged();
      } else {
        allianceInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public Builder clearAllianceInfo() {
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = null;
        onChanged();
      } else {
        allianceInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public pb4client.AllianceInfo.Builder getAllianceInfoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getAllianceInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    public pb4client.AllianceInfoOrBuilder getAllianceInfoOrBuilder() {
      if (allianceInfoBuilder_ != null) {
        return allianceInfoBuilder_.getMessageOrBuilder();
      } else {
        return allianceInfo_ == null ?
            pb4client.AllianceInfo.getDefaultInstance() : allianceInfo_;
      }
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>optional .client2server.AllianceInfo allianceInfo = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.AllianceInfo, pb4client.AllianceInfo.Builder, pb4client.AllianceInfoOrBuilder> 
        getAllianceInfoFieldBuilder() {
      if (allianceInfoBuilder_ == null) {
        allianceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.AllianceInfo, pb4client.AllianceInfo.Builder, pb4client.AllianceInfoOrBuilder>(
                getAllianceInfo(),
                getParentForChildren(),
                isClean());
        allianceInfo_ = null;
      }
      return allianceInfoBuilder_;
    }

    private int occupiedFlag_ ;
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>optional int32 occupiedFlag = 5;</code>
     */
    public boolean hasOccupiedFlag() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>optional int32 occupiedFlag = 5;</code>
     */
    public int getOccupiedFlag() {
      return occupiedFlag_;
    }
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>optional int32 occupiedFlag = 5;</code>
     */
    public Builder setOccupiedFlag(int value) {
      bitField0_ |= 0x00000008;
      occupiedFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>optional int32 occupiedFlag = 5;</code>
     */
    public Builder clearOccupiedFlag() {
      bitField0_ = (bitField0_ & ~0x00000008);
      occupiedFlag_ = 0;
      onChanged();
      return this;
    }

    private long occupiedById_ ;
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>optional int64 occupiedById = 6;</code>
     */
    public boolean hasOccupiedById() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>optional int64 occupiedById = 6;</code>
     */
    public long getOccupiedById() {
      return occupiedById_;
    }
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>optional int64 occupiedById = 6;</code>
     */
    public Builder setOccupiedById(long value) {
      bitField0_ |= 0x00000010;
      occupiedById_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>optional int64 occupiedById = 6;</code>
     */
    public Builder clearOccupiedById() {
      bitField0_ = (bitField0_ & ~0x00000010);
      occupiedById_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByName_ = "";
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public boolean hasOccupiedByName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public java.lang.String getOccupiedByName() {
      java.lang.Object ref = occupiedByName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          occupiedByName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByNameBytes() {
      java.lang.Object ref = occupiedByName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public Builder setOccupiedByName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      occupiedByName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public Builder clearOccupiedByName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      occupiedByName_ = getDefaultInstance().getOccupiedByName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>optional string occupiedByName = 7;</code>
     */
    public Builder setOccupiedByNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      occupiedByName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByShortName_ = "";
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public boolean hasOccupiedByShortName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public java.lang.String getOccupiedByShortName() {
      java.lang.Object ref = occupiedByShortName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          occupiedByShortName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByShortNameBytes() {
      java.lang.Object ref = occupiedByShortName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByShortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public Builder setOccupiedByShortName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      occupiedByShortName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public Builder clearOccupiedByShortName() {
      bitField0_ = (bitField0_ & ~0x00000040);
      occupiedByShortName_ = getDefaultInstance().getOccupiedByShortName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>optional string occupiedByShortName = 8;</code>
     */
    public Builder setOccupiedByShortNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      occupiedByShortName_ = value;
      onChanged();
      return this;
    }

    private int occupiedByAt_ ;
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>optional int32 occupiedByAt = 9;</code>
     */
    public boolean hasOccupiedByAt() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>optional int32 occupiedByAt = 9;</code>
     */
    public int getOccupiedByAt() {
      return occupiedByAt_;
    }
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>optional int32 occupiedByAt = 9;</code>
     */
    public Builder setOccupiedByAt(int value) {
      bitField0_ |= 0x00000080;
      occupiedByAt_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>optional int32 occupiedByAt = 9;</code>
     */
    public Builder clearOccupiedByAt() {
      bitField0_ = (bitField0_ & ~0x00000080);
      occupiedByAt_ = 0;
      onChanged();
      return this;
    }

    private long occupiedByPlayerId_ ;
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>optional int64 occupiedByPlayerId = 10;</code>
     */
    public boolean hasOccupiedByPlayerId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>optional int64 occupiedByPlayerId = 10;</code>
     */
    public long getOccupiedByPlayerId() {
      return occupiedByPlayerId_;
    }
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>optional int64 occupiedByPlayerId = 10;</code>
     */
    public Builder setOccupiedByPlayerId(long value) {
      bitField0_ |= 0x00000100;
      occupiedByPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>optional int64 occupiedByPlayerId = 10;</code>
     */
    public Builder clearOccupiedByPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000100);
      occupiedByPlayerId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByPlayerName_ = "";
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public boolean hasOccupiedByPlayerName() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public java.lang.String getOccupiedByPlayerName() {
      java.lang.Object ref = occupiedByPlayerName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          occupiedByPlayerName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByPlayerNameBytes() {
      java.lang.Object ref = occupiedByPlayerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByPlayerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public Builder setOccupiedByPlayerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      occupiedByPlayerName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public Builder clearOccupiedByPlayerName() {
      bitField0_ = (bitField0_ & ~0x00000200);
      occupiedByPlayerName_ = getDefaultInstance().getOccupiedByPlayerName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>optional string occupiedByPlayerName = 11;</code>
     */
    public Builder setOccupiedByPlayerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
      occupiedByPlayerName_ = value;
      onChanged();
      return this;
    }

    private int demandProtoId_ ;
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>optional int32 demandProtoId = 12;</code>
     */
    public boolean hasDemandProtoId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>optional int32 demandProtoId = 12;</code>
     */
    public int getDemandProtoId() {
      return demandProtoId_;
    }
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>optional int32 demandProtoId = 12;</code>
     */
    public Builder setDemandProtoId(int value) {
      bitField0_ |= 0x00000400;
      demandProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>optional int32 demandProtoId = 12;</code>
     */
    public Builder clearDemandProtoId() {
      bitField0_ = (bitField0_ & ~0x00000400);
      demandProtoId_ = 0;
      onChanged();
      return this;
    }

    private int demandUnRead_ ;
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>optional int32 demandUnRead = 13;</code>
     */
    public boolean hasDemandUnRead() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>optional int32 demandUnRead = 13;</code>
     */
    public int getDemandUnRead() {
      return demandUnRead_;
    }
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>optional int32 demandUnRead = 13;</code>
     */
    public Builder setDemandUnRead(int value) {
      bitField0_ |= 0x00000800;
      demandUnRead_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>optional int32 demandUnRead = 13;</code>
     */
    public Builder clearDemandUnRead() {
      bitField0_ = (bitField0_ & ~0x00000800);
      demandUnRead_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.AllianceMarkInfo> allianceMarks_ =
      java.util.Collections.emptyList();
    private void ensureAllianceMarksIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        allianceMarks_ = new java.util.ArrayList<pb4client.AllianceMarkInfo>(allianceMarks_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder> allianceMarksBuilder_;

    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public java.util.List<pb4client.AllianceMarkInfo> getAllianceMarksList() {
      if (allianceMarksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      } else {
        return allianceMarksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public int getAllianceMarksCount() {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.size();
      } else {
        return allianceMarksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public pb4client.AllianceMarkInfo getAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);
      } else {
        return allianceMarksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder addAllianceMarks(pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder addAllianceMarks(
        pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder addAllAllianceMarks(
        java.lang.Iterable<? extends pb4client.AllianceMarkInfo> values) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allianceMarks_);
        onChanged();
      } else {
        allianceMarksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder clearAllianceMarks() {
      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        allianceMarksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public Builder removeAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.remove(index);
        onChanged();
      } else {
        allianceMarksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public pb4client.AllianceMarkInfo.Builder getAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public pb4client.AllianceMarkInfoOrBuilder getAllianceMarksOrBuilder(
        int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);  } else {
        return allianceMarksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public java.util.List<? extends pb4client.AllianceMarkInfoOrBuilder> 
         getAllianceMarksOrBuilderList() {
      if (allianceMarksBuilder_ != null) {
        return allianceMarksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public pb4client.AllianceMarkInfo.Builder addAllianceMarksBuilder() {
      return getAllianceMarksFieldBuilder().addBuilder(
          pb4client.AllianceMarkInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public pb4client.AllianceMarkInfo.Builder addAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().addBuilder(
          index, pb4client.AllianceMarkInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 14;</code>
     */
    public java.util.List<pb4client.AllianceMarkInfo.Builder> 
         getAllianceMarksBuilderList() {
      return getAllianceMarksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder> 
        getAllianceMarksFieldBuilder() {
      if (allianceMarksBuilder_ == null) {
        allianceMarksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder>(
                allianceMarks_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        allianceMarks_ = null;
      }
      return allianceMarksBuilder_;
    }

    private java.util.List<pb4client.RedPoint> redPoints_ =
      java.util.Collections.emptyList();
    private void ensureRedPointsIsMutable() {
      if (!((bitField0_ & 0x00002000) == 0x00002000)) {
        redPoints_ = new java.util.ArrayList<pb4client.RedPoint>(redPoints_);
        bitField0_ |= 0x00002000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder> redPointsBuilder_;

    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public java.util.List<pb4client.RedPoint> getRedPointsList() {
      if (redPointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(redPoints_);
      } else {
        return redPointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public int getRedPointsCount() {
      if (redPointsBuilder_ == null) {
        return redPoints_.size();
      } else {
        return redPointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public pb4client.RedPoint getRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);
      } else {
        return redPointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder setRedPoints(
        int index, pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.set(index, value);
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder setRedPoints(
        int index, pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder addRedPoints(pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder addRedPoints(
        int index, pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(index, value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder addRedPoints(
        pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder addRedPoints(
        int index, pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder addAllRedPoints(
        java.lang.Iterable<? extends pb4client.RedPoint> values) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, redPoints_);
        onChanged();
      } else {
        redPointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder clearRedPoints() {
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
      } else {
        redPointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public Builder removeRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.remove(index);
        onChanged();
      } else {
        redPointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public pb4client.RedPoint.Builder getRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public pb4client.RedPointOrBuilder getRedPointsOrBuilder(
        int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);  } else {
        return redPointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public java.util.List<? extends pb4client.RedPointOrBuilder> 
         getRedPointsOrBuilderList() {
      if (redPointsBuilder_ != null) {
        return redPointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(redPoints_);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public pb4client.RedPoint.Builder addRedPointsBuilder() {
      return getRedPointsFieldBuilder().addBuilder(
          pb4client.RedPoint.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public pb4client.RedPoint.Builder addRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().addBuilder(
          index, pb4client.RedPoint.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 15;</code>
     */
    public java.util.List<pb4client.RedPoint.Builder> 
         getRedPointsBuilderList() {
      return getRedPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder> 
        getRedPointsFieldBuilder() {
      if (redPointsBuilder_ == null) {
        redPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder>(
                redPoints_,
                ((bitField0_ & 0x00002000) == 0x00002000),
                getParentForChildren(),
                isClean());
        redPoints_ = null;
      }
      return redPointsBuilder_;
    }

    private int noReadTopic_ ;
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>optional int32 noReadTopic = 16;</code>
     */
    public boolean hasNoReadTopic() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>optional int32 noReadTopic = 16;</code>
     */
    public int getNoReadTopic() {
      return noReadTopic_;
    }
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>optional int32 noReadTopic = 16;</code>
     */
    public Builder setNoReadTopic(int value) {
      bitField0_ |= 0x00004000;
      noReadTopic_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>optional int32 noReadTopic = 16;</code>
     */
    public Builder clearNoReadTopic() {
      bitField0_ = (bitField0_ & ~0x00004000);
      noReadTopic_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> allianceWaijiaoTime_ = java.util.Collections.emptyList();
    private void ensureAllianceWaijiaoTimeIsMutable() {
      if (!((bitField0_ & 0x00008000) == 0x00008000)) {
        allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>(allianceWaijiaoTime_);
        bitField0_ |= 0x00008000;
       }
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public java.util.List<java.lang.Integer>
        getAllianceWaijiaoTimeList() {
      return java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public int getAllianceWaijiaoTimeCount() {
      return allianceWaijiaoTime_.size();
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public int getAllianceWaijiaoTime(int index) {
      return allianceWaijiaoTime_.get(index);
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public Builder setAllianceWaijiaoTime(
        int index, int value) {
      ensureAllianceWaijiaoTimeIsMutable();
      allianceWaijiaoTime_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public Builder addAllianceWaijiaoTime(int value) {
      ensureAllianceWaijiaoTimeIsMutable();
      allianceWaijiaoTime_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public Builder addAllAllianceWaijiaoTime(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAllianceWaijiaoTimeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, allianceWaijiaoTime_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 17;</code>
     */
    public Builder clearAllianceWaijiaoTime() {
      allianceWaijiaoTime_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00008000);
      onChanged();
      return this;
    }

    private pb4client.AllianceLivenessVo allianceLivenessVo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.AllianceLivenessVo, pb4client.AllianceLivenessVo.Builder, pb4client.AllianceLivenessVoOrBuilder> allianceLivenessVoBuilder_;
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public boolean hasAllianceLivenessVo() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public pb4client.AllianceLivenessVo getAllianceLivenessVo() {
      if (allianceLivenessVoBuilder_ == null) {
        return allianceLivenessVo_ == null ? pb4client.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
      } else {
        return allianceLivenessVoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public Builder setAllianceLivenessVo(pb4client.AllianceLivenessVo value) {
      if (allianceLivenessVoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allianceLivenessVo_ = value;
        onChanged();
      } else {
        allianceLivenessVoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public Builder setAllianceLivenessVo(
        pb4client.AllianceLivenessVo.Builder builderForValue) {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = builderForValue.build();
        onChanged();
      } else {
        allianceLivenessVoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public Builder mergeAllianceLivenessVo(pb4client.AllianceLivenessVo value) {
      if (allianceLivenessVoBuilder_ == null) {
        if (((bitField0_ & 0x00010000) == 0x00010000) &&
            allianceLivenessVo_ != null &&
            allianceLivenessVo_ != pb4client.AllianceLivenessVo.getDefaultInstance()) {
          allianceLivenessVo_ =
            pb4client.AllianceLivenessVo.newBuilder(allianceLivenessVo_).mergeFrom(value).buildPartial();
        } else {
          allianceLivenessVo_ = value;
        }
        onChanged();
      } else {
        allianceLivenessVoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public Builder clearAllianceLivenessVo() {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = null;
        onChanged();
      } else {
        allianceLivenessVoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public pb4client.AllianceLivenessVo.Builder getAllianceLivenessVoBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getAllianceLivenessVoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    public pb4client.AllianceLivenessVoOrBuilder getAllianceLivenessVoOrBuilder() {
      if (allianceLivenessVoBuilder_ != null) {
        return allianceLivenessVoBuilder_.getMessageOrBuilder();
      } else {
        return allianceLivenessVo_ == null ?
            pb4client.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
      }
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>optional .client2server.AllianceLivenessVo allianceLivenessVo = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.AllianceLivenessVo, pb4client.AllianceLivenessVo.Builder, pb4client.AllianceLivenessVoOrBuilder> 
        getAllianceLivenessVoFieldBuilder() {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.AllianceLivenessVo, pb4client.AllianceLivenessVo.Builder, pb4client.AllianceLivenessVoOrBuilder>(
                getAllianceLivenessVo(),
                getParentForChildren(),
                isClean());
        allianceLivenessVo_ = null;
      }
      return allianceLivenessVoBuilder_;
    }

    private int rankLv_ ;
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>optional int32 rankLv = 19;</code>
     */
    public boolean hasRankLv() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>optional int32 rankLv = 19;</code>
     */
    public int getRankLv() {
      return rankLv_;
    }
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>optional int32 rankLv = 19;</code>
     */
    public Builder setRankLv(int value) {
      bitField0_ |= 0x00020000;
      rankLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>optional int32 rankLv = 19;</code>
     */
    public Builder clearRankLv() {
      bitField0_ = (bitField0_ & ~0x00020000);
      rankLv_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.ChatInfo> chatAllianceInfos_ =
      java.util.Collections.emptyList();
    private void ensureChatAllianceInfosIsMutable() {
      if (!((bitField0_ & 0x00040000) == 0x00040000)) {
        chatAllianceInfos_ = new java.util.ArrayList<pb4client.ChatInfo>(chatAllianceInfos_);
        bitField0_ |= 0x00040000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder> chatAllianceInfosBuilder_;

    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public java.util.List<pb4client.ChatInfo> getChatAllianceInfosList() {
      if (chatAllianceInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(chatAllianceInfos_);
      } else {
        return chatAllianceInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public int getChatAllianceInfosCount() {
      if (chatAllianceInfosBuilder_ == null) {
        return chatAllianceInfos_.size();
      } else {
        return chatAllianceInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public pb4client.ChatInfo getChatAllianceInfos(int index) {
      if (chatAllianceInfosBuilder_ == null) {
        return chatAllianceInfos_.get(index);
      } else {
        return chatAllianceInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder setChatAllianceInfos(
        int index, pb4client.ChatInfo value) {
      if (chatAllianceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.set(index, value);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder setChatAllianceInfos(
        int index, pb4client.ChatInfo.Builder builderForValue) {
      if (chatAllianceInfosBuilder_ == null) {
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        chatAllianceInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder addChatAllianceInfos(pb4client.ChatInfo value) {
      if (chatAllianceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.add(value);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder addChatAllianceInfos(
        int index, pb4client.ChatInfo value) {
      if (chatAllianceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.add(index, value);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder addChatAllianceInfos(
        pb4client.ChatInfo.Builder builderForValue) {
      if (chatAllianceInfosBuilder_ == null) {
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.add(builderForValue.build());
        onChanged();
      } else {
        chatAllianceInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder addChatAllianceInfos(
        int index, pb4client.ChatInfo.Builder builderForValue) {
      if (chatAllianceInfosBuilder_ == null) {
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        chatAllianceInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder addAllChatAllianceInfos(
        java.lang.Iterable<? extends pb4client.ChatInfo> values) {
      if (chatAllianceInfosBuilder_ == null) {
        ensureChatAllianceInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, chatAllianceInfos_);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder clearChatAllianceInfos() {
      if (chatAllianceInfosBuilder_ == null) {
        chatAllianceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public Builder removeChatAllianceInfos(int index) {
      if (chatAllianceInfosBuilder_ == null) {
        ensureChatAllianceInfosIsMutable();
        chatAllianceInfos_.remove(index);
        onChanged();
      } else {
        chatAllianceInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public pb4client.ChatInfo.Builder getChatAllianceInfosBuilder(
        int index) {
      return getChatAllianceInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public pb4client.ChatInfoOrBuilder getChatAllianceInfosOrBuilder(
        int index) {
      if (chatAllianceInfosBuilder_ == null) {
        return chatAllianceInfos_.get(index);  } else {
        return chatAllianceInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public java.util.List<? extends pb4client.ChatInfoOrBuilder> 
         getChatAllianceInfosOrBuilderList() {
      if (chatAllianceInfosBuilder_ != null) {
        return chatAllianceInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(chatAllianceInfos_);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public pb4client.ChatInfo.Builder addChatAllianceInfosBuilder() {
      return getChatAllianceInfosFieldBuilder().addBuilder(
          pb4client.ChatInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public pb4client.ChatInfo.Builder addChatAllianceInfosBuilder(
        int index) {
      return getChatAllianceInfosFieldBuilder().addBuilder(
          index, pb4client.ChatInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatAllianceInfos = 21;</code>
     */
    public java.util.List<pb4client.ChatInfo.Builder> 
         getChatAllianceInfosBuilderList() {
      return getChatAllianceInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder> 
        getChatAllianceInfosFieldBuilder() {
      if (chatAllianceInfosBuilder_ == null) {
        chatAllianceInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder>(
                chatAllianceInfos_,
                ((bitField0_ & 0x00040000) == 0x00040000),
                getParentForChildren(),
                isClean());
        chatAllianceInfos_ = null;
      }
      return chatAllianceInfosBuilder_;
    }

    private int reqListNum_ ;
    /**
     * <pre>
     *申请加入联盟的玩家数量
     * </pre>
     *
     * <code>optional int32 reqListNum = 22;</code>
     */
    public boolean hasReqListNum() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *申请加入联盟的玩家数量
     * </pre>
     *
     * <code>optional int32 reqListNum = 22;</code>
     */
    public int getReqListNum() {
      return reqListNum_;
    }
    /**
     * <pre>
     *申请加入联盟的玩家数量
     * </pre>
     *
     * <code>optional int32 reqListNum = 22;</code>
     */
    public Builder setReqListNum(int value) {
      bitField0_ |= 0x00080000;
      reqListNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *申请加入联盟的玩家数量
     * </pre>
     *
     * <code>optional int32 reqListNum = 22;</code>
     */
    public Builder clearReqListNum() {
      bitField0_ = (bitField0_ & ~0x00080000);
      reqListNum_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.EnterGamePublicRt)
  }

  // @@protoc_insertion_point(class_scope:client2server.EnterGamePublicRt)
  private static final pb4client.EnterGamePublicRt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.EnterGamePublicRt();
  }

  public static pb4client.EnterGamePublicRt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EnterGamePublicRt>
      PARSER = new com.google.protobuf.AbstractParser<EnterGamePublicRt>() {
    public EnterGamePublicRt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterGamePublicRt(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EnterGamePublicRt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EnterGamePublicRt> getParserForType() {
    return PARSER;
  }

  public pb4client.EnterGamePublicRt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

