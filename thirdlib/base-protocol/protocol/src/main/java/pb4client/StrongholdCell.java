// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *据点信息
 * </pre>
 *
 * Protobuf type {@code client2server.StrongholdCell}
 */
public  final class StrongholdCell extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.StrongholdCell)
    StrongholdCellOrBuilder {
  // Use StrongholdCell.newBuilder() to construct.
  private StrongholdCell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StrongholdCell() {
    groupId_ = 0L;
    totalGiveTributeCount_ = 0;
    leftGiveTributeCount_ = 0;
    giveTributeTime_ = 0;
    waitTributeTime_ = 0;
    randReward_ = "";
    haveTreasure_ = 0;
    treasureReward_ = "";
    lineupId_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StrongholdCell(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            pb4client.PlayerNameInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = info_.toBuilder();
            }
            info_ = input.readMessage(pb4client.PlayerNameInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(info_);
              info_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            groupId_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            totalGiveTributeCount_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            leftGiveTributeCount_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            giveTributeTime_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            waitTributeTime_ = input.readInt32();
            break;
          }
          case 58: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000040;
            randReward_ = bs;
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            haveTreasure_ = input.readInt32();
            break;
          }
          case 74: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000100;
            treasureReward_ = bs;
            break;
          }
          case 80: {
            bitField0_ |= 0x00000200;
            lineupId_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_StrongholdCell_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_StrongholdCell_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.StrongholdCell.class, pb4client.StrongholdCell.Builder.class);
  }

  private int bitField0_;
  public static final int INFO_FIELD_NUMBER = 1;
  private pb4client.PlayerNameInfo info_;
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo info = 1;</code>
   */
  public boolean hasInfo() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo info = 1;</code>
   */
  public pb4client.PlayerNameInfo getInfo() {
    return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
  }
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo info = 1;</code>
   */
  public pb4client.PlayerNameInfoOrBuilder getInfoOrBuilder() {
    return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
  }

  public static final int GROUPID_FIELD_NUMBER = 2;
  private long groupId_;
  /**
   * <pre>
   *行军组Id
   * </pre>
   *
   * <code>optional int64 groupId = 2;</code>
   */
  public boolean hasGroupId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *行军组Id
   * </pre>
   *
   * <code>optional int64 groupId = 2;</code>
   */
  public long getGroupId() {
    return groupId_;
  }

  public static final int TOTALGIVETRIBUTECOUNT_FIELD_NUMBER = 3;
  private int totalGiveTributeCount_;
  /**
   * <pre>
   *总上供次数
   * </pre>
   *
   * <code>required int32 totalGiveTributeCount = 3;</code>
   */
  public boolean hasTotalGiveTributeCount() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *总上供次数
   * </pre>
   *
   * <code>required int32 totalGiveTributeCount = 3;</code>
   */
  public int getTotalGiveTributeCount() {
    return totalGiveTributeCount_;
  }

  public static final int LEFTGIVETRIBUTECOUNT_FIELD_NUMBER = 4;
  private int leftGiveTributeCount_;
  /**
   * <pre>
   *剩余上供次数
   * </pre>
   *
   * <code>required int32 leftGiveTributeCount = 4;</code>
   */
  public boolean hasLeftGiveTributeCount() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *剩余上供次数
   * </pre>
   *
   * <code>required int32 leftGiveTributeCount = 4;</code>
   */
  public int getLeftGiveTributeCount() {
    return leftGiveTributeCount_;
  }

  public static final int GIVETRIBUTETIME_FIELD_NUMBER = 5;
  private int giveTributeTime_;
  /**
   * <pre>
   *上供时间
   * </pre>
   *
   * <code>required int32 giveTributeTime = 5;</code>
   */
  public boolean hasGiveTributeTime() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *上供时间
   * </pre>
   *
   * <code>required int32 giveTributeTime = 5;</code>
   */
  public int getGiveTributeTime() {
    return giveTributeTime_;
  }

  public static final int WAITTRIBUTETIME_FIELD_NUMBER = 6;
  private int waitTributeTime_;
  /**
   * <pre>
   *已等待的上供时间
   * </pre>
   *
   * <code>required int32 waitTributeTime = 6;</code>
   */
  public boolean hasWaitTributeTime() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *已等待的上供时间
   * </pre>
   *
   * <code>required int32 waitTributeTime = 6;</code>
   */
  public int getWaitTributeTime() {
    return waitTributeTime_;
  }

  public static final int RANDREWARD_FIELD_NUMBER = 7;
  private volatile java.lang.Object randReward_;
  /**
   * <pre>
   *随机奖励
   * </pre>
   *
   * <code>required string randReward = 7;</code>
   */
  public boolean hasRandReward() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *随机奖励
   * </pre>
   *
   * <code>required string randReward = 7;</code>
   */
  public java.lang.String getRandReward() {
    java.lang.Object ref = randReward_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        randReward_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *随机奖励
   * </pre>
   *
   * <code>required string randReward = 7;</code>
   */
  public com.google.protobuf.ByteString
      getRandRewardBytes() {
    java.lang.Object ref = randReward_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      randReward_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HAVETREASURE_FIELD_NUMBER = 8;
  private int haveTreasure_;
  /**
   * <pre>
   *据点是否有异宝 0- 木有 1-有
   * </pre>
   *
   * <code>required int32 haveTreasure = 8;</code>
   */
  public boolean hasHaveTreasure() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *据点是否有异宝 0- 木有 1-有
   * </pre>
   *
   * <code>required int32 haveTreasure = 8;</code>
   */
  public int getHaveTreasure() {
    return haveTreasure_;
  }

  public static final int TREASUREREWARD_FIELD_NUMBER = 9;
  private volatile java.lang.Object treasureReward_;
  /**
   * <pre>
   *异宝奖励
   * </pre>
   *
   * <code>optional string treasureReward = 9;</code>
   */
  public boolean hasTreasureReward() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *异宝奖励
   * </pre>
   *
   * <code>optional string treasureReward = 9;</code>
   */
  public java.lang.String getTreasureReward() {
    java.lang.Object ref = treasureReward_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        treasureReward_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *异宝奖励
   * </pre>
   *
   * <code>optional string treasureReward = 9;</code>
   */
  public com.google.protobuf.ByteString
      getTreasureRewardBytes() {
    java.lang.Object ref = treasureReward_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      treasureReward_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LINEUPID_FIELD_NUMBER = 10;
  private int lineupId_;
  /**
   * <pre>
   *npc守军阵容Id
   * </pre>
   *
   * <code>optional int32 lineupId = 10;</code>
   */
  public boolean hasLineupId() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *npc守军阵容Id
   * </pre>
   *
   * <code>optional int32 lineupId = 10;</code>
   */
  public int getLineupId() {
    return lineupId_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasTotalGiveTributeCount()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLeftGiveTributeCount()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasGiveTributeTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWaitTributeTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRandReward()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasHaveTreasure()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasInfo()) {
      if (!getInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, groupId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, totalGiveTributeCount_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, leftGiveTributeCount_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, giveTributeTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, waitTributeTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, randReward_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, haveTreasure_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, treasureReward_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(10, lineupId_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, groupId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, totalGiveTributeCount_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, leftGiveTributeCount_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, giveTributeTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, waitTributeTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, randReward_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, haveTreasure_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, treasureReward_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, lineupId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.StrongholdCell)) {
      return super.equals(obj);
    }
    pb4client.StrongholdCell other = (pb4client.StrongholdCell) obj;

    boolean result = true;
    result = result && (hasInfo() == other.hasInfo());
    if (hasInfo()) {
      result = result && getInfo()
          .equals(other.getInfo());
    }
    result = result && (hasGroupId() == other.hasGroupId());
    if (hasGroupId()) {
      result = result && (getGroupId()
          == other.getGroupId());
    }
    result = result && (hasTotalGiveTributeCount() == other.hasTotalGiveTributeCount());
    if (hasTotalGiveTributeCount()) {
      result = result && (getTotalGiveTributeCount()
          == other.getTotalGiveTributeCount());
    }
    result = result && (hasLeftGiveTributeCount() == other.hasLeftGiveTributeCount());
    if (hasLeftGiveTributeCount()) {
      result = result && (getLeftGiveTributeCount()
          == other.getLeftGiveTributeCount());
    }
    result = result && (hasGiveTributeTime() == other.hasGiveTributeTime());
    if (hasGiveTributeTime()) {
      result = result && (getGiveTributeTime()
          == other.getGiveTributeTime());
    }
    result = result && (hasWaitTributeTime() == other.hasWaitTributeTime());
    if (hasWaitTributeTime()) {
      result = result && (getWaitTributeTime()
          == other.getWaitTributeTime());
    }
    result = result && (hasRandReward() == other.hasRandReward());
    if (hasRandReward()) {
      result = result && getRandReward()
          .equals(other.getRandReward());
    }
    result = result && (hasHaveTreasure() == other.hasHaveTreasure());
    if (hasHaveTreasure()) {
      result = result && (getHaveTreasure()
          == other.getHaveTreasure());
    }
    result = result && (hasTreasureReward() == other.hasTreasureReward());
    if (hasTreasureReward()) {
      result = result && getTreasureReward()
          .equals(other.getTreasureReward());
    }
    result = result && (hasLineupId() == other.hasLineupId());
    if (hasLineupId()) {
      result = result && (getLineupId()
          == other.getLineupId());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInfo()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
    }
    if (hasGroupId()) {
      hash = (37 * hash) + GROUPID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGroupId());
    }
    if (hasTotalGiveTributeCount()) {
      hash = (37 * hash) + TOTALGIVETRIBUTECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalGiveTributeCount();
    }
    if (hasLeftGiveTributeCount()) {
      hash = (37 * hash) + LEFTGIVETRIBUTECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getLeftGiveTributeCount();
    }
    if (hasGiveTributeTime()) {
      hash = (37 * hash) + GIVETRIBUTETIME_FIELD_NUMBER;
      hash = (53 * hash) + getGiveTributeTime();
    }
    if (hasWaitTributeTime()) {
      hash = (37 * hash) + WAITTRIBUTETIME_FIELD_NUMBER;
      hash = (53 * hash) + getWaitTributeTime();
    }
    if (hasRandReward()) {
      hash = (37 * hash) + RANDREWARD_FIELD_NUMBER;
      hash = (53 * hash) + getRandReward().hashCode();
    }
    if (hasHaveTreasure()) {
      hash = (37 * hash) + HAVETREASURE_FIELD_NUMBER;
      hash = (53 * hash) + getHaveTreasure();
    }
    if (hasTreasureReward()) {
      hash = (37 * hash) + TREASUREREWARD_FIELD_NUMBER;
      hash = (53 * hash) + getTreasureReward().hashCode();
    }
    if (hasLineupId()) {
      hash = (37 * hash) + LINEUPID_FIELD_NUMBER;
      hash = (53 * hash) + getLineupId();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.StrongholdCell parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.StrongholdCell parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.StrongholdCell parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.StrongholdCell parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.StrongholdCell parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.StrongholdCell parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.StrongholdCell parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.StrongholdCell parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.StrongholdCell parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.StrongholdCell parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.StrongholdCell parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.StrongholdCell parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.StrongholdCell prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *据点信息
   * </pre>
   *
   * Protobuf type {@code client2server.StrongholdCell}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.StrongholdCell)
      pb4client.StrongholdCellOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_StrongholdCell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_StrongholdCell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.StrongholdCell.class, pb4client.StrongholdCell.Builder.class);
    }

    // Construct using pb4client.StrongholdCell.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (infoBuilder_ == null) {
        info_ = null;
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      groupId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      totalGiveTributeCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      leftGiveTributeCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      giveTributeTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      waitTributeTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      randReward_ = "";
      bitField0_ = (bitField0_ & ~0x00000040);
      haveTreasure_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      treasureReward_ = "";
      bitField0_ = (bitField0_ & ~0x00000100);
      lineupId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_StrongholdCell_descriptor;
    }

    public pb4client.StrongholdCell getDefaultInstanceForType() {
      return pb4client.StrongholdCell.getDefaultInstance();
    }

    public pb4client.StrongholdCell build() {
      pb4client.StrongholdCell result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.StrongholdCell buildPartial() {
      pb4client.StrongholdCell result = new pb4client.StrongholdCell(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (infoBuilder_ == null) {
        result.info_ = info_;
      } else {
        result.info_ = infoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.groupId_ = groupId_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.totalGiveTributeCount_ = totalGiveTributeCount_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.leftGiveTributeCount_ = leftGiveTributeCount_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.giveTributeTime_ = giveTributeTime_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.waitTributeTime_ = waitTributeTime_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.randReward_ = randReward_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.haveTreasure_ = haveTreasure_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.treasureReward_ = treasureReward_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.lineupId_ = lineupId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.StrongholdCell) {
        return mergeFrom((pb4client.StrongholdCell)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.StrongholdCell other) {
      if (other == pb4client.StrongholdCell.getDefaultInstance()) return this;
      if (other.hasInfo()) {
        mergeInfo(other.getInfo());
      }
      if (other.hasGroupId()) {
        setGroupId(other.getGroupId());
      }
      if (other.hasTotalGiveTributeCount()) {
        setTotalGiveTributeCount(other.getTotalGiveTributeCount());
      }
      if (other.hasLeftGiveTributeCount()) {
        setLeftGiveTributeCount(other.getLeftGiveTributeCount());
      }
      if (other.hasGiveTributeTime()) {
        setGiveTributeTime(other.getGiveTributeTime());
      }
      if (other.hasWaitTributeTime()) {
        setWaitTributeTime(other.getWaitTributeTime());
      }
      if (other.hasRandReward()) {
        bitField0_ |= 0x00000040;
        randReward_ = other.randReward_;
        onChanged();
      }
      if (other.hasHaveTreasure()) {
        setHaveTreasure(other.getHaveTreasure());
      }
      if (other.hasTreasureReward()) {
        bitField0_ |= 0x00000100;
        treasureReward_ = other.treasureReward_;
        onChanged();
      }
      if (other.hasLineupId()) {
        setLineupId(other.getLineupId());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasTotalGiveTributeCount()) {
        return false;
      }
      if (!hasLeftGiveTributeCount()) {
        return false;
      }
      if (!hasGiveTributeTime()) {
        return false;
      }
      if (!hasWaitTributeTime()) {
        return false;
      }
      if (!hasRandReward()) {
        return false;
      }
      if (!hasHaveTreasure()) {
        return false;
      }
      if (hasInfo()) {
        if (!getInfo().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.StrongholdCell parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.StrongholdCell) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private pb4client.PlayerNameInfo info_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfo getInfo() {
      if (infoBuilder_ == null) {
        return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
      } else {
        return infoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder setInfo(pb4client.PlayerNameInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder setInfo(
        pb4client.PlayerNameInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        info_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder mergeInfo(pb4client.PlayerNameInfo value) {
      if (infoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            info_ != null &&
            info_ != pb4client.PlayerNameInfo.getDefaultInstance()) {
          info_ =
            pb4client.PlayerNameInfo.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }
        onChanged();
      } else {
        infoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        info_ = null;
        onChanged();
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfo.Builder getInfoBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfoOrBuilder getInfoOrBuilder() {
      if (infoBuilder_ != null) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        return info_ == null ?
            pb4client.PlayerNameInfo.getDefaultInstance() : info_;
      }
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo info = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder>(
                getInfo(),
                getParentForChildren(),
                isClean());
        info_ = null;
      }
      return infoBuilder_;
    }

    private long groupId_ ;
    /**
     * <pre>
     *行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 2;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 2;</code>
     */
    public long getGroupId() {
      return groupId_;
    }
    /**
     * <pre>
     *行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 2;</code>
     */
    public Builder setGroupId(long value) {
      bitField0_ |= 0x00000002;
      groupId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 2;</code>
     */
    public Builder clearGroupId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      groupId_ = 0L;
      onChanged();
      return this;
    }

    private int totalGiveTributeCount_ ;
    /**
     * <pre>
     *总上供次数
     * </pre>
     *
     * <code>required int32 totalGiveTributeCount = 3;</code>
     */
    public boolean hasTotalGiveTributeCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *总上供次数
     * </pre>
     *
     * <code>required int32 totalGiveTributeCount = 3;</code>
     */
    public int getTotalGiveTributeCount() {
      return totalGiveTributeCount_;
    }
    /**
     * <pre>
     *总上供次数
     * </pre>
     *
     * <code>required int32 totalGiveTributeCount = 3;</code>
     */
    public Builder setTotalGiveTributeCount(int value) {
      bitField0_ |= 0x00000004;
      totalGiveTributeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *总上供次数
     * </pre>
     *
     * <code>required int32 totalGiveTributeCount = 3;</code>
     */
    public Builder clearTotalGiveTributeCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalGiveTributeCount_ = 0;
      onChanged();
      return this;
    }

    private int leftGiveTributeCount_ ;
    /**
     * <pre>
     *剩余上供次数
     * </pre>
     *
     * <code>required int32 leftGiveTributeCount = 4;</code>
     */
    public boolean hasLeftGiveTributeCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *剩余上供次数
     * </pre>
     *
     * <code>required int32 leftGiveTributeCount = 4;</code>
     */
    public int getLeftGiveTributeCount() {
      return leftGiveTributeCount_;
    }
    /**
     * <pre>
     *剩余上供次数
     * </pre>
     *
     * <code>required int32 leftGiveTributeCount = 4;</code>
     */
    public Builder setLeftGiveTributeCount(int value) {
      bitField0_ |= 0x00000008;
      leftGiveTributeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *剩余上供次数
     * </pre>
     *
     * <code>required int32 leftGiveTributeCount = 4;</code>
     */
    public Builder clearLeftGiveTributeCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      leftGiveTributeCount_ = 0;
      onChanged();
      return this;
    }

    private int giveTributeTime_ ;
    /**
     * <pre>
     *上供时间
     * </pre>
     *
     * <code>required int32 giveTributeTime = 5;</code>
     */
    public boolean hasGiveTributeTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *上供时间
     * </pre>
     *
     * <code>required int32 giveTributeTime = 5;</code>
     */
    public int getGiveTributeTime() {
      return giveTributeTime_;
    }
    /**
     * <pre>
     *上供时间
     * </pre>
     *
     * <code>required int32 giveTributeTime = 5;</code>
     */
    public Builder setGiveTributeTime(int value) {
      bitField0_ |= 0x00000010;
      giveTributeTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上供时间
     * </pre>
     *
     * <code>required int32 giveTributeTime = 5;</code>
     */
    public Builder clearGiveTributeTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      giveTributeTime_ = 0;
      onChanged();
      return this;
    }

    private int waitTributeTime_ ;
    /**
     * <pre>
     *已等待的上供时间
     * </pre>
     *
     * <code>required int32 waitTributeTime = 6;</code>
     */
    public boolean hasWaitTributeTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *已等待的上供时间
     * </pre>
     *
     * <code>required int32 waitTributeTime = 6;</code>
     */
    public int getWaitTributeTime() {
      return waitTributeTime_;
    }
    /**
     * <pre>
     *已等待的上供时间
     * </pre>
     *
     * <code>required int32 waitTributeTime = 6;</code>
     */
    public Builder setWaitTributeTime(int value) {
      bitField0_ |= 0x00000020;
      waitTributeTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *已等待的上供时间
     * </pre>
     *
     * <code>required int32 waitTributeTime = 6;</code>
     */
    public Builder clearWaitTributeTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      waitTributeTime_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object randReward_ = "";
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public boolean hasRandReward() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public java.lang.String getRandReward() {
      java.lang.Object ref = randReward_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          randReward_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public com.google.protobuf.ByteString
        getRandRewardBytes() {
      java.lang.Object ref = randReward_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        randReward_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public Builder setRandReward(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      randReward_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public Builder clearRandReward() {
      bitField0_ = (bitField0_ & ~0x00000040);
      randReward_ = getDefaultInstance().getRandReward();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *随机奖励
     * </pre>
     *
     * <code>required string randReward = 7;</code>
     */
    public Builder setRandRewardBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      randReward_ = value;
      onChanged();
      return this;
    }

    private int haveTreasure_ ;
    /**
     * <pre>
     *据点是否有异宝 0- 木有 1-有
     * </pre>
     *
     * <code>required int32 haveTreasure = 8;</code>
     */
    public boolean hasHaveTreasure() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *据点是否有异宝 0- 木有 1-有
     * </pre>
     *
     * <code>required int32 haveTreasure = 8;</code>
     */
    public int getHaveTreasure() {
      return haveTreasure_;
    }
    /**
     * <pre>
     *据点是否有异宝 0- 木有 1-有
     * </pre>
     *
     * <code>required int32 haveTreasure = 8;</code>
     */
    public Builder setHaveTreasure(int value) {
      bitField0_ |= 0x00000080;
      haveTreasure_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *据点是否有异宝 0- 木有 1-有
     * </pre>
     *
     * <code>required int32 haveTreasure = 8;</code>
     */
    public Builder clearHaveTreasure() {
      bitField0_ = (bitField0_ & ~0x00000080);
      haveTreasure_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object treasureReward_ = "";
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public boolean hasTreasureReward() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public java.lang.String getTreasureReward() {
      java.lang.Object ref = treasureReward_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          treasureReward_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTreasureRewardBytes() {
      java.lang.Object ref = treasureReward_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        treasureReward_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public Builder setTreasureReward(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      treasureReward_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public Builder clearTreasureReward() {
      bitField0_ = (bitField0_ & ~0x00000100);
      treasureReward_ = getDefaultInstance().getTreasureReward();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *异宝奖励
     * </pre>
     *
     * <code>optional string treasureReward = 9;</code>
     */
    public Builder setTreasureRewardBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      treasureReward_ = value;
      onChanged();
      return this;
    }

    private int lineupId_ ;
    /**
     * <pre>
     *npc守军阵容Id
     * </pre>
     *
     * <code>optional int32 lineupId = 10;</code>
     */
    public boolean hasLineupId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *npc守军阵容Id
     * </pre>
     *
     * <code>optional int32 lineupId = 10;</code>
     */
    public int getLineupId() {
      return lineupId_;
    }
    /**
     * <pre>
     *npc守军阵容Id
     * </pre>
     *
     * <code>optional int32 lineupId = 10;</code>
     */
    public Builder setLineupId(int value) {
      bitField0_ |= 0x00000200;
      lineupId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *npc守军阵容Id
     * </pre>
     *
     * <code>optional int32 lineupId = 10;</code>
     */
    public Builder clearLineupId() {
      bitField0_ = (bitField0_ & ~0x00000200);
      lineupId_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.StrongholdCell)
  }

  // @@protoc_insertion_point(class_scope:client2server.StrongholdCell)
  private static final pb4client.StrongholdCell DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.StrongholdCell();
  }

  public static pb4client.StrongholdCell getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<StrongholdCell>
      PARSER = new com.google.protobuf.AbstractParser<StrongholdCell>() {
    public StrongholdCell parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new StrongholdCell(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StrongholdCell> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StrongholdCell> getParserForType() {
    return PARSER;
  }

  public pb4client.StrongholdCell getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

