// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.PlayerArenaInfo}
 */
public  final class PlayerArenaInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.PlayerArenaInfo)
    PlayerArenaInfoOrBuilder {
  // Use PlayerArenaInfo.newBuilder() to construct.
  private PlayerArenaInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlayerArenaInfo() {
    rank_ = 0;
    times_ = 0;
    drawRewards_ = java.util.Collections.emptyList();
    rankGold_ = 0L;
    rankJJCoin_ = 0L;
    achievementExchangeRewards_ = java.util.Collections.emptyList();
    maxRank_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PlayerArenaInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            rank_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            times_ = input.readInt32();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            drawRewards_.add(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              drawRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {
            bitField0_ |= 0x00000004;
            rankGold_ = input.readInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            rankJJCoin_ = input.readInt64();
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            achievementExchangeRewards_.add(input.readInt32());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              achievementExchangeRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 56: {
            bitField0_ |= 0x00000010;
            maxRank_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        achievementExchangeRewards_ = java.util.Collections.unmodifiableList(achievementExchangeRewards_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_PlayerArenaInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_PlayerArenaInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.PlayerArenaInfo.class, pb4client.PlayerArenaInfo.Builder.class);
  }

  private int bitField0_;
  public static final int RANK_FIELD_NUMBER = 1;
  private int rank_;
  /**
   * <pre>
   * 玩家排名
   * </pre>
   *
   * <code>required int32 rank = 1;</code>
   */
  public boolean hasRank() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 玩家排名
   * </pre>
   *
   * <code>required int32 rank = 1;</code>
   */
  public int getRank() {
    return rank_;
  }

  public static final int TIMES_FIELD_NUMBER = 2;
  private int times_;
  /**
   * <pre>
   * 挑战次数
   * </pre>
   *
   * <code>required int32 times = 2;</code>
   */
  public boolean hasTimes() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 挑战次数
   * </pre>
   *
   * <code>required int32 times = 2;</code>
   */
  public int getTimes() {
    return times_;
  }

  public static final int DRAWREWARDS_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> drawRewards_;
  /**
   * <pre>
   *  奖励已经领取的东西
   * </pre>
   *
   * <code>repeated int32 drawRewards = 3;</code>
   */
  public java.util.List<java.lang.Integer>
      getDrawRewardsList() {
    return drawRewards_;
  }
  /**
   * <pre>
   *  奖励已经领取的东西
   * </pre>
   *
   * <code>repeated int32 drawRewards = 3;</code>
   */
  public int getDrawRewardsCount() {
    return drawRewards_.size();
  }
  /**
   * <pre>
   *  奖励已经领取的东西
   * </pre>
   *
   * <code>repeated int32 drawRewards = 3;</code>
   */
  public int getDrawRewards(int index) {
    return drawRewards_.get(index);
  }

  public static final int RANKGOLD_FIELD_NUMBER = 4;
  private long rankGold_;
  /**
   * <pre>
   * 每天排名钻石奖励
   * </pre>
   *
   * <code>required int64 rankGold = 4;</code>
   */
  public boolean hasRankGold() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 每天排名钻石奖励
   * </pre>
   *
   * <code>required int64 rankGold = 4;</code>
   */
  public long getRankGold() {
    return rankGold_;
  }

  public static final int RANKJJCOIN_FIELD_NUMBER = 5;
  private long rankJJCoin_;
  /**
   * <pre>
   *  每天排名竞技b奖励
   * </pre>
   *
   * <code>required int64 rankJJCoin = 5;</code>
   */
  public boolean hasRankJJCoin() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *  每天排名竞技b奖励
   * </pre>
   *
   * <code>required int64 rankJJCoin = 5;</code>
   */
  public long getRankJJCoin() {
    return rankJJCoin_;
  }

  public static final int ACHIEVEMENTEXCHANGEREWARDS_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Integer> achievementExchangeRewards_;
  /**
   * <pre>
   * 已经兑换的奖励
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 6;</code>
   */
  public java.util.List<java.lang.Integer>
      getAchievementExchangeRewardsList() {
    return achievementExchangeRewards_;
  }
  /**
   * <pre>
   * 已经兑换的奖励
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 6;</code>
   */
  public int getAchievementExchangeRewardsCount() {
    return achievementExchangeRewards_.size();
  }
  /**
   * <pre>
   * 已经兑换的奖励
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 6;</code>
   */
  public int getAchievementExchangeRewards(int index) {
    return achievementExchangeRewards_.get(index);
  }

  public static final int MAXRANK_FIELD_NUMBER = 7;
  private int maxRank_;
  /**
   * <pre>
   * 玩家max排名
   * </pre>
   *
   * <code>required int32 maxRank = 7;</code>
   */
  public boolean hasMaxRank() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 玩家max排名
   * </pre>
   *
   * <code>required int32 maxRank = 7;</code>
   */
  public int getMaxRank() {
    return maxRank_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRank()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasTimes()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRankGold()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRankJJCoin()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMaxRank()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, rank_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, times_);
    }
    for (int i = 0; i < drawRewards_.size(); i++) {
      output.writeInt32(3, drawRewards_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(4, rankGold_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(5, rankJJCoin_);
    }
    for (int i = 0; i < achievementExchangeRewards_.size(); i++) {
      output.writeInt32(6, achievementExchangeRewards_.get(i));
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(7, maxRank_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, rank_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, times_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < drawRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(drawRewards_.get(i));
      }
      size += dataSize;
      size += 1 * getDrawRewardsList().size();
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, rankGold_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, rankJJCoin_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < achievementExchangeRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(achievementExchangeRewards_.get(i));
      }
      size += dataSize;
      size += 1 * getAchievementExchangeRewardsList().size();
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, maxRank_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.PlayerArenaInfo)) {
      return super.equals(obj);
    }
    pb4client.PlayerArenaInfo other = (pb4client.PlayerArenaInfo) obj;

    boolean result = true;
    result = result && (hasRank() == other.hasRank());
    if (hasRank()) {
      result = result && (getRank()
          == other.getRank());
    }
    result = result && (hasTimes() == other.hasTimes());
    if (hasTimes()) {
      result = result && (getTimes()
          == other.getTimes());
    }
    result = result && getDrawRewardsList()
        .equals(other.getDrawRewardsList());
    result = result && (hasRankGold() == other.hasRankGold());
    if (hasRankGold()) {
      result = result && (getRankGold()
          == other.getRankGold());
    }
    result = result && (hasRankJJCoin() == other.hasRankJJCoin());
    if (hasRankJJCoin()) {
      result = result && (getRankJJCoin()
          == other.getRankJJCoin());
    }
    result = result && getAchievementExchangeRewardsList()
        .equals(other.getAchievementExchangeRewardsList());
    result = result && (hasMaxRank() == other.hasMaxRank());
    if (hasMaxRank()) {
      result = result && (getMaxRank()
          == other.getMaxRank());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRank()) {
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
    }
    if (hasTimes()) {
      hash = (37 * hash) + TIMES_FIELD_NUMBER;
      hash = (53 * hash) + getTimes();
    }
    if (getDrawRewardsCount() > 0) {
      hash = (37 * hash) + DRAWREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getDrawRewardsList().hashCode();
    }
    if (hasRankGold()) {
      hash = (37 * hash) + RANKGOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRankGold());
    }
    if (hasRankJJCoin()) {
      hash = (37 * hash) + RANKJJCOIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRankJJCoin());
    }
    if (getAchievementExchangeRewardsCount() > 0) {
      hash = (37 * hash) + ACHIEVEMENTEXCHANGEREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getAchievementExchangeRewardsList().hashCode();
    }
    if (hasMaxRank()) {
      hash = (37 * hash) + MAXRANK_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRank();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.PlayerArenaInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PlayerArenaInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PlayerArenaInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.PlayerArenaInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.PlayerArenaInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.PlayerArenaInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.PlayerArenaInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.PlayerArenaInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.PlayerArenaInfo)
      pb4client.PlayerArenaInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_PlayerArenaInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_PlayerArenaInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.PlayerArenaInfo.class, pb4client.PlayerArenaInfo.Builder.class);
    }

    // Construct using pb4client.PlayerArenaInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      rank_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      times_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      rankGold_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      rankJJCoin_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      achievementExchangeRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      maxRank_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_PlayerArenaInfo_descriptor;
    }

    public pb4client.PlayerArenaInfo getDefaultInstanceForType() {
      return pb4client.PlayerArenaInfo.getDefaultInstance();
    }

    public pb4client.PlayerArenaInfo build() {
      pb4client.PlayerArenaInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.PlayerArenaInfo buildPartial() {
      pb4client.PlayerArenaInfo result = new pb4client.PlayerArenaInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.rank_ = rank_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.times_ = times_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.drawRewards_ = drawRewards_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000004;
      }
      result.rankGold_ = rankGold_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000008;
      }
      result.rankJJCoin_ = rankJJCoin_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        achievementExchangeRewards_ = java.util.Collections.unmodifiableList(achievementExchangeRewards_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.achievementExchangeRewards_ = achievementExchangeRewards_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000010;
      }
      result.maxRank_ = maxRank_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.PlayerArenaInfo) {
        return mergeFrom((pb4client.PlayerArenaInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.PlayerArenaInfo other) {
      if (other == pb4client.PlayerArenaInfo.getDefaultInstance()) return this;
      if (other.hasRank()) {
        setRank(other.getRank());
      }
      if (other.hasTimes()) {
        setTimes(other.getTimes());
      }
      if (!other.drawRewards_.isEmpty()) {
        if (drawRewards_.isEmpty()) {
          drawRewards_ = other.drawRewards_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureDrawRewardsIsMutable();
          drawRewards_.addAll(other.drawRewards_);
        }
        onChanged();
      }
      if (other.hasRankGold()) {
        setRankGold(other.getRankGold());
      }
      if (other.hasRankJJCoin()) {
        setRankJJCoin(other.getRankJJCoin());
      }
      if (!other.achievementExchangeRewards_.isEmpty()) {
        if (achievementExchangeRewards_.isEmpty()) {
          achievementExchangeRewards_ = other.achievementExchangeRewards_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureAchievementExchangeRewardsIsMutable();
          achievementExchangeRewards_.addAll(other.achievementExchangeRewards_);
        }
        onChanged();
      }
      if (other.hasMaxRank()) {
        setMaxRank(other.getMaxRank());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRank()) {
        return false;
      }
      if (!hasTimes()) {
        return false;
      }
      if (!hasRankGold()) {
        return false;
      }
      if (!hasRankJJCoin()) {
        return false;
      }
      if (!hasMaxRank()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.PlayerArenaInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.PlayerArenaInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int rank_ ;
    /**
     * <pre>
     * 玩家排名
     * </pre>
     *
     * <code>required int32 rank = 1;</code>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 玩家排名
     * </pre>
     *
     * <code>required int32 rank = 1;</code>
     */
    public int getRank() {
      return rank_;
    }
    /**
     * <pre>
     * 玩家排名
     * </pre>
     *
     * <code>required int32 rank = 1;</code>
     */
    public Builder setRank(int value) {
      bitField0_ |= 0x00000001;
      rank_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 玩家排名
     * </pre>
     *
     * <code>required int32 rank = 1;</code>
     */
    public Builder clearRank() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rank_ = 0;
      onChanged();
      return this;
    }

    private int times_ ;
    /**
     * <pre>
     * 挑战次数
     * </pre>
     *
     * <code>required int32 times = 2;</code>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 挑战次数
     * </pre>
     *
     * <code>required int32 times = 2;</code>
     */
    public int getTimes() {
      return times_;
    }
    /**
     * <pre>
     * 挑战次数
     * </pre>
     *
     * <code>required int32 times = 2;</code>
     */
    public Builder setTimes(int value) {
      bitField0_ |= 0x00000002;
      times_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 挑战次数
     * </pre>
     *
     * <code>required int32 times = 2;</code>
     */
    public Builder clearTimes() {
      bitField0_ = (bitField0_ & ~0x00000002);
      times_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> drawRewards_ = java.util.Collections.emptyList();
    private void ensureDrawRewardsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        drawRewards_ = new java.util.ArrayList<java.lang.Integer>(drawRewards_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getDrawRewardsList() {
      return java.util.Collections.unmodifiableList(drawRewards_);
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public int getDrawRewardsCount() {
      return drawRewards_.size();
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public int getDrawRewards(int index) {
      return drawRewards_.get(index);
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public Builder setDrawRewards(
        int index, int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public Builder addDrawRewards(int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public Builder addAllDrawRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDrawRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, drawRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  奖励已经领取的东西
     * </pre>
     *
     * <code>repeated int32 drawRewards = 3;</code>
     */
    public Builder clearDrawRewards() {
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private long rankGold_ ;
    /**
     * <pre>
     * 每天排名钻石奖励
     * </pre>
     *
     * <code>required int64 rankGold = 4;</code>
     */
    public boolean hasRankGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 每天排名钻石奖励
     * </pre>
     *
     * <code>required int64 rankGold = 4;</code>
     */
    public long getRankGold() {
      return rankGold_;
    }
    /**
     * <pre>
     * 每天排名钻石奖励
     * </pre>
     *
     * <code>required int64 rankGold = 4;</code>
     */
    public Builder setRankGold(long value) {
      bitField0_ |= 0x00000008;
      rankGold_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 每天排名钻石奖励
     * </pre>
     *
     * <code>required int64 rankGold = 4;</code>
     */
    public Builder clearRankGold() {
      bitField0_ = (bitField0_ & ~0x00000008);
      rankGold_ = 0L;
      onChanged();
      return this;
    }

    private long rankJJCoin_ ;
    /**
     * <pre>
     *  每天排名竞技b奖励
     * </pre>
     *
     * <code>required int64 rankJJCoin = 5;</code>
     */
    public boolean hasRankJJCoin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *  每天排名竞技b奖励
     * </pre>
     *
     * <code>required int64 rankJJCoin = 5;</code>
     */
    public long getRankJJCoin() {
      return rankJJCoin_;
    }
    /**
     * <pre>
     *  每天排名竞技b奖励
     * </pre>
     *
     * <code>required int64 rankJJCoin = 5;</code>
     */
    public Builder setRankJJCoin(long value) {
      bitField0_ |= 0x00000010;
      rankJJCoin_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  每天排名竞技b奖励
     * </pre>
     *
     * <code>required int64 rankJJCoin = 5;</code>
     */
    public Builder clearRankJJCoin() {
      bitField0_ = (bitField0_ & ~0x00000010);
      rankJJCoin_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> achievementExchangeRewards_ = java.util.Collections.emptyList();
    private void ensureAchievementExchangeRewardsIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>(achievementExchangeRewards_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getAchievementExchangeRewardsList() {
      return java.util.Collections.unmodifiableList(achievementExchangeRewards_);
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public int getAchievementExchangeRewardsCount() {
      return achievementExchangeRewards_.size();
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public int getAchievementExchangeRewards(int index) {
      return achievementExchangeRewards_.get(index);
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public Builder setAchievementExchangeRewards(
        int index, int value) {
      ensureAchievementExchangeRewardsIsMutable();
      achievementExchangeRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public Builder addAchievementExchangeRewards(int value) {
      ensureAchievementExchangeRewardsIsMutable();
      achievementExchangeRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public Builder addAllAchievementExchangeRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAchievementExchangeRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, achievementExchangeRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已经兑换的奖励
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 6;</code>
     */
    public Builder clearAchievementExchangeRewards() {
      achievementExchangeRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private int maxRank_ ;
    /**
     * <pre>
     * 玩家max排名
     * </pre>
     *
     * <code>required int32 maxRank = 7;</code>
     */
    public boolean hasMaxRank() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 玩家max排名
     * </pre>
     *
     * <code>required int32 maxRank = 7;</code>
     */
    public int getMaxRank() {
      return maxRank_;
    }
    /**
     * <pre>
     * 玩家max排名
     * </pre>
     *
     * <code>required int32 maxRank = 7;</code>
     */
    public Builder setMaxRank(int value) {
      bitField0_ |= 0x00000040;
      maxRank_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 玩家max排名
     * </pre>
     *
     * <code>required int32 maxRank = 7;</code>
     */
    public Builder clearMaxRank() {
      bitField0_ = (bitField0_ & ~0x00000040);
      maxRank_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.PlayerArenaInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.PlayerArenaInfo)
  private static final pb4client.PlayerArenaInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.PlayerArenaInfo();
  }

  public static pb4client.PlayerArenaInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerArenaInfo>
      PARSER = new com.google.protobuf.AbstractParser<PlayerArenaInfo>() {
    public PlayerArenaInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerArenaInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PlayerArenaInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlayerArenaInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.PlayerArenaInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

