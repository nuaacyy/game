// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.AllianceMarkInfo}
 */
public  final class AllianceMarkInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.AllianceMarkInfo)
    AllianceMarkInfoOrBuilder {
  // Use AllianceMarkInfo.newBuilder() to construct.
  private AllianceMarkInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllianceMarkInfo() {
    type_ = 0;
    playerId_ = 0L;
    playerName_ = "";
    positions_ = java.util.Collections.emptyList();
    x_ = 0;
    y_ = 0;
    title_ = "";
    desp_ = "";
    markTime_ = 0L;
    markId_ = 0L;
    pltAreaNo_ = 0;
    photoProtoId_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AllianceMarkInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            type_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            playerId_ = input.readInt64();
            break;
          }
          case 26: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000004;
            playerName_ = bs;
            break;
          }
          case 32: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000008;
            }
            positions_.add(input.readInt32());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              positions_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            x_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            y_ = input.readInt32();
            break;
          }
          case 58: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000020;
            title_ = bs;
            break;
          }
          case 66: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000040;
            desp_ = bs;
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            markTime_ = input.readInt64();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            markId_ = input.readInt64();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            pltAreaNo_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000400;
            photoProtoId_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceMarkInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceMarkInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.AllianceMarkInfo.class, pb4client.AllianceMarkInfo.Builder.class);
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   *类型：1-联盟标记；2-集结请求
   * </pre>
   *
   * <code>required int32 type = 1;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *类型：1-联盟标记；2-集结请求
   * </pre>
   *
   * <code>required int32 type = 1;</code>
   */
  public int getType() {
    return type_;
  }

  public static final int PLAYERID_FIELD_NUMBER = 2;
  private long playerId_;
  /**
   * <pre>
   *发布者ID
   * </pre>
   *
   * <code>required int64 playerId = 2;</code>
   */
  public boolean hasPlayerId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *发布者ID
   * </pre>
   *
   * <code>required int64 playerId = 2;</code>
   */
  public long getPlayerId() {
    return playerId_;
  }

  public static final int PLAYERNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object playerName_;
  /**
   * <pre>
   *发布者名字
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public boolean hasPlayerName() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *发布者名字
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public java.lang.String getPlayerName() {
    java.lang.Object ref = playerName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        playerName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *发布者名字
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public com.google.protobuf.ByteString
      getPlayerNameBytes() {
    java.lang.Object ref = playerName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      playerName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POSITIONS_FIELD_NUMBER = 4;
  private java.util.List<java.lang.Integer> positions_;
  /**
   * <pre>
   *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 4;</code>
   */
  public java.util.List<java.lang.Integer>
      getPositionsList() {
    return positions_;
  }
  /**
   * <pre>
   *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 4;</code>
   */
  public int getPositionsCount() {
    return positions_.size();
  }
  /**
   * <pre>
   *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 4;</code>
   */
  public int getPositions(int index) {
    return positions_.get(index);
  }

  public static final int X_FIELD_NUMBER = 5;
  private int x_;
  /**
   * <pre>
   *发布坐标X
   * </pre>
   *
   * <code>required int32 x = 5;</code>
   */
  public boolean hasX() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *发布坐标X
   * </pre>
   *
   * <code>required int32 x = 5;</code>
   */
  public int getX() {
    return x_;
  }

  public static final int Y_FIELD_NUMBER = 6;
  private int y_;
  /**
   * <pre>
   *发布坐标Y
   * </pre>
   *
   * <code>required int32 y = 6;</code>
   */
  public boolean hasY() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *发布坐标Y
   * </pre>
   *
   * <code>required int32 y = 6;</code>
   */
  public int getY() {
    return y_;
  }

  public static final int TITLE_FIELD_NUMBER = 7;
  private volatile java.lang.Object title_;
  /**
   * <pre>
   *标题
   * </pre>
   *
   * <code>required string title = 7;</code>
   */
  public boolean hasTitle() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *标题
   * </pre>
   *
   * <code>required string title = 7;</code>
   */
  public java.lang.String getTitle() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        title_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *标题
   * </pre>
   *
   * <code>required string title = 7;</code>
   */
  public com.google.protobuf.ByteString
      getTitleBytes() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      title_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESP_FIELD_NUMBER = 8;
  private volatile java.lang.Object desp_;
  /**
   * <pre>
   *描述
   * </pre>
   *
   * <code>required string desp = 8;</code>
   */
  public boolean hasDesp() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *描述
   * </pre>
   *
   * <code>required string desp = 8;</code>
   */
  public java.lang.String getDesp() {
    java.lang.Object ref = desp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        desp_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *描述
   * </pre>
   *
   * <code>required string desp = 8;</code>
   */
  public com.google.protobuf.ByteString
      getDespBytes() {
    java.lang.Object ref = desp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      desp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKTIME_FIELD_NUMBER = 9;
  private long markTime_;
  /**
   * <pre>
   *发布时间
   * </pre>
   *
   * <code>required int64 markTime = 9;</code>
   */
  public boolean hasMarkTime() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *发布时间
   * </pre>
   *
   * <code>required int64 markTime = 9;</code>
   */
  public long getMarkTime() {
    return markTime_;
  }

  public static final int MARKID_FIELD_NUMBER = 10;
  private long markId_;
  /**
   * <pre>
   *标记唯一ID
   * </pre>
   *
   * <code>required int64 markId = 10;</code>
   */
  public boolean hasMarkId() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *标记唯一ID
   * </pre>
   *
   * <code>required int64 markId = 10;</code>
   */
  public long getMarkId() {
    return markId_;
  }

  public static final int PLTAREANO_FIELD_NUMBER = 11;
  private int pltAreaNo_;
  /**
   * <pre>
   *服务器编号
   * </pre>
   *
   * <code>required int32 pltAreaNo = 11;</code>
   */
  public boolean hasPltAreaNo() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *服务器编号
   * </pre>
   *
   * <code>required int32 pltAreaNo = 11;</code>
   */
  public int getPltAreaNo() {
    return pltAreaNo_;
  }

  public static final int PHOTOPROTOID_FIELD_NUMBER = 12;
  private int photoProtoId_;
  /**
   * <pre>
   * 头像
   * </pre>
   *
   * <code>required int32 photoProtoId = 12;</code>
   */
  public boolean hasPhotoProtoId() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   * 头像
   * </pre>
   *
   * <code>required int32 photoProtoId = 12;</code>
   */
  public int getPhotoProtoId() {
    return photoProtoId_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasTitle()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasDesp()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMarkTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMarkId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPltAreaNo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPhotoProtoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, type_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, playerId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, playerName_);
    }
    for (int i = 0; i < positions_.size(); i++) {
      output.writeInt32(4, positions_.get(i));
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(5, x_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(6, y_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, title_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, desp_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt64(9, markTime_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt64(10, markId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(11, pltAreaNo_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(12, photoProtoId_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, type_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, playerId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, playerName_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < positions_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(positions_.get(i));
      }
      size += dataSize;
      size += 1 * getPositionsList().size();
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, x_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, y_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, title_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, desp_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, markTime_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, markId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, pltAreaNo_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, photoProtoId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.AllianceMarkInfo)) {
      return super.equals(obj);
    }
    pb4client.AllianceMarkInfo other = (pb4client.AllianceMarkInfo) obj;

    boolean result = true;
    result = result && (hasType() == other.hasType());
    if (hasType()) {
      result = result && (getType()
          == other.getType());
    }
    result = result && (hasPlayerId() == other.hasPlayerId());
    if (hasPlayerId()) {
      result = result && (getPlayerId()
          == other.getPlayerId());
    }
    result = result && (hasPlayerName() == other.hasPlayerName());
    if (hasPlayerName()) {
      result = result && getPlayerName()
          .equals(other.getPlayerName());
    }
    result = result && getPositionsList()
        .equals(other.getPositionsList());
    result = result && (hasX() == other.hasX());
    if (hasX()) {
      result = result && (getX()
          == other.getX());
    }
    result = result && (hasY() == other.hasY());
    if (hasY()) {
      result = result && (getY()
          == other.getY());
    }
    result = result && (hasTitle() == other.hasTitle());
    if (hasTitle()) {
      result = result && getTitle()
          .equals(other.getTitle());
    }
    result = result && (hasDesp() == other.hasDesp());
    if (hasDesp()) {
      result = result && getDesp()
          .equals(other.getDesp());
    }
    result = result && (hasMarkTime() == other.hasMarkTime());
    if (hasMarkTime()) {
      result = result && (getMarkTime()
          == other.getMarkTime());
    }
    result = result && (hasMarkId() == other.hasMarkId());
    if (hasMarkId()) {
      result = result && (getMarkId()
          == other.getMarkId());
    }
    result = result && (hasPltAreaNo() == other.hasPltAreaNo());
    if (hasPltAreaNo()) {
      result = result && (getPltAreaNo()
          == other.getPltAreaNo());
    }
    result = result && (hasPhotoProtoId() == other.hasPhotoProtoId());
    if (hasPhotoProtoId()) {
      result = result && (getPhotoProtoId()
          == other.getPhotoProtoId());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
    }
    if (hasPlayerId()) {
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPlayerId());
    }
    if (hasPlayerName()) {
      hash = (37 * hash) + PLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
    }
    if (getPositionsCount() > 0) {
      hash = (37 * hash) + POSITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPositionsList().hashCode();
    }
    if (hasX()) {
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
    }
    if (hasY()) {
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
    }
    if (hasTitle()) {
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
    }
    if (hasDesp()) {
      hash = (37 * hash) + DESP_FIELD_NUMBER;
      hash = (53 * hash) + getDesp().hashCode();
    }
    if (hasMarkTime()) {
      hash = (37 * hash) + MARKTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMarkTime());
    }
    if (hasMarkId()) {
      hash = (37 * hash) + MARKID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMarkId());
    }
    if (hasPltAreaNo()) {
      hash = (37 * hash) + PLTAREANO_FIELD_NUMBER;
      hash = (53 * hash) + getPltAreaNo();
    }
    if (hasPhotoProtoId()) {
      hash = (37 * hash) + PHOTOPROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getPhotoProtoId();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.AllianceMarkInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceMarkInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceMarkInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceMarkInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.AllianceMarkInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceMarkInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.AllianceMarkInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.AllianceMarkInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.AllianceMarkInfo)
      pb4client.AllianceMarkInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceMarkInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceMarkInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.AllianceMarkInfo.class, pb4client.AllianceMarkInfo.Builder.class);
    }

    // Construct using pb4client.AllianceMarkInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      type_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      playerId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      playerName_ = "";
      bitField0_ = (bitField0_ & ~0x00000004);
      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      x_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      y_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      title_ = "";
      bitField0_ = (bitField0_ & ~0x00000040);
      desp_ = "";
      bitField0_ = (bitField0_ & ~0x00000080);
      markTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      markId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      pltAreaNo_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      photoProtoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceMarkInfo_descriptor;
    }

    public pb4client.AllianceMarkInfo getDefaultInstanceForType() {
      return pb4client.AllianceMarkInfo.getDefaultInstance();
    }

    public pb4client.AllianceMarkInfo build() {
      pb4client.AllianceMarkInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.AllianceMarkInfo buildPartial() {
      pb4client.AllianceMarkInfo result = new pb4client.AllianceMarkInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.playerId_ = playerId_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.playerName_ = playerName_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.positions_ = positions_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000008;
      }
      result.x_ = x_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000010;
      }
      result.y_ = y_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000020;
      }
      result.title_ = title_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000040;
      }
      result.desp_ = desp_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000080;
      }
      result.markTime_ = markTime_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000100;
      }
      result.markId_ = markId_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000200;
      }
      result.pltAreaNo_ = pltAreaNo_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000400;
      }
      result.photoProtoId_ = photoProtoId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.AllianceMarkInfo) {
        return mergeFrom((pb4client.AllianceMarkInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.AllianceMarkInfo other) {
      if (other == pb4client.AllianceMarkInfo.getDefaultInstance()) return this;
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasPlayerId()) {
        setPlayerId(other.getPlayerId());
      }
      if (other.hasPlayerName()) {
        bitField0_ |= 0x00000004;
        playerName_ = other.playerName_;
        onChanged();
      }
      if (!other.positions_.isEmpty()) {
        if (positions_.isEmpty()) {
          positions_ = other.positions_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensurePositionsIsMutable();
          positions_.addAll(other.positions_);
        }
        onChanged();
      }
      if (other.hasX()) {
        setX(other.getX());
      }
      if (other.hasY()) {
        setY(other.getY());
      }
      if (other.hasTitle()) {
        bitField0_ |= 0x00000040;
        title_ = other.title_;
        onChanged();
      }
      if (other.hasDesp()) {
        bitField0_ |= 0x00000080;
        desp_ = other.desp_;
        onChanged();
      }
      if (other.hasMarkTime()) {
        setMarkTime(other.getMarkTime());
      }
      if (other.hasMarkId()) {
        setMarkId(other.getMarkId());
      }
      if (other.hasPltAreaNo()) {
        setPltAreaNo(other.getPltAreaNo());
      }
      if (other.hasPhotoProtoId()) {
        setPhotoProtoId(other.getPhotoProtoId());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasType()) {
        return false;
      }
      if (!hasPlayerId()) {
        return false;
      }
      if (!hasPlayerName()) {
        return false;
      }
      if (!hasX()) {
        return false;
      }
      if (!hasY()) {
        return false;
      }
      if (!hasTitle()) {
        return false;
      }
      if (!hasDesp()) {
        return false;
      }
      if (!hasMarkTime()) {
        return false;
      }
      if (!hasMarkId()) {
        return false;
      }
      if (!hasPltAreaNo()) {
        return false;
      }
      if (!hasPhotoProtoId()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.AllianceMarkInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.AllianceMarkInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int type_ ;
    /**
     * <pre>
     *类型：1-联盟标记；2-集结请求
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *类型：1-联盟标记；2-集结请求
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     *类型：1-联盟标记；2-集结请求
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public Builder setType(int value) {
      bitField0_ |= 0x00000001;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *类型：1-联盟标记；2-集结请求
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private long playerId_ ;
    /**
     * <pre>
     *发布者ID
     * </pre>
     *
     * <code>required int64 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *发布者ID
     * </pre>
     *
     * <code>required int64 playerId = 2;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }
    /**
     * <pre>
     *发布者ID
     * </pre>
     *
     * <code>required int64 playerId = 2;</code>
     */
    public Builder setPlayerId(long value) {
      bitField0_ |= 0x00000002;
      playerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者ID
     * </pre>
     *
     * <code>required int64 playerId = 2;</code>
     */
    public Builder clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playerId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object playerName_ = "";
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder setPlayerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      playerName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder clearPlayerName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      playerName_ = getDefaultInstance().getPlayerName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者名字
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder setPlayerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      playerName_ = value;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> positions_ = java.util.Collections.emptyList();
    private void ensurePositionsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        positions_ = new java.util.ArrayList<java.lang.Integer>(positions_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getPositionsList() {
      return java.util.Collections.unmodifiableList(positions_);
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public int getPositionsCount() {
      return positions_.size();
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public int getPositions(int index) {
      return positions_.get(index);
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public Builder setPositions(
        int index, int value) {
      ensurePositionsIsMutable();
      positions_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public Builder addPositions(int value) {
      ensurePositionsIsMutable();
      positions_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public Builder addAllPositions(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePositionsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, positions_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布者职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 4;</code>
     */
    public Builder clearPositions() {
      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private int x_ ;
    /**
     * <pre>
     *发布坐标X
     * </pre>
     *
     * <code>required int32 x = 5;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *发布坐标X
     * </pre>
     *
     * <code>required int32 x = 5;</code>
     */
    public int getX() {
      return x_;
    }
    /**
     * <pre>
     *发布坐标X
     * </pre>
     *
     * <code>required int32 x = 5;</code>
     */
    public Builder setX(int value) {
      bitField0_ |= 0x00000010;
      x_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布坐标X
     * </pre>
     *
     * <code>required int32 x = 5;</code>
     */
    public Builder clearX() {
      bitField0_ = (bitField0_ & ~0x00000010);
      x_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <pre>
     *发布坐标Y
     * </pre>
     *
     * <code>required int32 y = 6;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *发布坐标Y
     * </pre>
     *
     * <code>required int32 y = 6;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <pre>
     *发布坐标Y
     * </pre>
     *
     * <code>required int32 y = 6;</code>
     */
    public Builder setY(int value) {
      bitField0_ |= 0x00000020;
      y_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布坐标Y
     * </pre>
     *
     * <code>required int32 y = 6;</code>
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000020);
      y_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object title_ = "";
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public Builder setTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      title_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public Builder clearTitle() {
      bitField0_ = (bitField0_ & ~0x00000040);
      title_ = getDefaultInstance().getTitle();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标题
     * </pre>
     *
     * <code>required string title = 7;</code>
     */
    public Builder setTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      title_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object desp_ = "";
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public boolean hasDesp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public java.lang.String getDesp() {
      java.lang.Object ref = desp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desp_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDespBytes() {
      java.lang.Object ref = desp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public Builder setDesp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      desp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public Builder clearDesp() {
      bitField0_ = (bitField0_ & ~0x00000080);
      desp_ = getDefaultInstance().getDesp();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *描述
     * </pre>
     *
     * <code>required string desp = 8;</code>
     */
    public Builder setDespBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      desp_ = value;
      onChanged();
      return this;
    }

    private long markTime_ ;
    /**
     * <pre>
     *发布时间
     * </pre>
     *
     * <code>required int64 markTime = 9;</code>
     */
    public boolean hasMarkTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *发布时间
     * </pre>
     *
     * <code>required int64 markTime = 9;</code>
     */
    public long getMarkTime() {
      return markTime_;
    }
    /**
     * <pre>
     *发布时间
     * </pre>
     *
     * <code>required int64 markTime = 9;</code>
     */
    public Builder setMarkTime(long value) {
      bitField0_ |= 0x00000100;
      markTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发布时间
     * </pre>
     *
     * <code>required int64 markTime = 9;</code>
     */
    public Builder clearMarkTime() {
      bitField0_ = (bitField0_ & ~0x00000100);
      markTime_ = 0L;
      onChanged();
      return this;
    }

    private long markId_ ;
    /**
     * <pre>
     *标记唯一ID
     * </pre>
     *
     * <code>required int64 markId = 10;</code>
     */
    public boolean hasMarkId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *标记唯一ID
     * </pre>
     *
     * <code>required int64 markId = 10;</code>
     */
    public long getMarkId() {
      return markId_;
    }
    /**
     * <pre>
     *标记唯一ID
     * </pre>
     *
     * <code>required int64 markId = 10;</code>
     */
    public Builder setMarkId(long value) {
      bitField0_ |= 0x00000200;
      markId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标记唯一ID
     * </pre>
     *
     * <code>required int64 markId = 10;</code>
     */
    public Builder clearMarkId() {
      bitField0_ = (bitField0_ & ~0x00000200);
      markId_ = 0L;
      onChanged();
      return this;
    }

    private int pltAreaNo_ ;
    /**
     * <pre>
     *服务器编号
     * </pre>
     *
     * <code>required int32 pltAreaNo = 11;</code>
     */
    public boolean hasPltAreaNo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *服务器编号
     * </pre>
     *
     * <code>required int32 pltAreaNo = 11;</code>
     */
    public int getPltAreaNo() {
      return pltAreaNo_;
    }
    /**
     * <pre>
     *服务器编号
     * </pre>
     *
     * <code>required int32 pltAreaNo = 11;</code>
     */
    public Builder setPltAreaNo(int value) {
      bitField0_ |= 0x00000400;
      pltAreaNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *服务器编号
     * </pre>
     *
     * <code>required int32 pltAreaNo = 11;</code>
     */
    public Builder clearPltAreaNo() {
      bitField0_ = (bitField0_ & ~0x00000400);
      pltAreaNo_ = 0;
      onChanged();
      return this;
    }

    private int photoProtoId_ ;
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>required int32 photoProtoId = 12;</code>
     */
    public boolean hasPhotoProtoId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>required int32 photoProtoId = 12;</code>
     */
    public int getPhotoProtoId() {
      return photoProtoId_;
    }
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>required int32 photoProtoId = 12;</code>
     */
    public Builder setPhotoProtoId(int value) {
      bitField0_ |= 0x00000800;
      photoProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>required int32 photoProtoId = 12;</code>
     */
    public Builder clearPhotoProtoId() {
      bitField0_ = (bitField0_ & ~0x00000800);
      photoProtoId_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.AllianceMarkInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.AllianceMarkInfo)
  private static final pb4client.AllianceMarkInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.AllianceMarkInfo();
  }

  public static pb4client.AllianceMarkInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<AllianceMarkInfo>
      PARSER = new com.google.protobuf.AbstractParser<AllianceMarkInfo>() {
    public AllianceMarkInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllianceMarkInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AllianceMarkInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllianceMarkInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.AllianceMarkInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

