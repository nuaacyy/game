// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.NewShowNearMapRt}
 */
public  final class NewShowNearMapRt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.NewShowNearMapRt)
    NewShowNearMapRtOrBuilder {
  // Use NewShowNearMapRt.newBuilder() to construct.
  private NewShowNearMapRt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NewShowNearMapRt() {
    rt_ = 0;
    lands_ = java.util.Collections.emptyList();
    removeXY_ = java.util.Collections.emptyList();
    walkRobots_ = java.util.Collections.emptyList();
    walkInfos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NewShowNearMapRt(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            rt_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              lands_ = new java.util.ArrayList<pb4client.NewEveryLandInfo>();
              mutable_bitField0_ |= 0x00000002;
            }
            lands_.add(
                input.readMessage(pb4client.NewEveryLandInfo.PARSER, extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              removeXY_ = new java.util.ArrayList<pb4client.RemoveXY>();
              mutable_bitField0_ |= 0x00000004;
            }
            removeXY_.add(
                input.readMessage(pb4client.RemoveXY.PARSER, extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              walkRobots_ = new java.util.ArrayList<pb4client.WalkRobot>();
              mutable_bitField0_ |= 0x00000008;
            }
            walkRobots_.add(
                input.readMessage(pb4client.WalkRobot.PARSER, extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              walkInfos_ = new java.util.ArrayList<pb4client.WalkRobot>();
              mutable_bitField0_ |= 0x00000010;
            }
            walkInfos_.add(
                input.readMessage(pb4client.WalkRobot.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        lands_ = java.util.Collections.unmodifiableList(lands_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        removeXY_ = java.util.Collections.unmodifiableList(removeXY_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        walkRobots_ = java.util.Collections.unmodifiableList(walkRobots_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        walkInfos_ = java.util.Collections.unmodifiableList(walkInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_NewShowNearMapRt_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_NewShowNearMapRt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.NewShowNearMapRt.class, pb4client.NewShowNearMapRt.Builder.class);
  }

  private int bitField0_;
  public static final int RT_FIELD_NUMBER = 1;
  private int rt_;
  /**
   * <code>required int32 rt = 1;</code>
   */
  public boolean hasRt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int32 rt = 1;</code>
   */
  public int getRt() {
    return rt_;
  }

  public static final int LANDS_FIELD_NUMBER = 2;
  private java.util.List<pb4client.NewEveryLandInfo> lands_;
  /**
   * <pre>
   *格子信息
   * </pre>
   *
   * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
   */
  public java.util.List<pb4client.NewEveryLandInfo> getLandsList() {
    return lands_;
  }
  /**
   * <pre>
   *格子信息
   * </pre>
   *
   * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
   */
  public java.util.List<? extends pb4client.NewEveryLandInfoOrBuilder> 
      getLandsOrBuilderList() {
    return lands_;
  }
  /**
   * <pre>
   *格子信息
   * </pre>
   *
   * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
   */
  public int getLandsCount() {
    return lands_.size();
  }
  /**
   * <pre>
   *格子信息
   * </pre>
   *
   * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
   */
  public pb4client.NewEveryLandInfo getLands(int index) {
    return lands_.get(index);
  }
  /**
   * <pre>
   *格子信息
   * </pre>
   *
   * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
   */
  public pb4client.NewEveryLandInfoOrBuilder getLandsOrBuilder(
      int index) {
    return lands_.get(index);
  }

  public static final int REMOVEXY_FIELD_NUMBER = 3;
  private java.util.List<pb4client.RemoveXY> removeXY_;
  /**
   * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
   */
  public java.util.List<pb4client.RemoveXY> getRemoveXYList() {
    return removeXY_;
  }
  /**
   * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
   */
  public java.util.List<? extends pb4client.RemoveXYOrBuilder> 
      getRemoveXYOrBuilderList() {
    return removeXY_;
  }
  /**
   * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
   */
  public int getRemoveXYCount() {
    return removeXY_.size();
  }
  /**
   * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
   */
  public pb4client.RemoveXY getRemoveXY(int index) {
    return removeXY_.get(index);
  }
  /**
   * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
   */
  public pb4client.RemoveXYOrBuilder getRemoveXYOrBuilder(
      int index) {
    return removeXY_.get(index);
  }

  public static final int WALKROBOTS_FIELD_NUMBER = 4;
  private java.util.List<pb4client.WalkRobot> walkRobots_;
  /**
   * <pre>
   *当前格子有行军小人存在
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
   */
  public java.util.List<pb4client.WalkRobot> getWalkRobotsList() {
    return walkRobots_;
  }
  /**
   * <pre>
   *当前格子有行军小人存在
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
   */
  public java.util.List<? extends pb4client.WalkRobotOrBuilder> 
      getWalkRobotsOrBuilderList() {
    return walkRobots_;
  }
  /**
   * <pre>
   *当前格子有行军小人存在
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
   */
  public int getWalkRobotsCount() {
    return walkRobots_.size();
  }
  /**
   * <pre>
   *当前格子有行军小人存在
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
   */
  public pb4client.WalkRobot getWalkRobots(int index) {
    return walkRobots_.get(index);
  }
  /**
   * <pre>
   *当前格子有行军小人存在
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
   */
  public pb4client.WalkRobotOrBuilder getWalkRobotsOrBuilder(
      int index) {
    return walkRobots_.get(index);
  }

  public static final int WALKINFOS_FIELD_NUMBER = 5;
  private java.util.List<pb4client.WalkRobot> walkInfos_;
  /**
   * <pre>
   * 以该点为起点或终点的行军线
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
   */
  public java.util.List<pb4client.WalkRobot> getWalkInfosList() {
    return walkInfos_;
  }
  /**
   * <pre>
   * 以该点为起点或终点的行军线
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
   */
  public java.util.List<? extends pb4client.WalkRobotOrBuilder> 
      getWalkInfosOrBuilderList() {
    return walkInfos_;
  }
  /**
   * <pre>
   * 以该点为起点或终点的行军线
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
   */
  public int getWalkInfosCount() {
    return walkInfos_.size();
  }
  /**
   * <pre>
   * 以该点为起点或终点的行军线
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
   */
  public pb4client.WalkRobot getWalkInfos(int index) {
    return walkInfos_.get(index);
  }
  /**
   * <pre>
   * 以该点为起点或终点的行军线
   * </pre>
   *
   * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
   */
  public pb4client.WalkRobotOrBuilder getWalkInfosOrBuilder(
      int index) {
    return walkInfos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRt()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getLandsCount(); i++) {
      if (!getLands(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getRemoveXYCount(); i++) {
      if (!getRemoveXY(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getWalkRobotsCount(); i++) {
      if (!getWalkRobots(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getWalkInfosCount(); i++) {
      if (!getWalkInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, rt_);
    }
    for (int i = 0; i < lands_.size(); i++) {
      output.writeMessage(2, lands_.get(i));
    }
    for (int i = 0; i < removeXY_.size(); i++) {
      output.writeMessage(3, removeXY_.get(i));
    }
    for (int i = 0; i < walkRobots_.size(); i++) {
      output.writeMessage(4, walkRobots_.get(i));
    }
    for (int i = 0; i < walkInfos_.size(); i++) {
      output.writeMessage(5, walkInfos_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, rt_);
    }
    for (int i = 0; i < lands_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, lands_.get(i));
    }
    for (int i = 0; i < removeXY_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, removeXY_.get(i));
    }
    for (int i = 0; i < walkRobots_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, walkRobots_.get(i));
    }
    for (int i = 0; i < walkInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, walkInfos_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.NewShowNearMapRt)) {
      return super.equals(obj);
    }
    pb4client.NewShowNearMapRt other = (pb4client.NewShowNearMapRt) obj;

    boolean result = true;
    result = result && (hasRt() == other.hasRt());
    if (hasRt()) {
      result = result && (getRt()
          == other.getRt());
    }
    result = result && getLandsList()
        .equals(other.getLandsList());
    result = result && getRemoveXYList()
        .equals(other.getRemoveXYList());
    result = result && getWalkRobotsList()
        .equals(other.getWalkRobotsList());
    result = result && getWalkInfosList()
        .equals(other.getWalkInfosList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRt()) {
      hash = (37 * hash) + RT_FIELD_NUMBER;
      hash = (53 * hash) + getRt();
    }
    if (getLandsCount() > 0) {
      hash = (37 * hash) + LANDS_FIELD_NUMBER;
      hash = (53 * hash) + getLandsList().hashCode();
    }
    if (getRemoveXYCount() > 0) {
      hash = (37 * hash) + REMOVEXY_FIELD_NUMBER;
      hash = (53 * hash) + getRemoveXYList().hashCode();
    }
    if (getWalkRobotsCount() > 0) {
      hash = (37 * hash) + WALKROBOTS_FIELD_NUMBER;
      hash = (53 * hash) + getWalkRobotsList().hashCode();
    }
    if (getWalkInfosCount() > 0) {
      hash = (37 * hash) + WALKINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getWalkInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.NewShowNearMapRt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewShowNearMapRt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewShowNearMapRt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.NewShowNearMapRt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.NewShowNearMapRt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.NewShowNearMapRt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.NewShowNearMapRt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.NewShowNearMapRt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.NewShowNearMapRt)
      pb4client.NewShowNearMapRtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_NewShowNearMapRt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_NewShowNearMapRt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.NewShowNearMapRt.class, pb4client.NewShowNearMapRt.Builder.class);
    }

    // Construct using pb4client.NewShowNearMapRt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getLandsFieldBuilder();
        getRemoveXYFieldBuilder();
        getWalkRobotsFieldBuilder();
        getWalkInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      rt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (landsBuilder_ == null) {
        lands_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        landsBuilder_.clear();
      }
      if (removeXYBuilder_ == null) {
        removeXY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        removeXYBuilder_.clear();
      }
      if (walkRobotsBuilder_ == null) {
        walkRobots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        walkRobotsBuilder_.clear();
      }
      if (walkInfosBuilder_ == null) {
        walkInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        walkInfosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_NewShowNearMapRt_descriptor;
    }

    public pb4client.NewShowNearMapRt getDefaultInstanceForType() {
      return pb4client.NewShowNearMapRt.getDefaultInstance();
    }

    public pb4client.NewShowNearMapRt build() {
      pb4client.NewShowNearMapRt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.NewShowNearMapRt buildPartial() {
      pb4client.NewShowNearMapRt result = new pb4client.NewShowNearMapRt(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.rt_ = rt_;
      if (landsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          lands_ = java.util.Collections.unmodifiableList(lands_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.lands_ = lands_;
      } else {
        result.lands_ = landsBuilder_.build();
      }
      if (removeXYBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          removeXY_ = java.util.Collections.unmodifiableList(removeXY_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.removeXY_ = removeXY_;
      } else {
        result.removeXY_ = removeXYBuilder_.build();
      }
      if (walkRobotsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          walkRobots_ = java.util.Collections.unmodifiableList(walkRobots_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.walkRobots_ = walkRobots_;
      } else {
        result.walkRobots_ = walkRobotsBuilder_.build();
      }
      if (walkInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          walkInfos_ = java.util.Collections.unmodifiableList(walkInfos_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.walkInfos_ = walkInfos_;
      } else {
        result.walkInfos_ = walkInfosBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.NewShowNearMapRt) {
        return mergeFrom((pb4client.NewShowNearMapRt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.NewShowNearMapRt other) {
      if (other == pb4client.NewShowNearMapRt.getDefaultInstance()) return this;
      if (other.hasRt()) {
        setRt(other.getRt());
      }
      if (landsBuilder_ == null) {
        if (!other.lands_.isEmpty()) {
          if (lands_.isEmpty()) {
            lands_ = other.lands_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLandsIsMutable();
            lands_.addAll(other.lands_);
          }
          onChanged();
        }
      } else {
        if (!other.lands_.isEmpty()) {
          if (landsBuilder_.isEmpty()) {
            landsBuilder_.dispose();
            landsBuilder_ = null;
            lands_ = other.lands_;
            bitField0_ = (bitField0_ & ~0x00000002);
            landsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLandsFieldBuilder() : null;
          } else {
            landsBuilder_.addAllMessages(other.lands_);
          }
        }
      }
      if (removeXYBuilder_ == null) {
        if (!other.removeXY_.isEmpty()) {
          if (removeXY_.isEmpty()) {
            removeXY_ = other.removeXY_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRemoveXYIsMutable();
            removeXY_.addAll(other.removeXY_);
          }
          onChanged();
        }
      } else {
        if (!other.removeXY_.isEmpty()) {
          if (removeXYBuilder_.isEmpty()) {
            removeXYBuilder_.dispose();
            removeXYBuilder_ = null;
            removeXY_ = other.removeXY_;
            bitField0_ = (bitField0_ & ~0x00000004);
            removeXYBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRemoveXYFieldBuilder() : null;
          } else {
            removeXYBuilder_.addAllMessages(other.removeXY_);
          }
        }
      }
      if (walkRobotsBuilder_ == null) {
        if (!other.walkRobots_.isEmpty()) {
          if (walkRobots_.isEmpty()) {
            walkRobots_ = other.walkRobots_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureWalkRobotsIsMutable();
            walkRobots_.addAll(other.walkRobots_);
          }
          onChanged();
        }
      } else {
        if (!other.walkRobots_.isEmpty()) {
          if (walkRobotsBuilder_.isEmpty()) {
            walkRobotsBuilder_.dispose();
            walkRobotsBuilder_ = null;
            walkRobots_ = other.walkRobots_;
            bitField0_ = (bitField0_ & ~0x00000008);
            walkRobotsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWalkRobotsFieldBuilder() : null;
          } else {
            walkRobotsBuilder_.addAllMessages(other.walkRobots_);
          }
        }
      }
      if (walkInfosBuilder_ == null) {
        if (!other.walkInfos_.isEmpty()) {
          if (walkInfos_.isEmpty()) {
            walkInfos_ = other.walkInfos_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureWalkInfosIsMutable();
            walkInfos_.addAll(other.walkInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.walkInfos_.isEmpty()) {
          if (walkInfosBuilder_.isEmpty()) {
            walkInfosBuilder_.dispose();
            walkInfosBuilder_ = null;
            walkInfos_ = other.walkInfos_;
            bitField0_ = (bitField0_ & ~0x00000010);
            walkInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWalkInfosFieldBuilder() : null;
          } else {
            walkInfosBuilder_.addAllMessages(other.walkInfos_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRt()) {
        return false;
      }
      for (int i = 0; i < getLandsCount(); i++) {
        if (!getLands(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getRemoveXYCount(); i++) {
        if (!getRemoveXY(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getWalkRobotsCount(); i++) {
        if (!getWalkRobots(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getWalkInfosCount(); i++) {
        if (!getWalkInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.NewShowNearMapRt parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.NewShowNearMapRt) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int rt_ ;
    /**
     * <code>required int32 rt = 1;</code>
     */
    public boolean hasRt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public int getRt() {
      return rt_;
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public Builder setRt(int value) {
      bitField0_ |= 0x00000001;
      rt_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public Builder clearRt() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rt_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.NewEveryLandInfo> lands_ =
      java.util.Collections.emptyList();
    private void ensureLandsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        lands_ = new java.util.ArrayList<pb4client.NewEveryLandInfo>(lands_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.NewEveryLandInfo, pb4client.NewEveryLandInfo.Builder, pb4client.NewEveryLandInfoOrBuilder> landsBuilder_;

    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public java.util.List<pb4client.NewEveryLandInfo> getLandsList() {
      if (landsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(lands_);
      } else {
        return landsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public int getLandsCount() {
      if (landsBuilder_ == null) {
        return lands_.size();
      } else {
        return landsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public pb4client.NewEveryLandInfo getLands(int index) {
      if (landsBuilder_ == null) {
        return lands_.get(index);
      } else {
        return landsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder setLands(
        int index, pb4client.NewEveryLandInfo value) {
      if (landsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLandsIsMutable();
        lands_.set(index, value);
        onChanged();
      } else {
        landsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder setLands(
        int index, pb4client.NewEveryLandInfo.Builder builderForValue) {
      if (landsBuilder_ == null) {
        ensureLandsIsMutable();
        lands_.set(index, builderForValue.build());
        onChanged();
      } else {
        landsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder addLands(pb4client.NewEveryLandInfo value) {
      if (landsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLandsIsMutable();
        lands_.add(value);
        onChanged();
      } else {
        landsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder addLands(
        int index, pb4client.NewEveryLandInfo value) {
      if (landsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLandsIsMutable();
        lands_.add(index, value);
        onChanged();
      } else {
        landsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder addLands(
        pb4client.NewEveryLandInfo.Builder builderForValue) {
      if (landsBuilder_ == null) {
        ensureLandsIsMutable();
        lands_.add(builderForValue.build());
        onChanged();
      } else {
        landsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder addLands(
        int index, pb4client.NewEveryLandInfo.Builder builderForValue) {
      if (landsBuilder_ == null) {
        ensureLandsIsMutable();
        lands_.add(index, builderForValue.build());
        onChanged();
      } else {
        landsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder addAllLands(
        java.lang.Iterable<? extends pb4client.NewEveryLandInfo> values) {
      if (landsBuilder_ == null) {
        ensureLandsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lands_);
        onChanged();
      } else {
        landsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder clearLands() {
      if (landsBuilder_ == null) {
        lands_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        landsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public Builder removeLands(int index) {
      if (landsBuilder_ == null) {
        ensureLandsIsMutable();
        lands_.remove(index);
        onChanged();
      } else {
        landsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public pb4client.NewEveryLandInfo.Builder getLandsBuilder(
        int index) {
      return getLandsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public pb4client.NewEveryLandInfoOrBuilder getLandsOrBuilder(
        int index) {
      if (landsBuilder_ == null) {
        return lands_.get(index);  } else {
        return landsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public java.util.List<? extends pb4client.NewEveryLandInfoOrBuilder> 
         getLandsOrBuilderList() {
      if (landsBuilder_ != null) {
        return landsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(lands_);
      }
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public pb4client.NewEveryLandInfo.Builder addLandsBuilder() {
      return getLandsFieldBuilder().addBuilder(
          pb4client.NewEveryLandInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public pb4client.NewEveryLandInfo.Builder addLandsBuilder(
        int index) {
      return getLandsFieldBuilder().addBuilder(
          index, pb4client.NewEveryLandInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *格子信息
     * </pre>
     *
     * <code>repeated .client2server.NewEveryLandInfo lands = 2;</code>
     */
    public java.util.List<pb4client.NewEveryLandInfo.Builder> 
         getLandsBuilderList() {
      return getLandsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.NewEveryLandInfo, pb4client.NewEveryLandInfo.Builder, pb4client.NewEveryLandInfoOrBuilder> 
        getLandsFieldBuilder() {
      if (landsBuilder_ == null) {
        landsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.NewEveryLandInfo, pb4client.NewEveryLandInfo.Builder, pb4client.NewEveryLandInfoOrBuilder>(
                lands_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        lands_ = null;
      }
      return landsBuilder_;
    }

    private java.util.List<pb4client.RemoveXY> removeXY_ =
      java.util.Collections.emptyList();
    private void ensureRemoveXYIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        removeXY_ = new java.util.ArrayList<pb4client.RemoveXY>(removeXY_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RemoveXY, pb4client.RemoveXY.Builder, pb4client.RemoveXYOrBuilder> removeXYBuilder_;

    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public java.util.List<pb4client.RemoveXY> getRemoveXYList() {
      if (removeXYBuilder_ == null) {
        return java.util.Collections.unmodifiableList(removeXY_);
      } else {
        return removeXYBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public int getRemoveXYCount() {
      if (removeXYBuilder_ == null) {
        return removeXY_.size();
      } else {
        return removeXYBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public pb4client.RemoveXY getRemoveXY(int index) {
      if (removeXYBuilder_ == null) {
        return removeXY_.get(index);
      } else {
        return removeXYBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder setRemoveXY(
        int index, pb4client.RemoveXY value) {
      if (removeXYBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRemoveXYIsMutable();
        removeXY_.set(index, value);
        onChanged();
      } else {
        removeXYBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder setRemoveXY(
        int index, pb4client.RemoveXY.Builder builderForValue) {
      if (removeXYBuilder_ == null) {
        ensureRemoveXYIsMutable();
        removeXY_.set(index, builderForValue.build());
        onChanged();
      } else {
        removeXYBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder addRemoveXY(pb4client.RemoveXY value) {
      if (removeXYBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRemoveXYIsMutable();
        removeXY_.add(value);
        onChanged();
      } else {
        removeXYBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder addRemoveXY(
        int index, pb4client.RemoveXY value) {
      if (removeXYBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRemoveXYIsMutable();
        removeXY_.add(index, value);
        onChanged();
      } else {
        removeXYBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder addRemoveXY(
        pb4client.RemoveXY.Builder builderForValue) {
      if (removeXYBuilder_ == null) {
        ensureRemoveXYIsMutable();
        removeXY_.add(builderForValue.build());
        onChanged();
      } else {
        removeXYBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder addRemoveXY(
        int index, pb4client.RemoveXY.Builder builderForValue) {
      if (removeXYBuilder_ == null) {
        ensureRemoveXYIsMutable();
        removeXY_.add(index, builderForValue.build());
        onChanged();
      } else {
        removeXYBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder addAllRemoveXY(
        java.lang.Iterable<? extends pb4client.RemoveXY> values) {
      if (removeXYBuilder_ == null) {
        ensureRemoveXYIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, removeXY_);
        onChanged();
      } else {
        removeXYBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder clearRemoveXY() {
      if (removeXYBuilder_ == null) {
        removeXY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        removeXYBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public Builder removeRemoveXY(int index) {
      if (removeXYBuilder_ == null) {
        ensureRemoveXYIsMutable();
        removeXY_.remove(index);
        onChanged();
      } else {
        removeXYBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public pb4client.RemoveXY.Builder getRemoveXYBuilder(
        int index) {
      return getRemoveXYFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public pb4client.RemoveXYOrBuilder getRemoveXYOrBuilder(
        int index) {
      if (removeXYBuilder_ == null) {
        return removeXY_.get(index);  } else {
        return removeXYBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public java.util.List<? extends pb4client.RemoveXYOrBuilder> 
         getRemoveXYOrBuilderList() {
      if (removeXYBuilder_ != null) {
        return removeXYBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(removeXY_);
      }
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public pb4client.RemoveXY.Builder addRemoveXYBuilder() {
      return getRemoveXYFieldBuilder().addBuilder(
          pb4client.RemoveXY.getDefaultInstance());
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public pb4client.RemoveXY.Builder addRemoveXYBuilder(
        int index) {
      return getRemoveXYFieldBuilder().addBuilder(
          index, pb4client.RemoveXY.getDefaultInstance());
    }
    /**
     * <code>repeated .client2server.RemoveXY removeXY = 3;</code>
     */
    public java.util.List<pb4client.RemoveXY.Builder> 
         getRemoveXYBuilderList() {
      return getRemoveXYFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RemoveXY, pb4client.RemoveXY.Builder, pb4client.RemoveXYOrBuilder> 
        getRemoveXYFieldBuilder() {
      if (removeXYBuilder_ == null) {
        removeXYBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.RemoveXY, pb4client.RemoveXY.Builder, pb4client.RemoveXYOrBuilder>(
                removeXY_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        removeXY_ = null;
      }
      return removeXYBuilder_;
    }

    private java.util.List<pb4client.WalkRobot> walkRobots_ =
      java.util.Collections.emptyList();
    private void ensureWalkRobotsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        walkRobots_ = new java.util.ArrayList<pb4client.WalkRobot>(walkRobots_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder> walkRobotsBuilder_;

    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public java.util.List<pb4client.WalkRobot> getWalkRobotsList() {
      if (walkRobotsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(walkRobots_);
      } else {
        return walkRobotsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public int getWalkRobotsCount() {
      if (walkRobotsBuilder_ == null) {
        return walkRobots_.size();
      } else {
        return walkRobotsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public pb4client.WalkRobot getWalkRobots(int index) {
      if (walkRobotsBuilder_ == null) {
        return walkRobots_.get(index);
      } else {
        return walkRobotsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder setWalkRobots(
        int index, pb4client.WalkRobot value) {
      if (walkRobotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkRobotsIsMutable();
        walkRobots_.set(index, value);
        onChanged();
      } else {
        walkRobotsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder setWalkRobots(
        int index, pb4client.WalkRobot.Builder builderForValue) {
      if (walkRobotsBuilder_ == null) {
        ensureWalkRobotsIsMutable();
        walkRobots_.set(index, builderForValue.build());
        onChanged();
      } else {
        walkRobotsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder addWalkRobots(pb4client.WalkRobot value) {
      if (walkRobotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkRobotsIsMutable();
        walkRobots_.add(value);
        onChanged();
      } else {
        walkRobotsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder addWalkRobots(
        int index, pb4client.WalkRobot value) {
      if (walkRobotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkRobotsIsMutable();
        walkRobots_.add(index, value);
        onChanged();
      } else {
        walkRobotsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder addWalkRobots(
        pb4client.WalkRobot.Builder builderForValue) {
      if (walkRobotsBuilder_ == null) {
        ensureWalkRobotsIsMutable();
        walkRobots_.add(builderForValue.build());
        onChanged();
      } else {
        walkRobotsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder addWalkRobots(
        int index, pb4client.WalkRobot.Builder builderForValue) {
      if (walkRobotsBuilder_ == null) {
        ensureWalkRobotsIsMutable();
        walkRobots_.add(index, builderForValue.build());
        onChanged();
      } else {
        walkRobotsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder addAllWalkRobots(
        java.lang.Iterable<? extends pb4client.WalkRobot> values) {
      if (walkRobotsBuilder_ == null) {
        ensureWalkRobotsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, walkRobots_);
        onChanged();
      } else {
        walkRobotsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder clearWalkRobots() {
      if (walkRobotsBuilder_ == null) {
        walkRobots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        walkRobotsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public Builder removeWalkRobots(int index) {
      if (walkRobotsBuilder_ == null) {
        ensureWalkRobotsIsMutable();
        walkRobots_.remove(index);
        onChanged();
      } else {
        walkRobotsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public pb4client.WalkRobot.Builder getWalkRobotsBuilder(
        int index) {
      return getWalkRobotsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public pb4client.WalkRobotOrBuilder getWalkRobotsOrBuilder(
        int index) {
      if (walkRobotsBuilder_ == null) {
        return walkRobots_.get(index);  } else {
        return walkRobotsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public java.util.List<? extends pb4client.WalkRobotOrBuilder> 
         getWalkRobotsOrBuilderList() {
      if (walkRobotsBuilder_ != null) {
        return walkRobotsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(walkRobots_);
      }
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public pb4client.WalkRobot.Builder addWalkRobotsBuilder() {
      return getWalkRobotsFieldBuilder().addBuilder(
          pb4client.WalkRobot.getDefaultInstance());
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public pb4client.WalkRobot.Builder addWalkRobotsBuilder(
        int index) {
      return getWalkRobotsFieldBuilder().addBuilder(
          index, pb4client.WalkRobot.getDefaultInstance());
    }
    /**
     * <pre>
     *当前格子有行军小人存在
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkRobots = 4;</code>
     */
    public java.util.List<pb4client.WalkRobot.Builder> 
         getWalkRobotsBuilderList() {
      return getWalkRobotsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder> 
        getWalkRobotsFieldBuilder() {
      if (walkRobotsBuilder_ == null) {
        walkRobotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder>(
                walkRobots_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        walkRobots_ = null;
      }
      return walkRobotsBuilder_;
    }

    private java.util.List<pb4client.WalkRobot> walkInfos_ =
      java.util.Collections.emptyList();
    private void ensureWalkInfosIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        walkInfos_ = new java.util.ArrayList<pb4client.WalkRobot>(walkInfos_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder> walkInfosBuilder_;

    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public java.util.List<pb4client.WalkRobot> getWalkInfosList() {
      if (walkInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(walkInfos_);
      } else {
        return walkInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public int getWalkInfosCount() {
      if (walkInfosBuilder_ == null) {
        return walkInfos_.size();
      } else {
        return walkInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public pb4client.WalkRobot getWalkInfos(int index) {
      if (walkInfosBuilder_ == null) {
        return walkInfos_.get(index);
      } else {
        return walkInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder setWalkInfos(
        int index, pb4client.WalkRobot value) {
      if (walkInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkInfosIsMutable();
        walkInfos_.set(index, value);
        onChanged();
      } else {
        walkInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder setWalkInfos(
        int index, pb4client.WalkRobot.Builder builderForValue) {
      if (walkInfosBuilder_ == null) {
        ensureWalkInfosIsMutable();
        walkInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        walkInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder addWalkInfos(pb4client.WalkRobot value) {
      if (walkInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkInfosIsMutable();
        walkInfos_.add(value);
        onChanged();
      } else {
        walkInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder addWalkInfos(
        int index, pb4client.WalkRobot value) {
      if (walkInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkInfosIsMutable();
        walkInfos_.add(index, value);
        onChanged();
      } else {
        walkInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder addWalkInfos(
        pb4client.WalkRobot.Builder builderForValue) {
      if (walkInfosBuilder_ == null) {
        ensureWalkInfosIsMutable();
        walkInfos_.add(builderForValue.build());
        onChanged();
      } else {
        walkInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder addWalkInfos(
        int index, pb4client.WalkRobot.Builder builderForValue) {
      if (walkInfosBuilder_ == null) {
        ensureWalkInfosIsMutable();
        walkInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        walkInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder addAllWalkInfos(
        java.lang.Iterable<? extends pb4client.WalkRobot> values) {
      if (walkInfosBuilder_ == null) {
        ensureWalkInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, walkInfos_);
        onChanged();
      } else {
        walkInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder clearWalkInfos() {
      if (walkInfosBuilder_ == null) {
        walkInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        walkInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public Builder removeWalkInfos(int index) {
      if (walkInfosBuilder_ == null) {
        ensureWalkInfosIsMutable();
        walkInfos_.remove(index);
        onChanged();
      } else {
        walkInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public pb4client.WalkRobot.Builder getWalkInfosBuilder(
        int index) {
      return getWalkInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public pb4client.WalkRobotOrBuilder getWalkInfosOrBuilder(
        int index) {
      if (walkInfosBuilder_ == null) {
        return walkInfos_.get(index);  } else {
        return walkInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public java.util.List<? extends pb4client.WalkRobotOrBuilder> 
         getWalkInfosOrBuilderList() {
      if (walkInfosBuilder_ != null) {
        return walkInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(walkInfos_);
      }
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public pb4client.WalkRobot.Builder addWalkInfosBuilder() {
      return getWalkInfosFieldBuilder().addBuilder(
          pb4client.WalkRobot.getDefaultInstance());
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public pb4client.WalkRobot.Builder addWalkInfosBuilder(
        int index) {
      return getWalkInfosFieldBuilder().addBuilder(
          index, pb4client.WalkRobot.getDefaultInstance());
    }
    /**
     * <pre>
     * 以该点为起点或终点的行军线
     * </pre>
     *
     * <code>repeated .client2server.WalkRobot walkInfos = 5;</code>
     */
    public java.util.List<pb4client.WalkRobot.Builder> 
         getWalkInfosBuilderList() {
      return getWalkInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder> 
        getWalkInfosFieldBuilder() {
      if (walkInfosBuilder_ == null) {
        walkInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.WalkRobot, pb4client.WalkRobot.Builder, pb4client.WalkRobotOrBuilder>(
                walkInfos_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        walkInfos_ = null;
      }
      return walkInfosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.NewShowNearMapRt)
  }

  // @@protoc_insertion_point(class_scope:client2server.NewShowNearMapRt)
  private static final pb4client.NewShowNearMapRt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.NewShowNearMapRt();
  }

  public static pb4client.NewShowNearMapRt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<NewShowNearMapRt>
      PARSER = new com.google.protobuf.AbstractParser<NewShowNearMapRt>() {
    public NewShowNearMapRt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewShowNearMapRt(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NewShowNearMapRt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NewShowNearMapRt> getParserForType() {
    return PARSER;
  }

  public pb4client.NewShowNearMapRt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

