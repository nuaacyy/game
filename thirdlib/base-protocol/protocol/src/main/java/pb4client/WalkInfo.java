// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.WalkInfo}
 */
public  final class WalkInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.WalkInfo)
    WalkInfoOrBuilder {
  // Use WalkInfo.newBuilder() to construct.
  private WalkInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WalkInfo() {
    walkForceInfos_ = java.util.Collections.emptyList();
    warningStartX_ = 0;
    warningStartY_ = 0;
    warningGotoX_ = 0;
    warningGotoY_ = 0;
    warningStartTime_ = 0;
    warningEndTime_ = 0;
    myAllianceId_ = 0L;
    myUpAllianceId_ = 0L;
    onlyId_ = 0L;
    isWarning_ = 0;
    warningSource_ = 0;
    usetime_ = 0;
    walkType_ = 0;
    walkBus_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WalkInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              walkForceInfos_ = new java.util.ArrayList<pb4client.WalkForceInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            walkForceInfos_.add(
                input.readMessage(pb4client.WalkForceInfo.PARSER, extensionRegistry));
            break;
          }
          case 24: {
            bitField0_ |= 0x00000001;
            warningStartX_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000002;
            warningStartY_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000004;
            warningGotoX_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000008;
            warningGotoY_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000010;
            warningStartTime_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000020;
            warningEndTime_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000040;
            myAllianceId_ = input.readInt64();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000080;
            myUpAllianceId_ = input.readInt64();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000100;
            onlyId_ = input.readInt64();
            break;
          }
          case 104: {
            bitField0_ |= 0x00000200;
            isWarning_ = input.readInt32();
            break;
          }
          case 112: {
            bitField0_ |= 0x00000400;
            warningSource_ = input.readInt32();
            break;
          }
          case 120: {
            bitField0_ |= 0x00000800;
            usetime_ = input.readInt32();
            break;
          }
          case 128: {
            bitField0_ |= 0x00001000;
            walkType_ = input.readInt32();
            break;
          }
          case 136: {
            bitField0_ |= 0x00002000;
            walkBus_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        walkForceInfos_ = java.util.Collections.unmodifiableList(walkForceInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_WalkInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_WalkInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.WalkInfo.class, pb4client.WalkInfo.Builder.class);
  }

  private int bitField0_;
  public static final int WALKFORCEINFOS_FIELD_NUMBER = 1;
  private java.util.List<pb4client.WalkForceInfo> walkForceInfos_;
  /**
   * <pre>
   * 进攻者ID
   * </pre>
   *
   * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
   */
  public java.util.List<pb4client.WalkForceInfo> getWalkForceInfosList() {
    return walkForceInfos_;
  }
  /**
   * <pre>
   * 进攻者ID
   * </pre>
   *
   * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
   */
  public java.util.List<? extends pb4client.WalkForceInfoOrBuilder> 
      getWalkForceInfosOrBuilderList() {
    return walkForceInfos_;
  }
  /**
   * <pre>
   * 进攻者ID
   * </pre>
   *
   * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
   */
  public int getWalkForceInfosCount() {
    return walkForceInfos_.size();
  }
  /**
   * <pre>
   * 进攻者ID
   * </pre>
   *
   * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
   */
  public pb4client.WalkForceInfo getWalkForceInfos(int index) {
    return walkForceInfos_.get(index);
  }
  /**
   * <pre>
   * 进攻者ID
   * </pre>
   *
   * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
   */
  public pb4client.WalkForceInfoOrBuilder getWalkForceInfosOrBuilder(
      int index) {
    return walkForceInfos_.get(index);
  }

  public static final int WARNINGSTARTX_FIELD_NUMBER = 3;
  private int warningStartX_;
  /**
   * <pre>
   * 进攻起点X
   * </pre>
   *
   * <code>required int32 warningStartX = 3;</code>
   */
  public boolean hasWarningStartX() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 进攻起点X
   * </pre>
   *
   * <code>required int32 warningStartX = 3;</code>
   */
  public int getWarningStartX() {
    return warningStartX_;
  }

  public static final int WARNINGSTARTY_FIELD_NUMBER = 4;
  private int warningStartY_;
  /**
   * <pre>
   * 进攻起点Y
   * </pre>
   *
   * <code>required int32 warningStartY = 4;</code>
   */
  public boolean hasWarningStartY() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 进攻起点Y
   * </pre>
   *
   * <code>required int32 warningStartY = 4;</code>
   */
  public int getWarningStartY() {
    return warningStartY_;
  }

  public static final int WARNINGGOTOX_FIELD_NUMBER = 5;
  private int warningGotoX_;
  /**
   * <pre>
   * 目的地X
   * </pre>
   *
   * <code>required int32 warningGotoX = 5;</code>
   */
  public boolean hasWarningGotoX() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 目的地X
   * </pre>
   *
   * <code>required int32 warningGotoX = 5;</code>
   */
  public int getWarningGotoX() {
    return warningGotoX_;
  }

  public static final int WARNINGGOTOY_FIELD_NUMBER = 6;
  private int warningGotoY_;
  /**
   * <pre>
   * 目的地Y
   * </pre>
   *
   * <code>required int32 warningGotoY = 6;</code>
   */
  public boolean hasWarningGotoY() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 目的地Y
   * </pre>
   *
   * <code>required int32 warningGotoY = 6;</code>
   */
  public int getWarningGotoY() {
    return warningGotoY_;
  }

  public static final int WARNINGSTARTTIME_FIELD_NUMBER = 7;
  private int warningStartTime_;
  /**
   * <pre>
   * 出发时间
   * </pre>
   *
   * <code>required int32 warningStartTime = 7;</code>
   */
  public boolean hasWarningStartTime() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 出发时间
   * </pre>
   *
   * <code>required int32 warningStartTime = 7;</code>
   */
  public int getWarningStartTime() {
    return warningStartTime_;
  }

  public static final int WARNINGENDTIME_FIELD_NUMBER = 8;
  private int warningEndTime_;
  /**
   * <pre>
   * 到达时间
   * </pre>
   *
   * <code>required int32 warningEndTime = 8;</code>
   */
  public boolean hasWarningEndTime() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 到达时间
   * </pre>
   *
   * <code>required int32 warningEndTime = 8;</code>
   */
  public int getWarningEndTime() {
    return warningEndTime_;
  }

  public static final int MYALLIANCEID_FIELD_NUMBER = 10;
  private long myAllianceId_;
  /**
   * <pre>
   * 进攻者帮派的ID
   * </pre>
   *
   * <code>required int64 myAllianceId = 10;</code>
   */
  public boolean hasMyAllianceId() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 进攻者帮派的ID
   * </pre>
   *
   * <code>required int64 myAllianceId = 10;</code>
   */
  public long getMyAllianceId() {
    return myAllianceId_;
  }

  public static final int MYUPALLIANCEID_FIELD_NUMBER = 11;
  private long myUpAllianceId_;
  /**
   * <pre>
   * 进攻者帮派的上级ID
   * </pre>
   *
   * <code>required int64 myUpAllianceId = 11;</code>
   */
  public boolean hasMyUpAllianceId() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 进攻者帮派的上级ID
   * </pre>
   *
   * <code>required int64 myUpAllianceId = 11;</code>
   */
  public long getMyUpAllianceId() {
    return myUpAllianceId_;
  }

  public static final int ONLYID_FIELD_NUMBER = 12;
  private long onlyId_;
  /**
   * <pre>
   * 本条信息唯一主键
   * </pre>
   *
   * <code>required int64 onlyId = 12;</code>
   */
  public boolean hasOnlyId() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 本条信息唯一主键
   * </pre>
   *
   * <code>required int64 onlyId = 12;</code>
   */
  public long getOnlyId() {
    return onlyId_;
  }

  public static final int ISWARNING_FIELD_NUMBER = 13;
  private int isWarning_;
  /**
   * <pre>
   * 是否预警  0-否 1-是
   * </pre>
   *
   * <code>required int32 isWarning = 13;</code>
   */
  public boolean hasIsWarning() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * 是否预警  0-否 1-是
   * </pre>
   *
   * <code>required int32 isWarning = 13;</code>
   */
  public int getIsWarning() {
    return isWarning_;
  }

  public static final int WARNINGSOURCE_FIELD_NUMBER = 14;
  private int warningSource_;
  /**
   * <pre>
   * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
   * </pre>
   *
   * <code>required int32 warningSource = 14;</code>
   */
  public boolean hasWarningSource() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
   * </pre>
   *
   * <code>required int32 warningSource = 14;</code>
   */
  public int getWarningSource() {
    return warningSource_;
  }

  public static final int USETIME_FIELD_NUMBER = 15;
  private int usetime_;
  /**
   * <pre>
   * 正常整条行军需要的时间
   * </pre>
   *
   * <code>required int32 usetime = 15;</code>
   */
  public boolean hasUsetime() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   * 正常整条行军需要的时间
   * </pre>
   *
   * <code>required int32 usetime = 15;</code>
   */
  public int getUsetime() {
    return usetime_;
  }

  public static final int WALKTYPE_FIELD_NUMBER = 16;
  private int walkType_;
  /**
   * <pre>
   * 这条线对应的行军类型
   * </pre>
   *
   * <code>required int32 walkType = 16;</code>
   */
  public boolean hasWalkType() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <pre>
   * 这条线对应的行军类型
   * </pre>
   *
   * <code>required int32 walkType = 16;</code>
   */
  public int getWalkType() {
    return walkType_;
  }

  public static final int WALKBUS_FIELD_NUMBER = 17;
  private int walkBus_;
  /**
   * <pre>
   * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
   * </pre>
   *
   * <code>required int32 walkBus = 17;</code>
   */
  public boolean hasWalkBus() {
    return ((bitField0_ & 0x00002000) == 0x00002000);
  }
  /**
   * <pre>
   * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
   * </pre>
   *
   * <code>required int32 walkBus = 17;</code>
   */
  public int getWalkBus() {
    return walkBus_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasWarningStartX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningStartY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningGotoX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningGotoY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningStartTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningEndTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMyAllianceId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMyUpAllianceId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasOnlyId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsWarning()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarningSource()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasUsetime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWalkType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWalkBus()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getWalkForceInfosCount(); i++) {
      if (!getWalkForceInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < walkForceInfos_.size(); i++) {
      output.writeMessage(1, walkForceInfos_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(3, warningStartX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(4, warningStartY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(5, warningGotoX_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(6, warningGotoY_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(7, warningStartTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(8, warningEndTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(10, myAllianceId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt64(11, myUpAllianceId_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt64(12, onlyId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(13, isWarning_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(14, warningSource_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeInt32(15, usetime_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeInt32(16, walkType_);
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      output.writeInt32(17, walkBus_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < walkForceInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, walkForceInfos_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, warningStartX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, warningStartY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, warningGotoX_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, warningGotoY_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, warningStartTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, warningEndTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, myAllianceId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, myUpAllianceId_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, onlyId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, isWarning_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, warningSource_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, usetime_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, walkType_);
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, walkBus_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.WalkInfo)) {
      return super.equals(obj);
    }
    pb4client.WalkInfo other = (pb4client.WalkInfo) obj;

    boolean result = true;
    result = result && getWalkForceInfosList()
        .equals(other.getWalkForceInfosList());
    result = result && (hasWarningStartX() == other.hasWarningStartX());
    if (hasWarningStartX()) {
      result = result && (getWarningStartX()
          == other.getWarningStartX());
    }
    result = result && (hasWarningStartY() == other.hasWarningStartY());
    if (hasWarningStartY()) {
      result = result && (getWarningStartY()
          == other.getWarningStartY());
    }
    result = result && (hasWarningGotoX() == other.hasWarningGotoX());
    if (hasWarningGotoX()) {
      result = result && (getWarningGotoX()
          == other.getWarningGotoX());
    }
    result = result && (hasWarningGotoY() == other.hasWarningGotoY());
    if (hasWarningGotoY()) {
      result = result && (getWarningGotoY()
          == other.getWarningGotoY());
    }
    result = result && (hasWarningStartTime() == other.hasWarningStartTime());
    if (hasWarningStartTime()) {
      result = result && (getWarningStartTime()
          == other.getWarningStartTime());
    }
    result = result && (hasWarningEndTime() == other.hasWarningEndTime());
    if (hasWarningEndTime()) {
      result = result && (getWarningEndTime()
          == other.getWarningEndTime());
    }
    result = result && (hasMyAllianceId() == other.hasMyAllianceId());
    if (hasMyAllianceId()) {
      result = result && (getMyAllianceId()
          == other.getMyAllianceId());
    }
    result = result && (hasMyUpAllianceId() == other.hasMyUpAllianceId());
    if (hasMyUpAllianceId()) {
      result = result && (getMyUpAllianceId()
          == other.getMyUpAllianceId());
    }
    result = result && (hasOnlyId() == other.hasOnlyId());
    if (hasOnlyId()) {
      result = result && (getOnlyId()
          == other.getOnlyId());
    }
    result = result && (hasIsWarning() == other.hasIsWarning());
    if (hasIsWarning()) {
      result = result && (getIsWarning()
          == other.getIsWarning());
    }
    result = result && (hasWarningSource() == other.hasWarningSource());
    if (hasWarningSource()) {
      result = result && (getWarningSource()
          == other.getWarningSource());
    }
    result = result && (hasUsetime() == other.hasUsetime());
    if (hasUsetime()) {
      result = result && (getUsetime()
          == other.getUsetime());
    }
    result = result && (hasWalkType() == other.hasWalkType());
    if (hasWalkType()) {
      result = result && (getWalkType()
          == other.getWalkType());
    }
    result = result && (hasWalkBus() == other.hasWalkBus());
    if (hasWalkBus()) {
      result = result && (getWalkBus()
          == other.getWalkBus());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getWalkForceInfosCount() > 0) {
      hash = (37 * hash) + WALKFORCEINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getWalkForceInfosList().hashCode();
    }
    if (hasWarningStartX()) {
      hash = (37 * hash) + WARNINGSTARTX_FIELD_NUMBER;
      hash = (53 * hash) + getWarningStartX();
    }
    if (hasWarningStartY()) {
      hash = (37 * hash) + WARNINGSTARTY_FIELD_NUMBER;
      hash = (53 * hash) + getWarningStartY();
    }
    if (hasWarningGotoX()) {
      hash = (37 * hash) + WARNINGGOTOX_FIELD_NUMBER;
      hash = (53 * hash) + getWarningGotoX();
    }
    if (hasWarningGotoY()) {
      hash = (37 * hash) + WARNINGGOTOY_FIELD_NUMBER;
      hash = (53 * hash) + getWarningGotoY();
    }
    if (hasWarningStartTime()) {
      hash = (37 * hash) + WARNINGSTARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWarningStartTime();
    }
    if (hasWarningEndTime()) {
      hash = (37 * hash) + WARNINGENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWarningEndTime();
    }
    if (hasMyAllianceId()) {
      hash = (37 * hash) + MYALLIANCEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMyAllianceId());
    }
    if (hasMyUpAllianceId()) {
      hash = (37 * hash) + MYUPALLIANCEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMyUpAllianceId());
    }
    if (hasOnlyId()) {
      hash = (37 * hash) + ONLYID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOnlyId());
    }
    if (hasIsWarning()) {
      hash = (37 * hash) + ISWARNING_FIELD_NUMBER;
      hash = (53 * hash) + getIsWarning();
    }
    if (hasWarningSource()) {
      hash = (37 * hash) + WARNINGSOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getWarningSource();
    }
    if (hasUsetime()) {
      hash = (37 * hash) + USETIME_FIELD_NUMBER;
      hash = (53 * hash) + getUsetime();
    }
    if (hasWalkType()) {
      hash = (37 * hash) + WALKTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWalkType();
    }
    if (hasWalkBus()) {
      hash = (37 * hash) + WALKBUS_FIELD_NUMBER;
      hash = (53 * hash) + getWalkBus();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.WalkInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WalkInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WalkInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WalkInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WalkInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WalkInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WalkInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.WalkInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.WalkInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.WalkInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.WalkInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.WalkInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.WalkInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.WalkInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.WalkInfo)
      pb4client.WalkInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_WalkInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_WalkInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.WalkInfo.class, pb4client.WalkInfo.Builder.class);
    }

    // Construct using pb4client.WalkInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getWalkForceInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (walkForceInfosBuilder_ == null) {
        walkForceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        walkForceInfosBuilder_.clear();
      }
      warningStartX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      warningStartY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      warningGotoX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      warningGotoY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      warningStartTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      warningEndTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      myAllianceId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      myUpAllianceId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      onlyId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      isWarning_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      warningSource_ = 0;
      bitField0_ = (bitField0_ & ~0x00000800);
      usetime_ = 0;
      bitField0_ = (bitField0_ & ~0x00001000);
      walkType_ = 0;
      bitField0_ = (bitField0_ & ~0x00002000);
      walkBus_ = 0;
      bitField0_ = (bitField0_ & ~0x00004000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_WalkInfo_descriptor;
    }

    public pb4client.WalkInfo getDefaultInstanceForType() {
      return pb4client.WalkInfo.getDefaultInstance();
    }

    public pb4client.WalkInfo build() {
      pb4client.WalkInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.WalkInfo buildPartial() {
      pb4client.WalkInfo result = new pb4client.WalkInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (walkForceInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          walkForceInfos_ = java.util.Collections.unmodifiableList(walkForceInfos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.walkForceInfos_ = walkForceInfos_;
      } else {
        result.walkForceInfos_ = walkForceInfosBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000001;
      }
      result.warningStartX_ = warningStartX_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000002;
      }
      result.warningStartY_ = warningStartY_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000004;
      }
      result.warningGotoX_ = warningGotoX_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000008;
      }
      result.warningGotoY_ = warningGotoY_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000010;
      }
      result.warningStartTime_ = warningStartTime_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000020;
      }
      result.warningEndTime_ = warningEndTime_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000040;
      }
      result.myAllianceId_ = myAllianceId_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000080;
      }
      result.myUpAllianceId_ = myUpAllianceId_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000100;
      }
      result.onlyId_ = onlyId_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000200;
      }
      result.isWarning_ = isWarning_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000400;
      }
      result.warningSource_ = warningSource_;
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00000800;
      }
      result.usetime_ = usetime_;
      if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
        to_bitField0_ |= 0x00001000;
      }
      result.walkType_ = walkType_;
      if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
        to_bitField0_ |= 0x00002000;
      }
      result.walkBus_ = walkBus_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.WalkInfo) {
        return mergeFrom((pb4client.WalkInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.WalkInfo other) {
      if (other == pb4client.WalkInfo.getDefaultInstance()) return this;
      if (walkForceInfosBuilder_ == null) {
        if (!other.walkForceInfos_.isEmpty()) {
          if (walkForceInfos_.isEmpty()) {
            walkForceInfos_ = other.walkForceInfos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWalkForceInfosIsMutable();
            walkForceInfos_.addAll(other.walkForceInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.walkForceInfos_.isEmpty()) {
          if (walkForceInfosBuilder_.isEmpty()) {
            walkForceInfosBuilder_.dispose();
            walkForceInfosBuilder_ = null;
            walkForceInfos_ = other.walkForceInfos_;
            bitField0_ = (bitField0_ & ~0x00000001);
            walkForceInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWalkForceInfosFieldBuilder() : null;
          } else {
            walkForceInfosBuilder_.addAllMessages(other.walkForceInfos_);
          }
        }
      }
      if (other.hasWarningStartX()) {
        setWarningStartX(other.getWarningStartX());
      }
      if (other.hasWarningStartY()) {
        setWarningStartY(other.getWarningStartY());
      }
      if (other.hasWarningGotoX()) {
        setWarningGotoX(other.getWarningGotoX());
      }
      if (other.hasWarningGotoY()) {
        setWarningGotoY(other.getWarningGotoY());
      }
      if (other.hasWarningStartTime()) {
        setWarningStartTime(other.getWarningStartTime());
      }
      if (other.hasWarningEndTime()) {
        setWarningEndTime(other.getWarningEndTime());
      }
      if (other.hasMyAllianceId()) {
        setMyAllianceId(other.getMyAllianceId());
      }
      if (other.hasMyUpAllianceId()) {
        setMyUpAllianceId(other.getMyUpAllianceId());
      }
      if (other.hasOnlyId()) {
        setOnlyId(other.getOnlyId());
      }
      if (other.hasIsWarning()) {
        setIsWarning(other.getIsWarning());
      }
      if (other.hasWarningSource()) {
        setWarningSource(other.getWarningSource());
      }
      if (other.hasUsetime()) {
        setUsetime(other.getUsetime());
      }
      if (other.hasWalkType()) {
        setWalkType(other.getWalkType());
      }
      if (other.hasWalkBus()) {
        setWalkBus(other.getWalkBus());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasWarningStartX()) {
        return false;
      }
      if (!hasWarningStartY()) {
        return false;
      }
      if (!hasWarningGotoX()) {
        return false;
      }
      if (!hasWarningGotoY()) {
        return false;
      }
      if (!hasWarningStartTime()) {
        return false;
      }
      if (!hasWarningEndTime()) {
        return false;
      }
      if (!hasMyAllianceId()) {
        return false;
      }
      if (!hasMyUpAllianceId()) {
        return false;
      }
      if (!hasOnlyId()) {
        return false;
      }
      if (!hasIsWarning()) {
        return false;
      }
      if (!hasWarningSource()) {
        return false;
      }
      if (!hasUsetime()) {
        return false;
      }
      if (!hasWalkType()) {
        return false;
      }
      if (!hasWalkBus()) {
        return false;
      }
      for (int i = 0; i < getWalkForceInfosCount(); i++) {
        if (!getWalkForceInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.WalkInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.WalkInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<pb4client.WalkForceInfo> walkForceInfos_ =
      java.util.Collections.emptyList();
    private void ensureWalkForceInfosIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        walkForceInfos_ = new java.util.ArrayList<pb4client.WalkForceInfo>(walkForceInfos_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkForceInfo, pb4client.WalkForceInfo.Builder, pb4client.WalkForceInfoOrBuilder> walkForceInfosBuilder_;

    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public java.util.List<pb4client.WalkForceInfo> getWalkForceInfosList() {
      if (walkForceInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(walkForceInfos_);
      } else {
        return walkForceInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public int getWalkForceInfosCount() {
      if (walkForceInfosBuilder_ == null) {
        return walkForceInfos_.size();
      } else {
        return walkForceInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public pb4client.WalkForceInfo getWalkForceInfos(int index) {
      if (walkForceInfosBuilder_ == null) {
        return walkForceInfos_.get(index);
      } else {
        return walkForceInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder setWalkForceInfos(
        int index, pb4client.WalkForceInfo value) {
      if (walkForceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.set(index, value);
        onChanged();
      } else {
        walkForceInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder setWalkForceInfos(
        int index, pb4client.WalkForceInfo.Builder builderForValue) {
      if (walkForceInfosBuilder_ == null) {
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        walkForceInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder addWalkForceInfos(pb4client.WalkForceInfo value) {
      if (walkForceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.add(value);
        onChanged();
      } else {
        walkForceInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder addWalkForceInfos(
        int index, pb4client.WalkForceInfo value) {
      if (walkForceInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.add(index, value);
        onChanged();
      } else {
        walkForceInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder addWalkForceInfos(
        pb4client.WalkForceInfo.Builder builderForValue) {
      if (walkForceInfosBuilder_ == null) {
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.add(builderForValue.build());
        onChanged();
      } else {
        walkForceInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder addWalkForceInfos(
        int index, pb4client.WalkForceInfo.Builder builderForValue) {
      if (walkForceInfosBuilder_ == null) {
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        walkForceInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder addAllWalkForceInfos(
        java.lang.Iterable<? extends pb4client.WalkForceInfo> values) {
      if (walkForceInfosBuilder_ == null) {
        ensureWalkForceInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, walkForceInfos_);
        onChanged();
      } else {
        walkForceInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder clearWalkForceInfos() {
      if (walkForceInfosBuilder_ == null) {
        walkForceInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        walkForceInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public Builder removeWalkForceInfos(int index) {
      if (walkForceInfosBuilder_ == null) {
        ensureWalkForceInfosIsMutable();
        walkForceInfos_.remove(index);
        onChanged();
      } else {
        walkForceInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public pb4client.WalkForceInfo.Builder getWalkForceInfosBuilder(
        int index) {
      return getWalkForceInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public pb4client.WalkForceInfoOrBuilder getWalkForceInfosOrBuilder(
        int index) {
      if (walkForceInfosBuilder_ == null) {
        return walkForceInfos_.get(index);  } else {
        return walkForceInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public java.util.List<? extends pb4client.WalkForceInfoOrBuilder> 
         getWalkForceInfosOrBuilderList() {
      if (walkForceInfosBuilder_ != null) {
        return walkForceInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(walkForceInfos_);
      }
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public pb4client.WalkForceInfo.Builder addWalkForceInfosBuilder() {
      return getWalkForceInfosFieldBuilder().addBuilder(
          pb4client.WalkForceInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public pb4client.WalkForceInfo.Builder addWalkForceInfosBuilder(
        int index) {
      return getWalkForceInfosFieldBuilder().addBuilder(
          index, pb4client.WalkForceInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 进攻者ID
     * </pre>
     *
     * <code>repeated .client2server.WalkForceInfo walkForceInfos = 1;</code>
     */
    public java.util.List<pb4client.WalkForceInfo.Builder> 
         getWalkForceInfosBuilderList() {
      return getWalkForceInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.WalkForceInfo, pb4client.WalkForceInfo.Builder, pb4client.WalkForceInfoOrBuilder> 
        getWalkForceInfosFieldBuilder() {
      if (walkForceInfosBuilder_ == null) {
        walkForceInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.WalkForceInfo, pb4client.WalkForceInfo.Builder, pb4client.WalkForceInfoOrBuilder>(
                walkForceInfos_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        walkForceInfos_ = null;
      }
      return walkForceInfosBuilder_;
    }

    private int warningStartX_ ;
    /**
     * <pre>
     * 进攻起点X
     * </pre>
     *
     * <code>required int32 warningStartX = 3;</code>
     */
    public boolean hasWarningStartX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 进攻起点X
     * </pre>
     *
     * <code>required int32 warningStartX = 3;</code>
     */
    public int getWarningStartX() {
      return warningStartX_;
    }
    /**
     * <pre>
     * 进攻起点X
     * </pre>
     *
     * <code>required int32 warningStartX = 3;</code>
     */
    public Builder setWarningStartX(int value) {
      bitField0_ |= 0x00000002;
      warningStartX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 进攻起点X
     * </pre>
     *
     * <code>required int32 warningStartX = 3;</code>
     */
    public Builder clearWarningStartX() {
      bitField0_ = (bitField0_ & ~0x00000002);
      warningStartX_ = 0;
      onChanged();
      return this;
    }

    private int warningStartY_ ;
    /**
     * <pre>
     * 进攻起点Y
     * </pre>
     *
     * <code>required int32 warningStartY = 4;</code>
     */
    public boolean hasWarningStartY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 进攻起点Y
     * </pre>
     *
     * <code>required int32 warningStartY = 4;</code>
     */
    public int getWarningStartY() {
      return warningStartY_;
    }
    /**
     * <pre>
     * 进攻起点Y
     * </pre>
     *
     * <code>required int32 warningStartY = 4;</code>
     */
    public Builder setWarningStartY(int value) {
      bitField0_ |= 0x00000004;
      warningStartY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 进攻起点Y
     * </pre>
     *
     * <code>required int32 warningStartY = 4;</code>
     */
    public Builder clearWarningStartY() {
      bitField0_ = (bitField0_ & ~0x00000004);
      warningStartY_ = 0;
      onChanged();
      return this;
    }

    private int warningGotoX_ ;
    /**
     * <pre>
     * 目的地X
     * </pre>
     *
     * <code>required int32 warningGotoX = 5;</code>
     */
    public boolean hasWarningGotoX() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 目的地X
     * </pre>
     *
     * <code>required int32 warningGotoX = 5;</code>
     */
    public int getWarningGotoX() {
      return warningGotoX_;
    }
    /**
     * <pre>
     * 目的地X
     * </pre>
     *
     * <code>required int32 warningGotoX = 5;</code>
     */
    public Builder setWarningGotoX(int value) {
      bitField0_ |= 0x00000008;
      warningGotoX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 目的地X
     * </pre>
     *
     * <code>required int32 warningGotoX = 5;</code>
     */
    public Builder clearWarningGotoX() {
      bitField0_ = (bitField0_ & ~0x00000008);
      warningGotoX_ = 0;
      onChanged();
      return this;
    }

    private int warningGotoY_ ;
    /**
     * <pre>
     * 目的地Y
     * </pre>
     *
     * <code>required int32 warningGotoY = 6;</code>
     */
    public boolean hasWarningGotoY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 目的地Y
     * </pre>
     *
     * <code>required int32 warningGotoY = 6;</code>
     */
    public int getWarningGotoY() {
      return warningGotoY_;
    }
    /**
     * <pre>
     * 目的地Y
     * </pre>
     *
     * <code>required int32 warningGotoY = 6;</code>
     */
    public Builder setWarningGotoY(int value) {
      bitField0_ |= 0x00000010;
      warningGotoY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 目的地Y
     * </pre>
     *
     * <code>required int32 warningGotoY = 6;</code>
     */
    public Builder clearWarningGotoY() {
      bitField0_ = (bitField0_ & ~0x00000010);
      warningGotoY_ = 0;
      onChanged();
      return this;
    }

    private int warningStartTime_ ;
    /**
     * <pre>
     * 出发时间
     * </pre>
     *
     * <code>required int32 warningStartTime = 7;</code>
     */
    public boolean hasWarningStartTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 出发时间
     * </pre>
     *
     * <code>required int32 warningStartTime = 7;</code>
     */
    public int getWarningStartTime() {
      return warningStartTime_;
    }
    /**
     * <pre>
     * 出发时间
     * </pre>
     *
     * <code>required int32 warningStartTime = 7;</code>
     */
    public Builder setWarningStartTime(int value) {
      bitField0_ |= 0x00000020;
      warningStartTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 出发时间
     * </pre>
     *
     * <code>required int32 warningStartTime = 7;</code>
     */
    public Builder clearWarningStartTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      warningStartTime_ = 0;
      onChanged();
      return this;
    }

    private int warningEndTime_ ;
    /**
     * <pre>
     * 到达时间
     * </pre>
     *
     * <code>required int32 warningEndTime = 8;</code>
     */
    public boolean hasWarningEndTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 到达时间
     * </pre>
     *
     * <code>required int32 warningEndTime = 8;</code>
     */
    public int getWarningEndTime() {
      return warningEndTime_;
    }
    /**
     * <pre>
     * 到达时间
     * </pre>
     *
     * <code>required int32 warningEndTime = 8;</code>
     */
    public Builder setWarningEndTime(int value) {
      bitField0_ |= 0x00000040;
      warningEndTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 到达时间
     * </pre>
     *
     * <code>required int32 warningEndTime = 8;</code>
     */
    public Builder clearWarningEndTime() {
      bitField0_ = (bitField0_ & ~0x00000040);
      warningEndTime_ = 0;
      onChanged();
      return this;
    }

    private long myAllianceId_ ;
    /**
     * <pre>
     * 进攻者帮派的ID
     * </pre>
     *
     * <code>required int64 myAllianceId = 10;</code>
     */
    public boolean hasMyAllianceId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 进攻者帮派的ID
     * </pre>
     *
     * <code>required int64 myAllianceId = 10;</code>
     */
    public long getMyAllianceId() {
      return myAllianceId_;
    }
    /**
     * <pre>
     * 进攻者帮派的ID
     * </pre>
     *
     * <code>required int64 myAllianceId = 10;</code>
     */
    public Builder setMyAllianceId(long value) {
      bitField0_ |= 0x00000080;
      myAllianceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 进攻者帮派的ID
     * </pre>
     *
     * <code>required int64 myAllianceId = 10;</code>
     */
    public Builder clearMyAllianceId() {
      bitField0_ = (bitField0_ & ~0x00000080);
      myAllianceId_ = 0L;
      onChanged();
      return this;
    }

    private long myUpAllianceId_ ;
    /**
     * <pre>
     * 进攻者帮派的上级ID
     * </pre>
     *
     * <code>required int64 myUpAllianceId = 11;</code>
     */
    public boolean hasMyUpAllianceId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * 进攻者帮派的上级ID
     * </pre>
     *
     * <code>required int64 myUpAllianceId = 11;</code>
     */
    public long getMyUpAllianceId() {
      return myUpAllianceId_;
    }
    /**
     * <pre>
     * 进攻者帮派的上级ID
     * </pre>
     *
     * <code>required int64 myUpAllianceId = 11;</code>
     */
    public Builder setMyUpAllianceId(long value) {
      bitField0_ |= 0x00000100;
      myUpAllianceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 进攻者帮派的上级ID
     * </pre>
     *
     * <code>required int64 myUpAllianceId = 11;</code>
     */
    public Builder clearMyUpAllianceId() {
      bitField0_ = (bitField0_ & ~0x00000100);
      myUpAllianceId_ = 0L;
      onChanged();
      return this;
    }

    private long onlyId_ ;
    /**
     * <pre>
     * 本条信息唯一主键
     * </pre>
     *
     * <code>required int64 onlyId = 12;</code>
     */
    public boolean hasOnlyId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * 本条信息唯一主键
     * </pre>
     *
     * <code>required int64 onlyId = 12;</code>
     */
    public long getOnlyId() {
      return onlyId_;
    }
    /**
     * <pre>
     * 本条信息唯一主键
     * </pre>
     *
     * <code>required int64 onlyId = 12;</code>
     */
    public Builder setOnlyId(long value) {
      bitField0_ |= 0x00000200;
      onlyId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本条信息唯一主键
     * </pre>
     *
     * <code>required int64 onlyId = 12;</code>
     */
    public Builder clearOnlyId() {
      bitField0_ = (bitField0_ & ~0x00000200);
      onlyId_ = 0L;
      onChanged();
      return this;
    }

    private int isWarning_ ;
    /**
     * <pre>
     * 是否预警  0-否 1-是
     * </pre>
     *
     * <code>required int32 isWarning = 13;</code>
     */
    public boolean hasIsWarning() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * 是否预警  0-否 1-是
     * </pre>
     *
     * <code>required int32 isWarning = 13;</code>
     */
    public int getIsWarning() {
      return isWarning_;
    }
    /**
     * <pre>
     * 是否预警  0-否 1-是
     * </pre>
     *
     * <code>required int32 isWarning = 13;</code>
     */
    public Builder setIsWarning(int value) {
      bitField0_ |= 0x00000400;
      isWarning_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否预警  0-否 1-是
     * </pre>
     *
     * <code>required int32 isWarning = 13;</code>
     */
    public Builder clearIsWarning() {
      bitField0_ = (bitField0_ & ~0x00000400);
      isWarning_ = 0;
      onChanged();
      return this;
    }

    private int warningSource_ ;
    /**
     * <pre>
     * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
     * </pre>
     *
     * <code>required int32 warningSource = 14;</code>
     */
    public boolean hasWarningSource() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
     * </pre>
     *
     * <code>required int32 warningSource = 14;</code>
     */
    public int getWarningSource() {
      return warningSource_;
    }
    /**
     * <pre>
     * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
     * </pre>
     *
     * <code>required int32 warningSource = 14;</code>
     */
    public Builder setWarningSource(int value) {
      bitField0_ |= 0x00000800;
      warningSource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本条信息来源 1-来自自己  2-来自盟友 3-来自下属
     * </pre>
     *
     * <code>required int32 warningSource = 14;</code>
     */
    public Builder clearWarningSource() {
      bitField0_ = (bitField0_ & ~0x00000800);
      warningSource_ = 0;
      onChanged();
      return this;
    }

    private int usetime_ ;
    /**
     * <pre>
     * 正常整条行军需要的时间
     * </pre>
     *
     * <code>required int32 usetime = 15;</code>
     */
    public boolean hasUsetime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * 正常整条行军需要的时间
     * </pre>
     *
     * <code>required int32 usetime = 15;</code>
     */
    public int getUsetime() {
      return usetime_;
    }
    /**
     * <pre>
     * 正常整条行军需要的时间
     * </pre>
     *
     * <code>required int32 usetime = 15;</code>
     */
    public Builder setUsetime(int value) {
      bitField0_ |= 0x00001000;
      usetime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 正常整条行军需要的时间
     * </pre>
     *
     * <code>required int32 usetime = 15;</code>
     */
    public Builder clearUsetime() {
      bitField0_ = (bitField0_ & ~0x00001000);
      usetime_ = 0;
      onChanged();
      return this;
    }

    private int walkType_ ;
    /**
     * <pre>
     * 这条线对应的行军类型
     * </pre>
     *
     * <code>required int32 walkType = 16;</code>
     */
    public boolean hasWalkType() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * 这条线对应的行军类型
     * </pre>
     *
     * <code>required int32 walkType = 16;</code>
     */
    public int getWalkType() {
      return walkType_;
    }
    /**
     * <pre>
     * 这条线对应的行军类型
     * </pre>
     *
     * <code>required int32 walkType = 16;</code>
     */
    public Builder setWalkType(int value) {
      bitField0_ |= 0x00002000;
      walkType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 这条线对应的行军类型
     * </pre>
     *
     * <code>required int32 walkType = 16;</code>
     */
    public Builder clearWalkType() {
      bitField0_ = (bitField0_ & ~0x00002000);
      walkType_ = 0;
      onChanged();
      return this;
    }

    private int walkBus_ ;
    /**
     * <pre>
     * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
     * </pre>
     *
     * <code>required int32 walkBus = 17;</code>
     */
    public boolean hasWalkBus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
     * </pre>
     *
     * <code>required int32 walkBus = 17;</code>
     */
    public int getWalkBus() {
      return walkBus_;
    }
    /**
     * <pre>
     * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
     * </pre>
     *
     * <code>required int32 walkBus = 17;</code>
     */
    public Builder setWalkBus(int value) {
      bitField0_ |= 0x00004000;
      walkBus_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 行军交通工具,传的是线的主人的炼金者协会建筑的等级
     * </pre>
     *
     * <code>required int32 walkBus = 17;</code>
     */
    public Builder clearWalkBus() {
      bitField0_ = (bitField0_ & ~0x00004000);
      walkBus_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.WalkInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.WalkInfo)
  private static final pb4client.WalkInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.WalkInfo();
  }

  public static pb4client.WalkInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<WalkInfo>
      PARSER = new com.google.protobuf.AbstractParser<WalkInfo>() {
    public WalkInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalkInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WalkInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WalkInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.WalkInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

