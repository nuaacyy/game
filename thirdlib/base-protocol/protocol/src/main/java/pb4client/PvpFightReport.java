// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *---------------------------------------------------------玩家对玩家				reportType = 1-----------------------------
 * </pre>
 *
 * Protobuf type {@code client2server.PvpFightReport}
 */
public  final class PvpFightReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.PvpFightReport)
    PvpFightReportOrBuilder {
  // Use PvpFightReport.newBuilder() to construct.
  private PvpFightReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PvpFightReport() {
    fightType_ = 0;
    fightResult_ = 0;
    cityState_ = 0;
    atkIsMass_ = 0;
    defIsMass_ = 0;
    wonderId_ = 0;
    isPrison_ = 0;
    isBePrison_ = 0;
    atkFightInfo_ = java.util.Collections.emptyList();
    defFightInfo_ = java.util.Collections.emptyList();
    atkHeros_ = java.util.Collections.emptyList();
    defHeros_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PvpFightReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            fightType_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            fightResult_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            cityState_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            atkIsMass_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            defIsMass_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            wonderId_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            isPrison_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            isBePrison_ = input.readInt32();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              atkFightInfo_ = new java.util.ArrayList<pb4client.FightInfoForReport>();
              mutable_bitField0_ |= 0x00000100;
            }
            atkFightInfo_.add(
                input.readMessage(pb4client.FightInfoForReport.PARSER, extensionRegistry));
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
              defFightInfo_ = new java.util.ArrayList<pb4client.FightInfoForReport>();
              mutable_bitField0_ |= 0x00000200;
            }
            defFightInfo_.add(
                input.readMessage(pb4client.FightInfoForReport.PARSER, extensionRegistry));
            break;
          }
          case 98: {
            pb4client.RewardInfoForReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              subBuilder = reward_.toBuilder();
            }
            reward_ = input.readMessage(pb4client.RewardInfoForReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(reward_);
              reward_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000100;
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
              atkHeros_ = new java.util.ArrayList<pb4client.HeroInfoForReport>();
              mutable_bitField0_ |= 0x00000800;
            }
            atkHeros_.add(
                input.readMessage(pb4client.HeroInfoForReport.PARSER, extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              defHeros_ = new java.util.ArrayList<pb4client.HeroInfoForReport>();
              mutable_bitField0_ |= 0x00001000;
            }
            defHeros_.add(
                input.readMessage(pb4client.HeroInfoForReport.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        atkFightInfo_ = java.util.Collections.unmodifiableList(atkFightInfo_);
      }
      if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
        defFightInfo_ = java.util.Collections.unmodifiableList(defFightInfo_);
      }
      if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
        atkHeros_ = java.util.Collections.unmodifiableList(atkHeros_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        defHeros_ = java.util.Collections.unmodifiableList(defHeros_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_PvpFightReport_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_PvpFightReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.PvpFightReport.class, pb4client.PvpFightReport.Builder.class);
  }

  private int bitField0_;
  public static final int FIGHTTYPE_FIELD_NUMBER = 1;
  private int fightType_;
  /**
   * <pre>
   * 我方进攻还是防守
   * </pre>
   *
   * <code>required int32 fightType = 1;</code>
   */
  public boolean hasFightType() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 我方进攻还是防守
   * </pre>
   *
   * <code>required int32 fightType = 1;</code>
   */
  public int getFightType() {
    return fightType_;
  }

  public static final int FIGHTRESULT_FIELD_NUMBER = 2;
  private int fightResult_;
  /**
   * <pre>
   * 战斗结果  1-进攻方全灭  2-防守方全灭
   * </pre>
   *
   * <code>required int32 fightResult = 2;</code>
   */
  public boolean hasFightResult() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 战斗结果  1-进攻方全灭  2-防守方全灭
   * </pre>
   *
   * <code>required int32 fightResult = 2;</code>
   */
  public int getFightResult() {
    return fightResult_;
  }

  public static final int CITYSTATE_FIELD_NUMBER = 3;
  private int cityState_;
  /**
   * <pre>
   *0-非城池战 1-城池站 
   * </pre>
   *
   * <code>required int32 cityState = 3;</code>
   */
  public boolean hasCityState() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *0-非城池战 1-城池站 
   * </pre>
   *
   * <code>required int32 cityState = 3;</code>
   */
  public int getCityState() {
    return cityState_;
  }

  public static final int ATKISMASS_FIELD_NUMBER = 4;
  private int atkIsMass_;
  /**
   * <pre>
   *0、非集结 1、集结
   * </pre>
   *
   * <code>required int32 atkIsMass = 4;</code>
   */
  public boolean hasAtkIsMass() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *0、非集结 1、集结
   * </pre>
   *
   * <code>required int32 atkIsMass = 4;</code>
   */
  public int getAtkIsMass() {
    return atkIsMass_;
  }

  public static final int DEFISMASS_FIELD_NUMBER = 5;
  private int defIsMass_;
  /**
   * <pre>
   *0、非集结 1、集结
   * </pre>
   *
   * <code>required int32 defIsMass = 5;</code>
   */
  public boolean hasDefIsMass() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *0、非集结 1、集结
   * </pre>
   *
   * <code>required int32 defIsMass = 5;</code>
   */
  public int getDefIsMass() {
    return defIsMass_;
  }

  public static final int WONDERID_FIELD_NUMBER = 6;
  private int wonderId_;
  /**
   * <pre>
   *奇观Id
   * </pre>
   *
   * <code>optional int32 wonderId = 6;</code>
   */
  public boolean hasWonderId() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *奇观Id
   * </pre>
   *
   * <code>optional int32 wonderId = 6;</code>
   */
  public int getWonderId() {
    return wonderId_;
  }

  public static final int ISPRISON_FIELD_NUMBER = 7;
  private int isPrison_;
  /**
   * <pre>
   *是否抓到领主
   * </pre>
   *
   * <code>optional int32 isPrison = 7;</code>
   */
  public boolean hasIsPrison() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *是否抓到领主
   * </pre>
   *
   * <code>optional int32 isPrison = 7;</code>
   */
  public int getIsPrison() {
    return isPrison_;
  }

  public static final int ISBEPRISON_FIELD_NUMBER = 8;
  private int isBePrison_;
  /**
   * <pre>
   *领主是否被抓
   * </pre>
   *
   * <code>optional int32 isBePrison = 8;</code>
   */
  public boolean hasIsBePrison() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *领主是否被抓
   * </pre>
   *
   * <code>optional int32 isBePrison = 8;</code>
   */
  public int getIsBePrison() {
    return isBePrison_;
  }

  public static final int ATKFIGHTINFO_FIELD_NUMBER = 10;
  private java.util.List<pb4client.FightInfoForReport> atkFightInfo_;
  /**
   * <pre>
   * 集结攻击方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
   */
  public java.util.List<pb4client.FightInfoForReport> getAtkFightInfoList() {
    return atkFightInfo_;
  }
  /**
   * <pre>
   * 集结攻击方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
   */
  public java.util.List<? extends pb4client.FightInfoForReportOrBuilder> 
      getAtkFightInfoOrBuilderList() {
    return atkFightInfo_;
  }
  /**
   * <pre>
   * 集结攻击方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
   */
  public int getAtkFightInfoCount() {
    return atkFightInfo_.size();
  }
  /**
   * <pre>
   * 集结攻击方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
   */
  public pb4client.FightInfoForReport getAtkFightInfo(int index) {
    return atkFightInfo_.get(index);
  }
  /**
   * <pre>
   * 集结攻击方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
   */
  public pb4client.FightInfoForReportOrBuilder getAtkFightInfoOrBuilder(
      int index) {
    return atkFightInfo_.get(index);
  }

  public static final int DEFFIGHTINFO_FIELD_NUMBER = 11;
  private java.util.List<pb4client.FightInfoForReport> defFightInfo_;
  /**
   * <pre>
   * 集结防守方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
   */
  public java.util.List<pb4client.FightInfoForReport> getDefFightInfoList() {
    return defFightInfo_;
  }
  /**
   * <pre>
   * 集结防守方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
   */
  public java.util.List<? extends pb4client.FightInfoForReportOrBuilder> 
      getDefFightInfoOrBuilderList() {
    return defFightInfo_;
  }
  /**
   * <pre>
   * 集结防守方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
   */
  public int getDefFightInfoCount() {
    return defFightInfo_.size();
  }
  /**
   * <pre>
   * 集结防守方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
   */
  public pb4client.FightInfoForReport getDefFightInfo(int index) {
    return defFightInfo_.get(index);
  }
  /**
   * <pre>
   * 集结防守方战斗数据
   * </pre>
   *
   * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
   */
  public pb4client.FightInfoForReportOrBuilder getDefFightInfoOrBuilder(
      int index) {
    return defFightInfo_.get(index);
  }

  public static final int REWARD_FIELD_NUMBER = 12;
  private pb4client.RewardInfoForReport reward_;
  /**
   * <pre>
   * 奖励信息
   * </pre>
   *
   * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
   */
  public boolean hasReward() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 奖励信息
   * </pre>
   *
   * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
   */
  public pb4client.RewardInfoForReport getReward() {
    return reward_ == null ? pb4client.RewardInfoForReport.getDefaultInstance() : reward_;
  }
  /**
   * <pre>
   * 奖励信息
   * </pre>
   *
   * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
   */
  public pb4client.RewardInfoForReportOrBuilder getRewardOrBuilder() {
    return reward_ == null ? pb4client.RewardInfoForReport.getDefaultInstance() : reward_;
  }

  public static final int ATKHEROS_FIELD_NUMBER = 13;
  private java.util.List<pb4client.HeroInfoForReport> atkHeros_;
  /**
   * <pre>
   * 攻击方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
   */
  public java.util.List<pb4client.HeroInfoForReport> getAtkHerosList() {
    return atkHeros_;
  }
  /**
   * <pre>
   * 攻击方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
   */
  public java.util.List<? extends pb4client.HeroInfoForReportOrBuilder> 
      getAtkHerosOrBuilderList() {
    return atkHeros_;
  }
  /**
   * <pre>
   * 攻击方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
   */
  public int getAtkHerosCount() {
    return atkHeros_.size();
  }
  /**
   * <pre>
   * 攻击方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
   */
  public pb4client.HeroInfoForReport getAtkHeros(int index) {
    return atkHeros_.get(index);
  }
  /**
   * <pre>
   * 攻击方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
   */
  public pb4client.HeroInfoForReportOrBuilder getAtkHerosOrBuilder(
      int index) {
    return atkHeros_.get(index);
  }

  public static final int DEFHEROS_FIELD_NUMBER = 14;
  private java.util.List<pb4client.HeroInfoForReport> defHeros_;
  /**
   * <pre>
   * 防守方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
   */
  public java.util.List<pb4client.HeroInfoForReport> getDefHerosList() {
    return defHeros_;
  }
  /**
   * <pre>
   * 防守方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
   */
  public java.util.List<? extends pb4client.HeroInfoForReportOrBuilder> 
      getDefHerosOrBuilderList() {
    return defHeros_;
  }
  /**
   * <pre>
   * 防守方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
   */
  public int getDefHerosCount() {
    return defHeros_.size();
  }
  /**
   * <pre>
   * 防守方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
   */
  public pb4client.HeroInfoForReport getDefHeros(int index) {
    return defHeros_.get(index);
  }
  /**
   * <pre>
   * 防守方英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
   */
  public pb4client.HeroInfoForReportOrBuilder getDefHerosOrBuilder(
      int index) {
    return defHeros_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasFightType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightResult()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCityState()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasAtkIsMass()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasDefIsMass()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getAtkFightInfoCount(); i++) {
      if (!getAtkFightInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getDefFightInfoCount(); i++) {
      if (!getDefFightInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasReward()) {
      if (!getReward().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getAtkHerosCount(); i++) {
      if (!getAtkHeros(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getDefHerosCount(); i++) {
      if (!getDefHeros(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, fightType_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, fightResult_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, cityState_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, atkIsMass_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, defIsMass_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, wonderId_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, isPrison_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, isBePrison_);
    }
    for (int i = 0; i < atkFightInfo_.size(); i++) {
      output.writeMessage(10, atkFightInfo_.get(i));
    }
    for (int i = 0; i < defFightInfo_.size(); i++) {
      output.writeMessage(11, defFightInfo_.get(i));
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(12, getReward());
    }
    for (int i = 0; i < atkHeros_.size(); i++) {
      output.writeMessage(13, atkHeros_.get(i));
    }
    for (int i = 0; i < defHeros_.size(); i++) {
      output.writeMessage(14, defHeros_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, fightType_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, fightResult_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, cityState_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, atkIsMass_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, defIsMass_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, wonderId_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, isPrison_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, isBePrison_);
    }
    for (int i = 0; i < atkFightInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, atkFightInfo_.get(i));
    }
    for (int i = 0; i < defFightInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, defFightInfo_.get(i));
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getReward());
    }
    for (int i = 0; i < atkHeros_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, atkHeros_.get(i));
    }
    for (int i = 0; i < defHeros_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, defHeros_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.PvpFightReport)) {
      return super.equals(obj);
    }
    pb4client.PvpFightReport other = (pb4client.PvpFightReport) obj;

    boolean result = true;
    result = result && (hasFightType() == other.hasFightType());
    if (hasFightType()) {
      result = result && (getFightType()
          == other.getFightType());
    }
    result = result && (hasFightResult() == other.hasFightResult());
    if (hasFightResult()) {
      result = result && (getFightResult()
          == other.getFightResult());
    }
    result = result && (hasCityState() == other.hasCityState());
    if (hasCityState()) {
      result = result && (getCityState()
          == other.getCityState());
    }
    result = result && (hasAtkIsMass() == other.hasAtkIsMass());
    if (hasAtkIsMass()) {
      result = result && (getAtkIsMass()
          == other.getAtkIsMass());
    }
    result = result && (hasDefIsMass() == other.hasDefIsMass());
    if (hasDefIsMass()) {
      result = result && (getDefIsMass()
          == other.getDefIsMass());
    }
    result = result && (hasWonderId() == other.hasWonderId());
    if (hasWonderId()) {
      result = result && (getWonderId()
          == other.getWonderId());
    }
    result = result && (hasIsPrison() == other.hasIsPrison());
    if (hasIsPrison()) {
      result = result && (getIsPrison()
          == other.getIsPrison());
    }
    result = result && (hasIsBePrison() == other.hasIsBePrison());
    if (hasIsBePrison()) {
      result = result && (getIsBePrison()
          == other.getIsBePrison());
    }
    result = result && getAtkFightInfoList()
        .equals(other.getAtkFightInfoList());
    result = result && getDefFightInfoList()
        .equals(other.getDefFightInfoList());
    result = result && (hasReward() == other.hasReward());
    if (hasReward()) {
      result = result && getReward()
          .equals(other.getReward());
    }
    result = result && getAtkHerosList()
        .equals(other.getAtkHerosList());
    result = result && getDefHerosList()
        .equals(other.getDefHerosList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFightType()) {
      hash = (37 * hash) + FIGHTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getFightType();
    }
    if (hasFightResult()) {
      hash = (37 * hash) + FIGHTRESULT_FIELD_NUMBER;
      hash = (53 * hash) + getFightResult();
    }
    if (hasCityState()) {
      hash = (37 * hash) + CITYSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getCityState();
    }
    if (hasAtkIsMass()) {
      hash = (37 * hash) + ATKISMASS_FIELD_NUMBER;
      hash = (53 * hash) + getAtkIsMass();
    }
    if (hasDefIsMass()) {
      hash = (37 * hash) + DEFISMASS_FIELD_NUMBER;
      hash = (53 * hash) + getDefIsMass();
    }
    if (hasWonderId()) {
      hash = (37 * hash) + WONDERID_FIELD_NUMBER;
      hash = (53 * hash) + getWonderId();
    }
    if (hasIsPrison()) {
      hash = (37 * hash) + ISPRISON_FIELD_NUMBER;
      hash = (53 * hash) + getIsPrison();
    }
    if (hasIsBePrison()) {
      hash = (37 * hash) + ISBEPRISON_FIELD_NUMBER;
      hash = (53 * hash) + getIsBePrison();
    }
    if (getAtkFightInfoCount() > 0) {
      hash = (37 * hash) + ATKFIGHTINFO_FIELD_NUMBER;
      hash = (53 * hash) + getAtkFightInfoList().hashCode();
    }
    if (getDefFightInfoCount() > 0) {
      hash = (37 * hash) + DEFFIGHTINFO_FIELD_NUMBER;
      hash = (53 * hash) + getDefFightInfoList().hashCode();
    }
    if (hasReward()) {
      hash = (37 * hash) + REWARD_FIELD_NUMBER;
      hash = (53 * hash) + getReward().hashCode();
    }
    if (getAtkHerosCount() > 0) {
      hash = (37 * hash) + ATKHEROS_FIELD_NUMBER;
      hash = (53 * hash) + getAtkHerosList().hashCode();
    }
    if (getDefHerosCount() > 0) {
      hash = (37 * hash) + DEFHEROS_FIELD_NUMBER;
      hash = (53 * hash) + getDefHerosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.PvpFightReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PvpFightReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PvpFightReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PvpFightReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PvpFightReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.PvpFightReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.PvpFightReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.PvpFightReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.PvpFightReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.PvpFightReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.PvpFightReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.PvpFightReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.PvpFightReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *---------------------------------------------------------玩家对玩家				reportType = 1-----------------------------
   * </pre>
   *
   * Protobuf type {@code client2server.PvpFightReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.PvpFightReport)
      pb4client.PvpFightReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_PvpFightReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_PvpFightReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.PvpFightReport.class, pb4client.PvpFightReport.Builder.class);
    }

    // Construct using pb4client.PvpFightReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAtkFightInfoFieldBuilder();
        getDefFightInfoFieldBuilder();
        getRewardFieldBuilder();
        getAtkHerosFieldBuilder();
        getDefHerosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      fightType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      fightResult_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      cityState_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      atkIsMass_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      defIsMass_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      wonderId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      isPrison_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      isBePrison_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      if (atkFightInfoBuilder_ == null) {
        atkFightInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        atkFightInfoBuilder_.clear();
      }
      if (defFightInfoBuilder_ == null) {
        defFightInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        defFightInfoBuilder_.clear();
      }
      if (rewardBuilder_ == null) {
        reward_ = null;
      } else {
        rewardBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (atkHerosBuilder_ == null) {
        atkHeros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
      } else {
        atkHerosBuilder_.clear();
      }
      if (defHerosBuilder_ == null) {
        defHeros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        defHerosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_PvpFightReport_descriptor;
    }

    public pb4client.PvpFightReport getDefaultInstanceForType() {
      return pb4client.PvpFightReport.getDefaultInstance();
    }

    public pb4client.PvpFightReport build() {
      pb4client.PvpFightReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.PvpFightReport buildPartial() {
      pb4client.PvpFightReport result = new pb4client.PvpFightReport(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.fightType_ = fightType_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.fightResult_ = fightResult_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.cityState_ = cityState_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.atkIsMass_ = atkIsMass_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.defIsMass_ = defIsMass_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.wonderId_ = wonderId_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.isPrison_ = isPrison_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.isBePrison_ = isBePrison_;
      if (atkFightInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          atkFightInfo_ = java.util.Collections.unmodifiableList(atkFightInfo_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.atkFightInfo_ = atkFightInfo_;
      } else {
        result.atkFightInfo_ = atkFightInfoBuilder_.build();
      }
      if (defFightInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          defFightInfo_ = java.util.Collections.unmodifiableList(defFightInfo_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.defFightInfo_ = defFightInfo_;
      } else {
        result.defFightInfo_ = defFightInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000100;
      }
      if (rewardBuilder_ == null) {
        result.reward_ = reward_;
      } else {
        result.reward_ = rewardBuilder_.build();
      }
      if (atkHerosBuilder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          atkHeros_ = java.util.Collections.unmodifiableList(atkHeros_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.atkHeros_ = atkHeros_;
      } else {
        result.atkHeros_ = atkHerosBuilder_.build();
      }
      if (defHerosBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          defHeros_ = java.util.Collections.unmodifiableList(defHeros_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.defHeros_ = defHeros_;
      } else {
        result.defHeros_ = defHerosBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.PvpFightReport) {
        return mergeFrom((pb4client.PvpFightReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.PvpFightReport other) {
      if (other == pb4client.PvpFightReport.getDefaultInstance()) return this;
      if (other.hasFightType()) {
        setFightType(other.getFightType());
      }
      if (other.hasFightResult()) {
        setFightResult(other.getFightResult());
      }
      if (other.hasCityState()) {
        setCityState(other.getCityState());
      }
      if (other.hasAtkIsMass()) {
        setAtkIsMass(other.getAtkIsMass());
      }
      if (other.hasDefIsMass()) {
        setDefIsMass(other.getDefIsMass());
      }
      if (other.hasWonderId()) {
        setWonderId(other.getWonderId());
      }
      if (other.hasIsPrison()) {
        setIsPrison(other.getIsPrison());
      }
      if (other.hasIsBePrison()) {
        setIsBePrison(other.getIsBePrison());
      }
      if (atkFightInfoBuilder_ == null) {
        if (!other.atkFightInfo_.isEmpty()) {
          if (atkFightInfo_.isEmpty()) {
            atkFightInfo_ = other.atkFightInfo_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureAtkFightInfoIsMutable();
            atkFightInfo_.addAll(other.atkFightInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.atkFightInfo_.isEmpty()) {
          if (atkFightInfoBuilder_.isEmpty()) {
            atkFightInfoBuilder_.dispose();
            atkFightInfoBuilder_ = null;
            atkFightInfo_ = other.atkFightInfo_;
            bitField0_ = (bitField0_ & ~0x00000100);
            atkFightInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAtkFightInfoFieldBuilder() : null;
          } else {
            atkFightInfoBuilder_.addAllMessages(other.atkFightInfo_);
          }
        }
      }
      if (defFightInfoBuilder_ == null) {
        if (!other.defFightInfo_.isEmpty()) {
          if (defFightInfo_.isEmpty()) {
            defFightInfo_ = other.defFightInfo_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureDefFightInfoIsMutable();
            defFightInfo_.addAll(other.defFightInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.defFightInfo_.isEmpty()) {
          if (defFightInfoBuilder_.isEmpty()) {
            defFightInfoBuilder_.dispose();
            defFightInfoBuilder_ = null;
            defFightInfo_ = other.defFightInfo_;
            bitField0_ = (bitField0_ & ~0x00000200);
            defFightInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDefFightInfoFieldBuilder() : null;
          } else {
            defFightInfoBuilder_.addAllMessages(other.defFightInfo_);
          }
        }
      }
      if (other.hasReward()) {
        mergeReward(other.getReward());
      }
      if (atkHerosBuilder_ == null) {
        if (!other.atkHeros_.isEmpty()) {
          if (atkHeros_.isEmpty()) {
            atkHeros_ = other.atkHeros_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAtkHerosIsMutable();
            atkHeros_.addAll(other.atkHeros_);
          }
          onChanged();
        }
      } else {
        if (!other.atkHeros_.isEmpty()) {
          if (atkHerosBuilder_.isEmpty()) {
            atkHerosBuilder_.dispose();
            atkHerosBuilder_ = null;
            atkHeros_ = other.atkHeros_;
            bitField0_ = (bitField0_ & ~0x00000800);
            atkHerosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAtkHerosFieldBuilder() : null;
          } else {
            atkHerosBuilder_.addAllMessages(other.atkHeros_);
          }
        }
      }
      if (defHerosBuilder_ == null) {
        if (!other.defHeros_.isEmpty()) {
          if (defHeros_.isEmpty()) {
            defHeros_ = other.defHeros_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureDefHerosIsMutable();
            defHeros_.addAll(other.defHeros_);
          }
          onChanged();
        }
      } else {
        if (!other.defHeros_.isEmpty()) {
          if (defHerosBuilder_.isEmpty()) {
            defHerosBuilder_.dispose();
            defHerosBuilder_ = null;
            defHeros_ = other.defHeros_;
            bitField0_ = (bitField0_ & ~0x00001000);
            defHerosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDefHerosFieldBuilder() : null;
          } else {
            defHerosBuilder_.addAllMessages(other.defHeros_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasFightType()) {
        return false;
      }
      if (!hasFightResult()) {
        return false;
      }
      if (!hasCityState()) {
        return false;
      }
      if (!hasAtkIsMass()) {
        return false;
      }
      if (!hasDefIsMass()) {
        return false;
      }
      for (int i = 0; i < getAtkFightInfoCount(); i++) {
        if (!getAtkFightInfo(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getDefFightInfoCount(); i++) {
        if (!getDefFightInfo(i).isInitialized()) {
          return false;
        }
      }
      if (hasReward()) {
        if (!getReward().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getAtkHerosCount(); i++) {
        if (!getAtkHeros(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getDefHerosCount(); i++) {
        if (!getDefHeros(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.PvpFightReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.PvpFightReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int fightType_ ;
    /**
     * <pre>
     * 我方进攻还是防守
     * </pre>
     *
     * <code>required int32 fightType = 1;</code>
     */
    public boolean hasFightType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 我方进攻还是防守
     * </pre>
     *
     * <code>required int32 fightType = 1;</code>
     */
    public int getFightType() {
      return fightType_;
    }
    /**
     * <pre>
     * 我方进攻还是防守
     * </pre>
     *
     * <code>required int32 fightType = 1;</code>
     */
    public Builder setFightType(int value) {
      bitField0_ |= 0x00000001;
      fightType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 我方进攻还是防守
     * </pre>
     *
     * <code>required int32 fightType = 1;</code>
     */
    public Builder clearFightType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fightType_ = 0;
      onChanged();
      return this;
    }

    private int fightResult_ ;
    /**
     * <pre>
     * 战斗结果  1-进攻方全灭  2-防守方全灭
     * </pre>
     *
     * <code>required int32 fightResult = 2;</code>
     */
    public boolean hasFightResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 战斗结果  1-进攻方全灭  2-防守方全灭
     * </pre>
     *
     * <code>required int32 fightResult = 2;</code>
     */
    public int getFightResult() {
      return fightResult_;
    }
    /**
     * <pre>
     * 战斗结果  1-进攻方全灭  2-防守方全灭
     * </pre>
     *
     * <code>required int32 fightResult = 2;</code>
     */
    public Builder setFightResult(int value) {
      bitField0_ |= 0x00000002;
      fightResult_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗结果  1-进攻方全灭  2-防守方全灭
     * </pre>
     *
     * <code>required int32 fightResult = 2;</code>
     */
    public Builder clearFightResult() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fightResult_ = 0;
      onChanged();
      return this;
    }

    private int cityState_ ;
    /**
     * <pre>
     *0-非城池战 1-城池站 
     * </pre>
     *
     * <code>required int32 cityState = 3;</code>
     */
    public boolean hasCityState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *0-非城池战 1-城池站 
     * </pre>
     *
     * <code>required int32 cityState = 3;</code>
     */
    public int getCityState() {
      return cityState_;
    }
    /**
     * <pre>
     *0-非城池战 1-城池站 
     * </pre>
     *
     * <code>required int32 cityState = 3;</code>
     */
    public Builder setCityState(int value) {
      bitField0_ |= 0x00000004;
      cityState_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *0-非城池战 1-城池站 
     * </pre>
     *
     * <code>required int32 cityState = 3;</code>
     */
    public Builder clearCityState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cityState_ = 0;
      onChanged();
      return this;
    }

    private int atkIsMass_ ;
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 atkIsMass = 4;</code>
     */
    public boolean hasAtkIsMass() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 atkIsMass = 4;</code>
     */
    public int getAtkIsMass() {
      return atkIsMass_;
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 atkIsMass = 4;</code>
     */
    public Builder setAtkIsMass(int value) {
      bitField0_ |= 0x00000008;
      atkIsMass_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 atkIsMass = 4;</code>
     */
    public Builder clearAtkIsMass() {
      bitField0_ = (bitField0_ & ~0x00000008);
      atkIsMass_ = 0;
      onChanged();
      return this;
    }

    private int defIsMass_ ;
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 defIsMass = 5;</code>
     */
    public boolean hasDefIsMass() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 defIsMass = 5;</code>
     */
    public int getDefIsMass() {
      return defIsMass_;
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 defIsMass = 5;</code>
     */
    public Builder setDefIsMass(int value) {
      bitField0_ |= 0x00000010;
      defIsMass_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *0、非集结 1、集结
     * </pre>
     *
     * <code>required int32 defIsMass = 5;</code>
     */
    public Builder clearDefIsMass() {
      bitField0_ = (bitField0_ & ~0x00000010);
      defIsMass_ = 0;
      onChanged();
      return this;
    }

    private int wonderId_ ;
    /**
     * <pre>
     *奇观Id
     * </pre>
     *
     * <code>optional int32 wonderId = 6;</code>
     */
    public boolean hasWonderId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *奇观Id
     * </pre>
     *
     * <code>optional int32 wonderId = 6;</code>
     */
    public int getWonderId() {
      return wonderId_;
    }
    /**
     * <pre>
     *奇观Id
     * </pre>
     *
     * <code>optional int32 wonderId = 6;</code>
     */
    public Builder setWonderId(int value) {
      bitField0_ |= 0x00000020;
      wonderId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *奇观Id
     * </pre>
     *
     * <code>optional int32 wonderId = 6;</code>
     */
    public Builder clearWonderId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      wonderId_ = 0;
      onChanged();
      return this;
    }

    private int isPrison_ ;
    /**
     * <pre>
     *是否抓到领主
     * </pre>
     *
     * <code>optional int32 isPrison = 7;</code>
     */
    public boolean hasIsPrison() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *是否抓到领主
     * </pre>
     *
     * <code>optional int32 isPrison = 7;</code>
     */
    public int getIsPrison() {
      return isPrison_;
    }
    /**
     * <pre>
     *是否抓到领主
     * </pre>
     *
     * <code>optional int32 isPrison = 7;</code>
     */
    public Builder setIsPrison(int value) {
      bitField0_ |= 0x00000040;
      isPrison_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否抓到领主
     * </pre>
     *
     * <code>optional int32 isPrison = 7;</code>
     */
    public Builder clearIsPrison() {
      bitField0_ = (bitField0_ & ~0x00000040);
      isPrison_ = 0;
      onChanged();
      return this;
    }

    private int isBePrison_ ;
    /**
     * <pre>
     *领主是否被抓
     * </pre>
     *
     * <code>optional int32 isBePrison = 8;</code>
     */
    public boolean hasIsBePrison() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *领主是否被抓
     * </pre>
     *
     * <code>optional int32 isBePrison = 8;</code>
     */
    public int getIsBePrison() {
      return isBePrison_;
    }
    /**
     * <pre>
     *领主是否被抓
     * </pre>
     *
     * <code>optional int32 isBePrison = 8;</code>
     */
    public Builder setIsBePrison(int value) {
      bitField0_ |= 0x00000080;
      isBePrison_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *领主是否被抓
     * </pre>
     *
     * <code>optional int32 isBePrison = 8;</code>
     */
    public Builder clearIsBePrison() {
      bitField0_ = (bitField0_ & ~0x00000080);
      isBePrison_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.FightInfoForReport> atkFightInfo_ =
      java.util.Collections.emptyList();
    private void ensureAtkFightInfoIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        atkFightInfo_ = new java.util.ArrayList<pb4client.FightInfoForReport>(atkFightInfo_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder> atkFightInfoBuilder_;

    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public java.util.List<pb4client.FightInfoForReport> getAtkFightInfoList() {
      if (atkFightInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(atkFightInfo_);
      } else {
        return atkFightInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public int getAtkFightInfoCount() {
      if (atkFightInfoBuilder_ == null) {
        return atkFightInfo_.size();
      } else {
        return atkFightInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public pb4client.FightInfoForReport getAtkFightInfo(int index) {
      if (atkFightInfoBuilder_ == null) {
        return atkFightInfo_.get(index);
      } else {
        return atkFightInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder setAtkFightInfo(
        int index, pb4client.FightInfoForReport value) {
      if (atkFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.set(index, value);
        onChanged();
      } else {
        atkFightInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder setAtkFightInfo(
        int index, pb4client.FightInfoForReport.Builder builderForValue) {
      if (atkFightInfoBuilder_ == null) {
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        atkFightInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder addAtkFightInfo(pb4client.FightInfoForReport value) {
      if (atkFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.add(value);
        onChanged();
      } else {
        atkFightInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder addAtkFightInfo(
        int index, pb4client.FightInfoForReport value) {
      if (atkFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.add(index, value);
        onChanged();
      } else {
        atkFightInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder addAtkFightInfo(
        pb4client.FightInfoForReport.Builder builderForValue) {
      if (atkFightInfoBuilder_ == null) {
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.add(builderForValue.build());
        onChanged();
      } else {
        atkFightInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder addAtkFightInfo(
        int index, pb4client.FightInfoForReport.Builder builderForValue) {
      if (atkFightInfoBuilder_ == null) {
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        atkFightInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder addAllAtkFightInfo(
        java.lang.Iterable<? extends pb4client.FightInfoForReport> values) {
      if (atkFightInfoBuilder_ == null) {
        ensureAtkFightInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, atkFightInfo_);
        onChanged();
      } else {
        atkFightInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder clearAtkFightInfo() {
      if (atkFightInfoBuilder_ == null) {
        atkFightInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        atkFightInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public Builder removeAtkFightInfo(int index) {
      if (atkFightInfoBuilder_ == null) {
        ensureAtkFightInfoIsMutable();
        atkFightInfo_.remove(index);
        onChanged();
      } else {
        atkFightInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public pb4client.FightInfoForReport.Builder getAtkFightInfoBuilder(
        int index) {
      return getAtkFightInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public pb4client.FightInfoForReportOrBuilder getAtkFightInfoOrBuilder(
        int index) {
      if (atkFightInfoBuilder_ == null) {
        return atkFightInfo_.get(index);  } else {
        return atkFightInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public java.util.List<? extends pb4client.FightInfoForReportOrBuilder> 
         getAtkFightInfoOrBuilderList() {
      if (atkFightInfoBuilder_ != null) {
        return atkFightInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(atkFightInfo_);
      }
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public pb4client.FightInfoForReport.Builder addAtkFightInfoBuilder() {
      return getAtkFightInfoFieldBuilder().addBuilder(
          pb4client.FightInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public pb4client.FightInfoForReport.Builder addAtkFightInfoBuilder(
        int index) {
      return getAtkFightInfoFieldBuilder().addBuilder(
          index, pb4client.FightInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 集结攻击方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport atkFightInfo = 10;</code>
     */
    public java.util.List<pb4client.FightInfoForReport.Builder> 
         getAtkFightInfoBuilderList() {
      return getAtkFightInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder> 
        getAtkFightInfoFieldBuilder() {
      if (atkFightInfoBuilder_ == null) {
        atkFightInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder>(
                atkFightInfo_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        atkFightInfo_ = null;
      }
      return atkFightInfoBuilder_;
    }

    private java.util.List<pb4client.FightInfoForReport> defFightInfo_ =
      java.util.Collections.emptyList();
    private void ensureDefFightInfoIsMutable() {
      if (!((bitField0_ & 0x00000200) == 0x00000200)) {
        defFightInfo_ = new java.util.ArrayList<pb4client.FightInfoForReport>(defFightInfo_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder> defFightInfoBuilder_;

    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public java.util.List<pb4client.FightInfoForReport> getDefFightInfoList() {
      if (defFightInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(defFightInfo_);
      } else {
        return defFightInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public int getDefFightInfoCount() {
      if (defFightInfoBuilder_ == null) {
        return defFightInfo_.size();
      } else {
        return defFightInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public pb4client.FightInfoForReport getDefFightInfo(int index) {
      if (defFightInfoBuilder_ == null) {
        return defFightInfo_.get(index);
      } else {
        return defFightInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder setDefFightInfo(
        int index, pb4client.FightInfoForReport value) {
      if (defFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefFightInfoIsMutable();
        defFightInfo_.set(index, value);
        onChanged();
      } else {
        defFightInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder setDefFightInfo(
        int index, pb4client.FightInfoForReport.Builder builderForValue) {
      if (defFightInfoBuilder_ == null) {
        ensureDefFightInfoIsMutable();
        defFightInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        defFightInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder addDefFightInfo(pb4client.FightInfoForReport value) {
      if (defFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefFightInfoIsMutable();
        defFightInfo_.add(value);
        onChanged();
      } else {
        defFightInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder addDefFightInfo(
        int index, pb4client.FightInfoForReport value) {
      if (defFightInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefFightInfoIsMutable();
        defFightInfo_.add(index, value);
        onChanged();
      } else {
        defFightInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder addDefFightInfo(
        pb4client.FightInfoForReport.Builder builderForValue) {
      if (defFightInfoBuilder_ == null) {
        ensureDefFightInfoIsMutable();
        defFightInfo_.add(builderForValue.build());
        onChanged();
      } else {
        defFightInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder addDefFightInfo(
        int index, pb4client.FightInfoForReport.Builder builderForValue) {
      if (defFightInfoBuilder_ == null) {
        ensureDefFightInfoIsMutable();
        defFightInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        defFightInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder addAllDefFightInfo(
        java.lang.Iterable<? extends pb4client.FightInfoForReport> values) {
      if (defFightInfoBuilder_ == null) {
        ensureDefFightInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, defFightInfo_);
        onChanged();
      } else {
        defFightInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder clearDefFightInfo() {
      if (defFightInfoBuilder_ == null) {
        defFightInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        defFightInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public Builder removeDefFightInfo(int index) {
      if (defFightInfoBuilder_ == null) {
        ensureDefFightInfoIsMutable();
        defFightInfo_.remove(index);
        onChanged();
      } else {
        defFightInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public pb4client.FightInfoForReport.Builder getDefFightInfoBuilder(
        int index) {
      return getDefFightInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public pb4client.FightInfoForReportOrBuilder getDefFightInfoOrBuilder(
        int index) {
      if (defFightInfoBuilder_ == null) {
        return defFightInfo_.get(index);  } else {
        return defFightInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public java.util.List<? extends pb4client.FightInfoForReportOrBuilder> 
         getDefFightInfoOrBuilderList() {
      if (defFightInfoBuilder_ != null) {
        return defFightInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(defFightInfo_);
      }
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public pb4client.FightInfoForReport.Builder addDefFightInfoBuilder() {
      return getDefFightInfoFieldBuilder().addBuilder(
          pb4client.FightInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public pb4client.FightInfoForReport.Builder addDefFightInfoBuilder(
        int index) {
      return getDefFightInfoFieldBuilder().addBuilder(
          index, pb4client.FightInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 集结防守方战斗数据
     * </pre>
     *
     * <code>repeated .client2server.FightInfoForReport defFightInfo = 11;</code>
     */
    public java.util.List<pb4client.FightInfoForReport.Builder> 
         getDefFightInfoBuilderList() {
      return getDefFightInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder> 
        getDefFightInfoFieldBuilder() {
      if (defFightInfoBuilder_ == null) {
        defFightInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.FightInfoForReport, pb4client.FightInfoForReport.Builder, pb4client.FightInfoForReportOrBuilder>(
                defFightInfo_,
                ((bitField0_ & 0x00000200) == 0x00000200),
                getParentForChildren(),
                isClean());
        defFightInfo_ = null;
      }
      return defFightInfoBuilder_;
    }

    private pb4client.RewardInfoForReport reward_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.RewardInfoForReport, pb4client.RewardInfoForReport.Builder, pb4client.RewardInfoForReportOrBuilder> rewardBuilder_;
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public boolean hasReward() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public pb4client.RewardInfoForReport getReward() {
      if (rewardBuilder_ == null) {
        return reward_ == null ? pb4client.RewardInfoForReport.getDefaultInstance() : reward_;
      } else {
        return rewardBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public Builder setReward(pb4client.RewardInfoForReport value) {
      if (rewardBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reward_ = value;
        onChanged();
      } else {
        rewardBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public Builder setReward(
        pb4client.RewardInfoForReport.Builder builderForValue) {
      if (rewardBuilder_ == null) {
        reward_ = builderForValue.build();
        onChanged();
      } else {
        rewardBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public Builder mergeReward(pb4client.RewardInfoForReport value) {
      if (rewardBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            reward_ != null &&
            reward_ != pb4client.RewardInfoForReport.getDefaultInstance()) {
          reward_ =
            pb4client.RewardInfoForReport.newBuilder(reward_).mergeFrom(value).buildPartial();
        } else {
          reward_ = value;
        }
        onChanged();
      } else {
        rewardBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public Builder clearReward() {
      if (rewardBuilder_ == null) {
        reward_ = null;
        onChanged();
      } else {
        rewardBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public pb4client.RewardInfoForReport.Builder getRewardBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getRewardFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    public pb4client.RewardInfoForReportOrBuilder getRewardOrBuilder() {
      if (rewardBuilder_ != null) {
        return rewardBuilder_.getMessageOrBuilder();
      } else {
        return reward_ == null ?
            pb4client.RewardInfoForReport.getDefaultInstance() : reward_;
      }
    }
    /**
     * <pre>
     * 奖励信息
     * </pre>
     *
     * <code>optional .client2server.RewardInfoForReport reward = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.RewardInfoForReport, pb4client.RewardInfoForReport.Builder, pb4client.RewardInfoForReportOrBuilder> 
        getRewardFieldBuilder() {
      if (rewardBuilder_ == null) {
        rewardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.RewardInfoForReport, pb4client.RewardInfoForReport.Builder, pb4client.RewardInfoForReportOrBuilder>(
                getReward(),
                getParentForChildren(),
                isClean());
        reward_ = null;
      }
      return rewardBuilder_;
    }

    private java.util.List<pb4client.HeroInfoForReport> atkHeros_ =
      java.util.Collections.emptyList();
    private void ensureAtkHerosIsMutable() {
      if (!((bitField0_ & 0x00000800) == 0x00000800)) {
        atkHeros_ = new java.util.ArrayList<pb4client.HeroInfoForReport>(atkHeros_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder> atkHerosBuilder_;

    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public java.util.List<pb4client.HeroInfoForReport> getAtkHerosList() {
      if (atkHerosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(atkHeros_);
      } else {
        return atkHerosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public int getAtkHerosCount() {
      if (atkHerosBuilder_ == null) {
        return atkHeros_.size();
      } else {
        return atkHerosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public pb4client.HeroInfoForReport getAtkHeros(int index) {
      if (atkHerosBuilder_ == null) {
        return atkHeros_.get(index);
      } else {
        return atkHerosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder setAtkHeros(
        int index, pb4client.HeroInfoForReport value) {
      if (atkHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkHerosIsMutable();
        atkHeros_.set(index, value);
        onChanged();
      } else {
        atkHerosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder setAtkHeros(
        int index, pb4client.HeroInfoForReport.Builder builderForValue) {
      if (atkHerosBuilder_ == null) {
        ensureAtkHerosIsMutable();
        atkHeros_.set(index, builderForValue.build());
        onChanged();
      } else {
        atkHerosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder addAtkHeros(pb4client.HeroInfoForReport value) {
      if (atkHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkHerosIsMutable();
        atkHeros_.add(value);
        onChanged();
      } else {
        atkHerosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder addAtkHeros(
        int index, pb4client.HeroInfoForReport value) {
      if (atkHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAtkHerosIsMutable();
        atkHeros_.add(index, value);
        onChanged();
      } else {
        atkHerosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder addAtkHeros(
        pb4client.HeroInfoForReport.Builder builderForValue) {
      if (atkHerosBuilder_ == null) {
        ensureAtkHerosIsMutable();
        atkHeros_.add(builderForValue.build());
        onChanged();
      } else {
        atkHerosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder addAtkHeros(
        int index, pb4client.HeroInfoForReport.Builder builderForValue) {
      if (atkHerosBuilder_ == null) {
        ensureAtkHerosIsMutable();
        atkHeros_.add(index, builderForValue.build());
        onChanged();
      } else {
        atkHerosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder addAllAtkHeros(
        java.lang.Iterable<? extends pb4client.HeroInfoForReport> values) {
      if (atkHerosBuilder_ == null) {
        ensureAtkHerosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, atkHeros_);
        onChanged();
      } else {
        atkHerosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder clearAtkHeros() {
      if (atkHerosBuilder_ == null) {
        atkHeros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        atkHerosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public Builder removeAtkHeros(int index) {
      if (atkHerosBuilder_ == null) {
        ensureAtkHerosIsMutable();
        atkHeros_.remove(index);
        onChanged();
      } else {
        atkHerosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public pb4client.HeroInfoForReport.Builder getAtkHerosBuilder(
        int index) {
      return getAtkHerosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public pb4client.HeroInfoForReportOrBuilder getAtkHerosOrBuilder(
        int index) {
      if (atkHerosBuilder_ == null) {
        return atkHeros_.get(index);  } else {
        return atkHerosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public java.util.List<? extends pb4client.HeroInfoForReportOrBuilder> 
         getAtkHerosOrBuilderList() {
      if (atkHerosBuilder_ != null) {
        return atkHerosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(atkHeros_);
      }
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public pb4client.HeroInfoForReport.Builder addAtkHerosBuilder() {
      return getAtkHerosFieldBuilder().addBuilder(
          pb4client.HeroInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public pb4client.HeroInfoForReport.Builder addAtkHerosBuilder(
        int index) {
      return getAtkHerosFieldBuilder().addBuilder(
          index, pb4client.HeroInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 攻击方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport atkHeros = 13;</code>
     */
    public java.util.List<pb4client.HeroInfoForReport.Builder> 
         getAtkHerosBuilderList() {
      return getAtkHerosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder> 
        getAtkHerosFieldBuilder() {
      if (atkHerosBuilder_ == null) {
        atkHerosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder>(
                atkHeros_,
                ((bitField0_ & 0x00000800) == 0x00000800),
                getParentForChildren(),
                isClean());
        atkHeros_ = null;
      }
      return atkHerosBuilder_;
    }

    private java.util.List<pb4client.HeroInfoForReport> defHeros_ =
      java.util.Collections.emptyList();
    private void ensureDefHerosIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        defHeros_ = new java.util.ArrayList<pb4client.HeroInfoForReport>(defHeros_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder> defHerosBuilder_;

    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public java.util.List<pb4client.HeroInfoForReport> getDefHerosList() {
      if (defHerosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(defHeros_);
      } else {
        return defHerosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public int getDefHerosCount() {
      if (defHerosBuilder_ == null) {
        return defHeros_.size();
      } else {
        return defHerosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public pb4client.HeroInfoForReport getDefHeros(int index) {
      if (defHerosBuilder_ == null) {
        return defHeros_.get(index);
      } else {
        return defHerosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder setDefHeros(
        int index, pb4client.HeroInfoForReport value) {
      if (defHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefHerosIsMutable();
        defHeros_.set(index, value);
        onChanged();
      } else {
        defHerosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder setDefHeros(
        int index, pb4client.HeroInfoForReport.Builder builderForValue) {
      if (defHerosBuilder_ == null) {
        ensureDefHerosIsMutable();
        defHeros_.set(index, builderForValue.build());
        onChanged();
      } else {
        defHerosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder addDefHeros(pb4client.HeroInfoForReport value) {
      if (defHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefHerosIsMutable();
        defHeros_.add(value);
        onChanged();
      } else {
        defHerosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder addDefHeros(
        int index, pb4client.HeroInfoForReport value) {
      if (defHerosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDefHerosIsMutable();
        defHeros_.add(index, value);
        onChanged();
      } else {
        defHerosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder addDefHeros(
        pb4client.HeroInfoForReport.Builder builderForValue) {
      if (defHerosBuilder_ == null) {
        ensureDefHerosIsMutable();
        defHeros_.add(builderForValue.build());
        onChanged();
      } else {
        defHerosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder addDefHeros(
        int index, pb4client.HeroInfoForReport.Builder builderForValue) {
      if (defHerosBuilder_ == null) {
        ensureDefHerosIsMutable();
        defHeros_.add(index, builderForValue.build());
        onChanged();
      } else {
        defHerosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder addAllDefHeros(
        java.lang.Iterable<? extends pb4client.HeroInfoForReport> values) {
      if (defHerosBuilder_ == null) {
        ensureDefHerosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, defHeros_);
        onChanged();
      } else {
        defHerosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder clearDefHeros() {
      if (defHerosBuilder_ == null) {
        defHeros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        defHerosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public Builder removeDefHeros(int index) {
      if (defHerosBuilder_ == null) {
        ensureDefHerosIsMutable();
        defHeros_.remove(index);
        onChanged();
      } else {
        defHerosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public pb4client.HeroInfoForReport.Builder getDefHerosBuilder(
        int index) {
      return getDefHerosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public pb4client.HeroInfoForReportOrBuilder getDefHerosOrBuilder(
        int index) {
      if (defHerosBuilder_ == null) {
        return defHeros_.get(index);  } else {
        return defHerosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public java.util.List<? extends pb4client.HeroInfoForReportOrBuilder> 
         getDefHerosOrBuilderList() {
      if (defHerosBuilder_ != null) {
        return defHerosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(defHeros_);
      }
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public pb4client.HeroInfoForReport.Builder addDefHerosBuilder() {
      return getDefHerosFieldBuilder().addBuilder(
          pb4client.HeroInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public pb4client.HeroInfoForReport.Builder addDefHerosBuilder(
        int index) {
      return getDefHerosFieldBuilder().addBuilder(
          index, pb4client.HeroInfoForReport.getDefaultInstance());
    }
    /**
     * <pre>
     * 防守方英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroInfoForReport defHeros = 14;</code>
     */
    public java.util.List<pb4client.HeroInfoForReport.Builder> 
         getDefHerosBuilderList() {
      return getDefHerosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder> 
        getDefHerosFieldBuilder() {
      if (defHerosBuilder_ == null) {
        defHerosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.HeroInfoForReport, pb4client.HeroInfoForReport.Builder, pb4client.HeroInfoForReportOrBuilder>(
                defHeros_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        defHeros_ = null;
      }
      return defHerosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.PvpFightReport)
  }

  // @@protoc_insertion_point(class_scope:client2server.PvpFightReport)
  private static final pb4client.PvpFightReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.PvpFightReport();
  }

  public static pb4client.PvpFightReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PvpFightReport>
      PARSER = new com.google.protobuf.AbstractParser<PvpFightReport>() {
    public PvpFightReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new PvpFightReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PvpFightReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PvpFightReport> getParserForType() {
    return PARSER;
  }

  public pb4client.PvpFightReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

