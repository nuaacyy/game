// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.RelicFightInfo}
 */
public  final class RelicFightInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.RelicFightInfo)
    RelicFightInfoOrBuilder {
  // Use RelicFightInfo.newBuilder() to construct.
  private RelicFightInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RelicFightInfo() {
    relicFightInfoId_ = 0L;
    allianceName_ = "";
    playerName_ = "";
    playerBuildLv_ = 0;
    relicLv_ = 0;
    x_ = 0;
    y_ = 0;
    fightResult_ = 0;
    joinPlayerNum_ = 0;
    fightTime_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RelicFightInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            relicFightInfoId_ = input.readInt64();
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            allianceName_ = bs;
            break;
          }
          case 26: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000004;
            playerName_ = bs;
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            playerBuildLv_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            relicLv_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            x_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            y_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            fightResult_ = input.readInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000100;
            joinPlayerNum_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000200;
            fightTime_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicFightInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicFightInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.RelicFightInfo.class, pb4client.RelicFightInfo.Builder.class);
  }

  private int bitField0_;
  public static final int RELICFIGHTINFOID_FIELD_NUMBER = 1;
  private long relicFightInfoId_;
  /**
   * <pre>
   * 遗迹战斗信息ID
   * </pre>
   *
   * <code>required int64 relicFightInfoId = 1;</code>
   */
  public boolean hasRelicFightInfoId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 遗迹战斗信息ID
   * </pre>
   *
   * <code>required int64 relicFightInfoId = 1;</code>
   */
  public long getRelicFightInfoId() {
    return relicFightInfoId_;
  }

  public static final int ALLIANCENAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object allianceName_;
  /**
   * <pre>
   * 帮派名
   * </pre>
   *
   * <code>required string allianceName = 2;</code>
   */
  public boolean hasAllianceName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 帮派名
   * </pre>
   *
   * <code>required string allianceName = 2;</code>
   */
  public java.lang.String getAllianceName() {
    java.lang.Object ref = allianceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        allianceName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * 帮派名
   * </pre>
   *
   * <code>required string allianceName = 2;</code>
   */
  public com.google.protobuf.ByteString
      getAllianceNameBytes() {
    java.lang.Object ref = allianceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      allianceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYERNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object playerName_;
  /**
   * <pre>
   * 团长名
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public boolean hasPlayerName() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 团长名
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public java.lang.String getPlayerName() {
    java.lang.Object ref = playerName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        playerName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * 团长名
   * </pre>
   *
   * <code>required string playerName = 3;</code>
   */
  public com.google.protobuf.ByteString
      getPlayerNameBytes() {
    java.lang.Object ref = playerName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      playerName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYERBUILDLV_FIELD_NUMBER = 4;
  private int playerBuildLv_;
  /**
   * <pre>
   * 团长炼金者协会建筑等级
   * </pre>
   *
   * <code>required int32 playerBuildLv = 4;</code>
   */
  public boolean hasPlayerBuildLv() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 团长炼金者协会建筑等级
   * </pre>
   *
   * <code>required int32 playerBuildLv = 4;</code>
   */
  public int getPlayerBuildLv() {
    return playerBuildLv_;
  }

  public static final int RELICLV_FIELD_NUMBER = 5;
  private int relicLv_;
  /**
   * <pre>
   * 遗迹等级
   * </pre>
   *
   * <code>required int32 relicLv = 5;</code>
   */
  public boolean hasRelicLv() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 遗迹等级
   * </pre>
   *
   * <code>required int32 relicLv = 5;</code>
   */
  public int getRelicLv() {
    return relicLv_;
  }

  public static final int X_FIELD_NUMBER = 6;
  private int x_;
  /**
   * <pre>
   * 遗迹坐标
   * </pre>
   *
   * <code>required int32 x = 6;</code>
   */
  public boolean hasX() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 遗迹坐标
   * </pre>
   *
   * <code>required int32 x = 6;</code>
   */
  public int getX() {
    return x_;
  }

  public static final int Y_FIELD_NUMBER = 7;
  private int y_;
  /**
   * <pre>
   * 遗迹坐标
   * </pre>
   *
   * <code>required int32 y = 7;</code>
   */
  public boolean hasY() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 遗迹坐标
   * </pre>
   *
   * <code>required int32 y = 7;</code>
   */
  public int getY() {
    return y_;
  }

  public static final int FIGHTRESULT_FIELD_NUMBER = 8;
  private int fightResult_;
  /**
   * <pre>
   * 战斗结果
   * </pre>
   *
   * <code>required int32 fightResult = 8;</code>
   */
  public boolean hasFightResult() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 战斗结果
   * </pre>
   *
   * <code>required int32 fightResult = 8;</code>
   */
  public int getFightResult() {
    return fightResult_;
  }

  public static final int JOINPLAYERNUM_FIELD_NUMBER = 9;
  private int joinPlayerNum_;
  /**
   * <pre>
   * 参与人数
   * </pre>
   *
   * <code>required int32 joinPlayerNum = 9;</code>
   */
  public boolean hasJoinPlayerNum() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 参与人数
   * </pre>
   *
   * <code>required int32 joinPlayerNum = 9;</code>
   */
  public int getJoinPlayerNum() {
    return joinPlayerNum_;
  }

  public static final int FIGHTTIME_FIELD_NUMBER = 10;
  private int fightTime_;
  /**
   * <pre>
   * 战斗时间
   * </pre>
   *
   * <code>required int32 fightTime = 10;</code>
   */
  public boolean hasFightTime() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * 战斗时间
   * </pre>
   *
   * <code>required int32 fightTime = 10;</code>
   */
  public int getFightTime() {
    return fightTime_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRelicFightInfoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasAllianceName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerBuildLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRelicLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightResult()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasJoinPlayerNum()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, relicFightInfoId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, allianceName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, playerName_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, playerBuildLv_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, relicLv_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, x_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, y_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, fightResult_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(9, joinPlayerNum_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(10, fightTime_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, relicFightInfoId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, allianceName_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, playerName_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, playerBuildLv_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, relicLv_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, x_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, y_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, fightResult_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, joinPlayerNum_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, fightTime_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.RelicFightInfo)) {
      return super.equals(obj);
    }
    pb4client.RelicFightInfo other = (pb4client.RelicFightInfo) obj;

    boolean result = true;
    result = result && (hasRelicFightInfoId() == other.hasRelicFightInfoId());
    if (hasRelicFightInfoId()) {
      result = result && (getRelicFightInfoId()
          == other.getRelicFightInfoId());
    }
    result = result && (hasAllianceName() == other.hasAllianceName());
    if (hasAllianceName()) {
      result = result && getAllianceName()
          .equals(other.getAllianceName());
    }
    result = result && (hasPlayerName() == other.hasPlayerName());
    if (hasPlayerName()) {
      result = result && getPlayerName()
          .equals(other.getPlayerName());
    }
    result = result && (hasPlayerBuildLv() == other.hasPlayerBuildLv());
    if (hasPlayerBuildLv()) {
      result = result && (getPlayerBuildLv()
          == other.getPlayerBuildLv());
    }
    result = result && (hasRelicLv() == other.hasRelicLv());
    if (hasRelicLv()) {
      result = result && (getRelicLv()
          == other.getRelicLv());
    }
    result = result && (hasX() == other.hasX());
    if (hasX()) {
      result = result && (getX()
          == other.getX());
    }
    result = result && (hasY() == other.hasY());
    if (hasY()) {
      result = result && (getY()
          == other.getY());
    }
    result = result && (hasFightResult() == other.hasFightResult());
    if (hasFightResult()) {
      result = result && (getFightResult()
          == other.getFightResult());
    }
    result = result && (hasJoinPlayerNum() == other.hasJoinPlayerNum());
    if (hasJoinPlayerNum()) {
      result = result && (getJoinPlayerNum()
          == other.getJoinPlayerNum());
    }
    result = result && (hasFightTime() == other.hasFightTime());
    if (hasFightTime()) {
      result = result && (getFightTime()
          == other.getFightTime());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRelicFightInfoId()) {
      hash = (37 * hash) + RELICFIGHTINFOID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRelicFightInfoId());
    }
    if (hasAllianceName()) {
      hash = (37 * hash) + ALLIANCENAME_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceName().hashCode();
    }
    if (hasPlayerName()) {
      hash = (37 * hash) + PLAYERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerName().hashCode();
    }
    if (hasPlayerBuildLv()) {
      hash = (37 * hash) + PLAYERBUILDLV_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerBuildLv();
    }
    if (hasRelicLv()) {
      hash = (37 * hash) + RELICLV_FIELD_NUMBER;
      hash = (53 * hash) + getRelicLv();
    }
    if (hasX()) {
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
    }
    if (hasY()) {
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
    }
    if (hasFightResult()) {
      hash = (37 * hash) + FIGHTRESULT_FIELD_NUMBER;
      hash = (53 * hash) + getFightResult();
    }
    if (hasJoinPlayerNum()) {
      hash = (37 * hash) + JOINPLAYERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getJoinPlayerNum();
    }
    if (hasFightTime()) {
      hash = (37 * hash) + FIGHTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getFightTime();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.RelicFightInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicFightInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicFightInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicFightInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicFightInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicFightInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicFightInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicFightInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicFightInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.RelicFightInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicFightInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicFightInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.RelicFightInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.RelicFightInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.RelicFightInfo)
      pb4client.RelicFightInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicFightInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicFightInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.RelicFightInfo.class, pb4client.RelicFightInfo.Builder.class);
    }

    // Construct using pb4client.RelicFightInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      relicFightInfoId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      allianceName_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      playerName_ = "";
      bitField0_ = (bitField0_ & ~0x00000004);
      playerBuildLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      relicLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      x_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      y_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      fightResult_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      joinPlayerNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      fightTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicFightInfo_descriptor;
    }

    public pb4client.RelicFightInfo getDefaultInstanceForType() {
      return pb4client.RelicFightInfo.getDefaultInstance();
    }

    public pb4client.RelicFightInfo build() {
      pb4client.RelicFightInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.RelicFightInfo buildPartial() {
      pb4client.RelicFightInfo result = new pb4client.RelicFightInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.relicFightInfoId_ = relicFightInfoId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.allianceName_ = allianceName_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.playerName_ = playerName_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.playerBuildLv_ = playerBuildLv_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.relicLv_ = relicLv_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.x_ = x_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.y_ = y_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.fightResult_ = fightResult_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.joinPlayerNum_ = joinPlayerNum_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.fightTime_ = fightTime_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.RelicFightInfo) {
        return mergeFrom((pb4client.RelicFightInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.RelicFightInfo other) {
      if (other == pb4client.RelicFightInfo.getDefaultInstance()) return this;
      if (other.hasRelicFightInfoId()) {
        setRelicFightInfoId(other.getRelicFightInfoId());
      }
      if (other.hasAllianceName()) {
        bitField0_ |= 0x00000002;
        allianceName_ = other.allianceName_;
        onChanged();
      }
      if (other.hasPlayerName()) {
        bitField0_ |= 0x00000004;
        playerName_ = other.playerName_;
        onChanged();
      }
      if (other.hasPlayerBuildLv()) {
        setPlayerBuildLv(other.getPlayerBuildLv());
      }
      if (other.hasRelicLv()) {
        setRelicLv(other.getRelicLv());
      }
      if (other.hasX()) {
        setX(other.getX());
      }
      if (other.hasY()) {
        setY(other.getY());
      }
      if (other.hasFightResult()) {
        setFightResult(other.getFightResult());
      }
      if (other.hasJoinPlayerNum()) {
        setJoinPlayerNum(other.getJoinPlayerNum());
      }
      if (other.hasFightTime()) {
        setFightTime(other.getFightTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRelicFightInfoId()) {
        return false;
      }
      if (!hasAllianceName()) {
        return false;
      }
      if (!hasPlayerName()) {
        return false;
      }
      if (!hasPlayerBuildLv()) {
        return false;
      }
      if (!hasRelicLv()) {
        return false;
      }
      if (!hasX()) {
        return false;
      }
      if (!hasY()) {
        return false;
      }
      if (!hasFightResult()) {
        return false;
      }
      if (!hasJoinPlayerNum()) {
        return false;
      }
      if (!hasFightTime()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.RelicFightInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.RelicFightInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long relicFightInfoId_ ;
    /**
     * <pre>
     * 遗迹战斗信息ID
     * </pre>
     *
     * <code>required int64 relicFightInfoId = 1;</code>
     */
    public boolean hasRelicFightInfoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 遗迹战斗信息ID
     * </pre>
     *
     * <code>required int64 relicFightInfoId = 1;</code>
     */
    public long getRelicFightInfoId() {
      return relicFightInfoId_;
    }
    /**
     * <pre>
     * 遗迹战斗信息ID
     * </pre>
     *
     * <code>required int64 relicFightInfoId = 1;</code>
     */
    public Builder setRelicFightInfoId(long value) {
      bitField0_ |= 0x00000001;
      relicFightInfoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹战斗信息ID
     * </pre>
     *
     * <code>required int64 relicFightInfoId = 1;</code>
     */
    public Builder clearRelicFightInfoId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      relicFightInfoId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object allianceName_ = "";
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public boolean hasAllianceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public java.lang.String getAllianceName() {
      java.lang.Object ref = allianceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          allianceName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAllianceNameBytes() {
      java.lang.Object ref = allianceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allianceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public Builder setAllianceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      allianceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public Builder clearAllianceName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      allianceName_ = getDefaultInstance().getAllianceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 帮派名
     * </pre>
     *
     * <code>required string allianceName = 2;</code>
     */
    public Builder setAllianceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      allianceName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object playerName_ = "";
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder setPlayerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      playerName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder clearPlayerName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      playerName_ = getDefaultInstance().getPlayerName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长名
     * </pre>
     *
     * <code>required string playerName = 3;</code>
     */
    public Builder setPlayerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      playerName_ = value;
      onChanged();
      return this;
    }

    private int playerBuildLv_ ;
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public boolean hasPlayerBuildLv() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public int getPlayerBuildLv() {
      return playerBuildLv_;
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public Builder setPlayerBuildLv(int value) {
      bitField0_ |= 0x00000008;
      playerBuildLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public Builder clearPlayerBuildLv() {
      bitField0_ = (bitField0_ & ~0x00000008);
      playerBuildLv_ = 0;
      onChanged();
      return this;
    }

    private int relicLv_ ;
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 5;</code>
     */
    public boolean hasRelicLv() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 5;</code>
     */
    public int getRelicLv() {
      return relicLv_;
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 5;</code>
     */
    public Builder setRelicLv(int value) {
      bitField0_ |= 0x00000010;
      relicLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 5;</code>
     */
    public Builder clearRelicLv() {
      bitField0_ = (bitField0_ & ~0x00000010);
      relicLv_ = 0;
      onChanged();
      return this;
    }

    private int x_ ;
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 x = 6;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 x = 6;</code>
     */
    public int getX() {
      return x_;
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 x = 6;</code>
     */
    public Builder setX(int value) {
      bitField0_ |= 0x00000020;
      x_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 x = 6;</code>
     */
    public Builder clearX() {
      bitField0_ = (bitField0_ & ~0x00000020);
      x_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 y = 7;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 y = 7;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 y = 7;</code>
     */
    public Builder setY(int value) {
      bitField0_ |= 0x00000040;
      y_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹坐标
     * </pre>
     *
     * <code>required int32 y = 7;</code>
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000040);
      y_ = 0;
      onChanged();
      return this;
    }

    private int fightResult_ ;
    /**
     * <pre>
     * 战斗结果
     * </pre>
     *
     * <code>required int32 fightResult = 8;</code>
     */
    public boolean hasFightResult() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 战斗结果
     * </pre>
     *
     * <code>required int32 fightResult = 8;</code>
     */
    public int getFightResult() {
      return fightResult_;
    }
    /**
     * <pre>
     * 战斗结果
     * </pre>
     *
     * <code>required int32 fightResult = 8;</code>
     */
    public Builder setFightResult(int value) {
      bitField0_ |= 0x00000080;
      fightResult_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗结果
     * </pre>
     *
     * <code>required int32 fightResult = 8;</code>
     */
    public Builder clearFightResult() {
      bitField0_ = (bitField0_ & ~0x00000080);
      fightResult_ = 0;
      onChanged();
      return this;
    }

    private int joinPlayerNum_ ;
    /**
     * <pre>
     * 参与人数
     * </pre>
     *
     * <code>required int32 joinPlayerNum = 9;</code>
     */
    public boolean hasJoinPlayerNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * 参与人数
     * </pre>
     *
     * <code>required int32 joinPlayerNum = 9;</code>
     */
    public int getJoinPlayerNum() {
      return joinPlayerNum_;
    }
    /**
     * <pre>
     * 参与人数
     * </pre>
     *
     * <code>required int32 joinPlayerNum = 9;</code>
     */
    public Builder setJoinPlayerNum(int value) {
      bitField0_ |= 0x00000100;
      joinPlayerNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 参与人数
     * </pre>
     *
     * <code>required int32 joinPlayerNum = 9;</code>
     */
    public Builder clearJoinPlayerNum() {
      bitField0_ = (bitField0_ & ~0x00000100);
      joinPlayerNum_ = 0;
      onChanged();
      return this;
    }

    private int fightTime_ ;
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 10;</code>
     */
    public boolean hasFightTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 10;</code>
     */
    public int getFightTime() {
      return fightTime_;
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 10;</code>
     */
    public Builder setFightTime(int value) {
      bitField0_ |= 0x00000200;
      fightTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 10;</code>
     */
    public Builder clearFightTime() {
      bitField0_ = (bitField0_ & ~0x00000200);
      fightTime_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.RelicFightInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.RelicFightInfo)
  private static final pb4client.RelicFightInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.RelicFightInfo();
  }

  public static pb4client.RelicFightInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RelicFightInfo>
      PARSER = new com.google.protobuf.AbstractParser<RelicFightInfo>() {
    public RelicFightInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelicFightInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RelicFightInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RelicFightInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.RelicFightInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

