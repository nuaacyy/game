// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.JjcQueryInfoRt}
 */
public  final class JjcQueryInfoRt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.JjcQueryInfoRt)
    JjcQueryInfoRtOrBuilder {
  // Use JjcQueryInfoRt.newBuilder() to construct.
  private JjcQueryInfoRt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JjcQueryInfoRt() {
    rt_ = 0;
    rank_ = 0;
    power_ = 0L;
    times_ = 0;
    coldEndTime_ = 0;
    maxRank_ = 0;
    score_ = 0;
    drawRewards_ = java.util.Collections.emptyList();
    scoreRewards_ = java.util.Collections.emptyList();
    heroInfo_ = java.util.Collections.emptyList();
    achievementExchangeRewards_ = java.util.Collections.emptyList();
    tenRank_ = java.util.Collections.emptyList();
    buyTimes_ = 0;
    nextRefreshTime_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private JjcQueryInfoRt(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            rt_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            rank_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            power_ = input.readInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            times_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            coldEndTime_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            maxRank_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            score_ = input.readInt32();
            break;
          }
          case 64: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            drawRewards_.add(input.readInt32());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              drawRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 72: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              scoreRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000100;
            }
            scoreRewards_.add(input.readInt32());
            break;
          }
          case 74: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              scoreRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              scoreRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 82: {
            pb4client.JjcChallengeInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              subBuilder = challenge1_.toBuilder();
            }
            challenge1_ = input.readMessage(pb4client.JjcChallengeInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(challenge1_);
              challenge1_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000080;
            break;
          }
          case 90: {
            pb4client.JjcChallengeInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              subBuilder = challenge2_.toBuilder();
            }
            challenge2_ = input.readMessage(pb4client.JjcChallengeInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(challenge2_);
              challenge2_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000100;
            break;
          }
          case 98: {
            pb4client.JjcChallengeInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              subBuilder = challenge3_.toBuilder();
            }
            challenge3_ = input.readMessage(pb4client.JjcChallengeInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(challenge3_);
              challenge3_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              heroInfo_ = new java.util.ArrayList<pb4client.HeroPos>();
              mutable_bitField0_ |= 0x00001000;
            }
            heroInfo_.add(
                input.readMessage(pb4client.HeroPos.PARSER, extensionRegistry));
            break;
          }
          case 112: {
            if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
              achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00002000;
            }
            achievementExchangeRewards_.add(input.readInt32());
            break;
          }
          case 114: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
              achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00002000;
            }
            while (input.getBytesUntilLimit() > 0) {
              achievementExchangeRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
              tenRank_ = new java.util.ArrayList<pb4client.JjcChallengeInfo>();
              mutable_bitField0_ |= 0x00004000;
            }
            tenRank_.add(
                input.readMessage(pb4client.JjcChallengeInfo.PARSER, extensionRegistry));
            break;
          }
          case 128: {
            bitField0_ |= 0x00000400;
            buyTimes_ = input.readInt32();
            break;
          }
          case 136: {
            bitField0_ |= 0x00000800;
            nextRefreshTime_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        scoreRewards_ = java.util.Collections.unmodifiableList(scoreRewards_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        heroInfo_ = java.util.Collections.unmodifiableList(heroInfo_);
      }
      if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
        achievementExchangeRewards_ = java.util.Collections.unmodifiableList(achievementExchangeRewards_);
      }
      if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
        tenRank_ = java.util.Collections.unmodifiableList(tenRank_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_JjcQueryInfoRt_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_JjcQueryInfoRt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.JjcQueryInfoRt.class, pb4client.JjcQueryInfoRt.Builder.class);
  }

  private int bitField0_;
  public static final int RT_FIELD_NUMBER = 1;
  private int rt_;
  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  public boolean hasRt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  public int getRt() {
    return rt_;
  }

  public static final int RANK_FIELD_NUMBER = 2;
  private int rank_;
  /**
   * <pre>
   * 自己的排名
   * </pre>
   *
   * <code>optional int32 rank = 2;</code>
   */
  public boolean hasRank() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 自己的排名
   * </pre>
   *
   * <code>optional int32 rank = 2;</code>
   */
  public int getRank() {
    return rank_;
  }

  public static final int POWER_FIELD_NUMBER = 3;
  private long power_;
  /**
   * <pre>
   * 自己的实力值
   * </pre>
   *
   * <code>optional int64 power = 3;</code>
   */
  public boolean hasPower() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 自己的实力值
   * </pre>
   *
   * <code>optional int64 power = 3;</code>
   */
  public long getPower() {
    return power_;
  }

  public static final int TIMES_FIELD_NUMBER = 4;
  private int times_;
  /**
   * <pre>
   * 挑战剩余次数
   * </pre>
   *
   * <code>optional int32 times = 4;</code>
   */
  public boolean hasTimes() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 挑战剩余次数
   * </pre>
   *
   * <code>optional int32 times = 4;</code>
   */
  public int getTimes() {
    return times_;
  }

  public static final int COLDENDTIME_FIELD_NUMBER = 5;
  private int coldEndTime_;
  /**
   * <pre>
   * 挑战冷却结束时间
   * </pre>
   *
   * <code>optional int32 coldEndTime = 5;</code>
   */
  public boolean hasColdEndTime() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 挑战冷却结束时间
   * </pre>
   *
   * <code>optional int32 coldEndTime = 5;</code>
   */
  public int getColdEndTime() {
    return coldEndTime_;
  }

  public static final int MAXRANK_FIELD_NUMBER = 6;
  private int maxRank_;
  /**
   * <pre>
   * 历史最高排名
   * </pre>
   *
   * <code>optional int32 maxRank = 6;</code>
   */
  public boolean hasMaxRank() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 历史最高排名
   * </pre>
   *
   * <code>optional int32 maxRank = 6;</code>
   */
  public int getMaxRank() {
    return maxRank_;
  }

  public static final int SCORE_FIELD_NUMBER = 7;
  private int score_;
  /**
   * <pre>
   * 本日积分
   * </pre>
   *
   * <code>optional int32 score = 7;</code>
   */
  public boolean hasScore() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 本日积分
   * </pre>
   *
   * <code>optional int32 score = 7;</code>
   */
  public int getScore() {
    return score_;
  }

  public static final int DRAWREWARDS_FIELD_NUMBER = 8;
  private java.util.List<java.lang.Integer> drawRewards_;
  /**
   * <pre>
   * 已领取奖励的模版ID（最高排名）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 8;</code>
   */
  public java.util.List<java.lang.Integer>
      getDrawRewardsList() {
    return drawRewards_;
  }
  /**
   * <pre>
   * 已领取奖励的模版ID（最高排名）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 8;</code>
   */
  public int getDrawRewardsCount() {
    return drawRewards_.size();
  }
  /**
   * <pre>
   * 已领取奖励的模版ID（最高排名）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 8;</code>
   */
  public int getDrawRewards(int index) {
    return drawRewards_.get(index);
  }

  public static final int SCOREREWARDS_FIELD_NUMBER = 9;
  private java.util.List<java.lang.Integer> scoreRewards_;
  /**
   * <pre>
   * 本日已领取奖励的模版ID（积分）
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 9;</code>
   */
  public java.util.List<java.lang.Integer>
      getScoreRewardsList() {
    return scoreRewards_;
  }
  /**
   * <pre>
   * 本日已领取奖励的模版ID（积分）
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 9;</code>
   */
  public int getScoreRewardsCount() {
    return scoreRewards_.size();
  }
  /**
   * <pre>
   * 本日已领取奖励的模版ID（积分）
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 9;</code>
   */
  public int getScoreRewards(int index) {
    return scoreRewards_.get(index);
  }

  public static final int CHALLENGE1_FIELD_NUMBER = 10;
  private pb4client.JjcChallengeInfo challenge1_;
  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
   */
  public boolean hasChallenge1() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
   */
  public pb4client.JjcChallengeInfo getChallenge1() {
    return challenge1_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge1_;
  }
  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
   */
  public pb4client.JjcChallengeInfoOrBuilder getChallenge1OrBuilder() {
    return challenge1_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge1_;
  }

  public static final int CHALLENGE2_FIELD_NUMBER = 11;
  private pb4client.JjcChallengeInfo challenge2_;
  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
   */
  public boolean hasChallenge2() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
   */
  public pb4client.JjcChallengeInfo getChallenge2() {
    return challenge2_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge2_;
  }
  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
   */
  public pb4client.JjcChallengeInfoOrBuilder getChallenge2OrBuilder() {
    return challenge2_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge2_;
  }

  public static final int CHALLENGE3_FIELD_NUMBER = 12;
  private pb4client.JjcChallengeInfo challenge3_;
  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
   */
  public boolean hasChallenge3() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
   */
  public pb4client.JjcChallengeInfo getChallenge3() {
    return challenge3_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge3_;
  }
  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
   */
  public pb4client.JjcChallengeInfoOrBuilder getChallenge3OrBuilder() {
    return challenge3_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge3_;
  }

  public static final int HEROINFO_FIELD_NUMBER = 13;
  private java.util.List<pb4client.HeroPos> heroInfo_;
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
   */
  public java.util.List<pb4client.HeroPos> getHeroInfoList() {
    return heroInfo_;
  }
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
   */
  public java.util.List<? extends pb4client.HeroPosOrBuilder> 
      getHeroInfoOrBuilderList() {
    return heroInfo_;
  }
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
   */
  public int getHeroInfoCount() {
    return heroInfo_.size();
  }
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
   */
  public pb4client.HeroPos getHeroInfo(int index) {
    return heroInfo_.get(index);
  }
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
   */
  public pb4client.HeroPosOrBuilder getHeroInfoOrBuilder(
      int index) {
    return heroInfo_.get(index);
  }

  public static final int ACHIEVEMENTEXCHANGEREWARDS_FIELD_NUMBER = 14;
  private java.util.List<java.lang.Integer> achievementExchangeRewards_;
  /**
   * <pre>
   * 已领取成就奖励的模版ID
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 14;</code>
   */
  public java.util.List<java.lang.Integer>
      getAchievementExchangeRewardsList() {
    return achievementExchangeRewards_;
  }
  /**
   * <pre>
   * 已领取成就奖励的模版ID
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 14;</code>
   */
  public int getAchievementExchangeRewardsCount() {
    return achievementExchangeRewards_.size();
  }
  /**
   * <pre>
   * 已领取成就奖励的模版ID
   * </pre>
   *
   * <code>repeated int32 achievementExchangeRewards = 14;</code>
   */
  public int getAchievementExchangeRewards(int index) {
    return achievementExchangeRewards_.get(index);
  }

  public static final int TENRANK_FIELD_NUMBER = 15;
  private java.util.List<pb4client.JjcChallengeInfo> tenRank_;
  /**
   * <pre>
   * 前十名
   * </pre>
   *
   * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
   */
  public java.util.List<pb4client.JjcChallengeInfo> getTenRankList() {
    return tenRank_;
  }
  /**
   * <pre>
   * 前十名
   * </pre>
   *
   * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
   */
  public java.util.List<? extends pb4client.JjcChallengeInfoOrBuilder> 
      getTenRankOrBuilderList() {
    return tenRank_;
  }
  /**
   * <pre>
   * 前十名
   * </pre>
   *
   * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
   */
  public int getTenRankCount() {
    return tenRank_.size();
  }
  /**
   * <pre>
   * 前十名
   * </pre>
   *
   * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
   */
  public pb4client.JjcChallengeInfo getTenRank(int index) {
    return tenRank_.get(index);
  }
  /**
   * <pre>
   * 前十名
   * </pre>
   *
   * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
   */
  public pb4client.JjcChallengeInfoOrBuilder getTenRankOrBuilder(
      int index) {
    return tenRank_.get(index);
  }

  public static final int BUYTIMES_FIELD_NUMBER = 16;
  private int buyTimes_;
  /**
   * <pre>
   * 挑战购买次数
   * </pre>
   *
   * <code>optional int32 buyTimes = 16;</code>
   */
  public boolean hasBuyTimes() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   * 挑战购买次数
   * </pre>
   *
   * <code>optional int32 buyTimes = 16;</code>
   */
  public int getBuyTimes() {
    return buyTimes_;
  }

  public static final int NEXTREFRESHTIME_FIELD_NUMBER = 17;
  private long nextRefreshTime_;
  /**
   * <pre>
   * 下一次挑战刷新时间
   * </pre>
   *
   * <code>optional int64 nextRefreshTime = 17;</code>
   */
  public boolean hasNextRefreshTime() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   * 下一次挑战刷新时间
   * </pre>
   *
   * <code>optional int64 nextRefreshTime = 17;</code>
   */
  public long getNextRefreshTime() {
    return nextRefreshTime_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRt()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasChallenge1()) {
      if (!getChallenge1().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasChallenge2()) {
      if (!getChallenge2().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasChallenge3()) {
      if (!getChallenge3().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getHeroInfoCount(); i++) {
      if (!getHeroInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getTenRankCount(); i++) {
      if (!getTenRank(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, rank_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(3, power_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, times_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, coldEndTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, maxRank_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, score_);
    }
    for (int i = 0; i < drawRewards_.size(); i++) {
      output.writeInt32(8, drawRewards_.get(i));
    }
    for (int i = 0; i < scoreRewards_.size(); i++) {
      output.writeInt32(9, scoreRewards_.get(i));
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeMessage(10, getChallenge1());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(11, getChallenge2());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(12, getChallenge3());
    }
    for (int i = 0; i < heroInfo_.size(); i++) {
      output.writeMessage(13, heroInfo_.get(i));
    }
    for (int i = 0; i < achievementExchangeRewards_.size(); i++) {
      output.writeInt32(14, achievementExchangeRewards_.get(i));
    }
    for (int i = 0; i < tenRank_.size(); i++) {
      output.writeMessage(15, tenRank_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(16, buyTimes_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeInt64(17, nextRefreshTime_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, rank_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, power_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, times_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, coldEndTime_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, maxRank_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, score_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < drawRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(drawRewards_.get(i));
      }
      size += dataSize;
      size += 1 * getDrawRewardsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < scoreRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(scoreRewards_.get(i));
      }
      size += dataSize;
      size += 1 * getScoreRewardsList().size();
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getChallenge1());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getChallenge2());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getChallenge3());
    }
    for (int i = 0; i < heroInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, heroInfo_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < achievementExchangeRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(achievementExchangeRewards_.get(i));
      }
      size += dataSize;
      size += 1 * getAchievementExchangeRewardsList().size();
    }
    for (int i = 0; i < tenRank_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, tenRank_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, buyTimes_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(17, nextRefreshTime_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.JjcQueryInfoRt)) {
      return super.equals(obj);
    }
    pb4client.JjcQueryInfoRt other = (pb4client.JjcQueryInfoRt) obj;

    boolean result = true;
    result = result && (hasRt() == other.hasRt());
    if (hasRt()) {
      result = result && (getRt()
          == other.getRt());
    }
    result = result && (hasRank() == other.hasRank());
    if (hasRank()) {
      result = result && (getRank()
          == other.getRank());
    }
    result = result && (hasPower() == other.hasPower());
    if (hasPower()) {
      result = result && (getPower()
          == other.getPower());
    }
    result = result && (hasTimes() == other.hasTimes());
    if (hasTimes()) {
      result = result && (getTimes()
          == other.getTimes());
    }
    result = result && (hasColdEndTime() == other.hasColdEndTime());
    if (hasColdEndTime()) {
      result = result && (getColdEndTime()
          == other.getColdEndTime());
    }
    result = result && (hasMaxRank() == other.hasMaxRank());
    if (hasMaxRank()) {
      result = result && (getMaxRank()
          == other.getMaxRank());
    }
    result = result && (hasScore() == other.hasScore());
    if (hasScore()) {
      result = result && (getScore()
          == other.getScore());
    }
    result = result && getDrawRewardsList()
        .equals(other.getDrawRewardsList());
    result = result && getScoreRewardsList()
        .equals(other.getScoreRewardsList());
    result = result && (hasChallenge1() == other.hasChallenge1());
    if (hasChallenge1()) {
      result = result && getChallenge1()
          .equals(other.getChallenge1());
    }
    result = result && (hasChallenge2() == other.hasChallenge2());
    if (hasChallenge2()) {
      result = result && getChallenge2()
          .equals(other.getChallenge2());
    }
    result = result && (hasChallenge3() == other.hasChallenge3());
    if (hasChallenge3()) {
      result = result && getChallenge3()
          .equals(other.getChallenge3());
    }
    result = result && getHeroInfoList()
        .equals(other.getHeroInfoList());
    result = result && getAchievementExchangeRewardsList()
        .equals(other.getAchievementExchangeRewardsList());
    result = result && getTenRankList()
        .equals(other.getTenRankList());
    result = result && (hasBuyTimes() == other.hasBuyTimes());
    if (hasBuyTimes()) {
      result = result && (getBuyTimes()
          == other.getBuyTimes());
    }
    result = result && (hasNextRefreshTime() == other.hasNextRefreshTime());
    if (hasNextRefreshTime()) {
      result = result && (getNextRefreshTime()
          == other.getNextRefreshTime());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRt()) {
      hash = (37 * hash) + RT_FIELD_NUMBER;
      hash = (53 * hash) + getRt();
    }
    if (hasRank()) {
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + getRank();
    }
    if (hasPower()) {
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
    }
    if (hasTimes()) {
      hash = (37 * hash) + TIMES_FIELD_NUMBER;
      hash = (53 * hash) + getTimes();
    }
    if (hasColdEndTime()) {
      hash = (37 * hash) + COLDENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getColdEndTime();
    }
    if (hasMaxRank()) {
      hash = (37 * hash) + MAXRANK_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRank();
    }
    if (hasScore()) {
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
    }
    if (getDrawRewardsCount() > 0) {
      hash = (37 * hash) + DRAWREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getDrawRewardsList().hashCode();
    }
    if (getScoreRewardsCount() > 0) {
      hash = (37 * hash) + SCOREREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getScoreRewardsList().hashCode();
    }
    if (hasChallenge1()) {
      hash = (37 * hash) + CHALLENGE1_FIELD_NUMBER;
      hash = (53 * hash) + getChallenge1().hashCode();
    }
    if (hasChallenge2()) {
      hash = (37 * hash) + CHALLENGE2_FIELD_NUMBER;
      hash = (53 * hash) + getChallenge2().hashCode();
    }
    if (hasChallenge3()) {
      hash = (37 * hash) + CHALLENGE3_FIELD_NUMBER;
      hash = (53 * hash) + getChallenge3().hashCode();
    }
    if (getHeroInfoCount() > 0) {
      hash = (37 * hash) + HEROINFO_FIELD_NUMBER;
      hash = (53 * hash) + getHeroInfoList().hashCode();
    }
    if (getAchievementExchangeRewardsCount() > 0) {
      hash = (37 * hash) + ACHIEVEMENTEXCHANGEREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getAchievementExchangeRewardsList().hashCode();
    }
    if (getTenRankCount() > 0) {
      hash = (37 * hash) + TENRANK_FIELD_NUMBER;
      hash = (53 * hash) + getTenRankList().hashCode();
    }
    if (hasBuyTimes()) {
      hash = (37 * hash) + BUYTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getBuyTimes();
    }
    if (hasNextRefreshTime()) {
      hash = (37 * hash) + NEXTREFRESHTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNextRefreshTime());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.JjcQueryInfoRt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.JjcQueryInfoRt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.JjcQueryInfoRt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.JjcQueryInfoRt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.JjcQueryInfoRt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.JjcQueryInfoRt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.JjcQueryInfoRt)
      pb4client.JjcQueryInfoRtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_JjcQueryInfoRt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_JjcQueryInfoRt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.JjcQueryInfoRt.class, pb4client.JjcQueryInfoRt.Builder.class);
    }

    // Construct using pb4client.JjcQueryInfoRt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getChallenge1FieldBuilder();
        getChallenge2FieldBuilder();
        getChallenge3FieldBuilder();
        getHeroInfoFieldBuilder();
        getTenRankFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      rt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      rank_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      power_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      times_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      coldEndTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      maxRank_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      score_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      scoreRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      if (challenge1Builder_ == null) {
        challenge1_ = null;
      } else {
        challenge1Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (challenge2Builder_ == null) {
        challenge2_ = null;
      } else {
        challenge2Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (challenge3Builder_ == null) {
        challenge3_ = null;
      } else {
        challenge3Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      if (heroInfoBuilder_ == null) {
        heroInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        heroInfoBuilder_.clear();
      }
      achievementExchangeRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00002000);
      if (tenRankBuilder_ == null) {
        tenRank_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
      } else {
        tenRankBuilder_.clear();
      }
      buyTimes_ = 0;
      bitField0_ = (bitField0_ & ~0x00008000);
      nextRefreshTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00010000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_JjcQueryInfoRt_descriptor;
    }

    public pb4client.JjcQueryInfoRt getDefaultInstanceForType() {
      return pb4client.JjcQueryInfoRt.getDefaultInstance();
    }

    public pb4client.JjcQueryInfoRt build() {
      pb4client.JjcQueryInfoRt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.JjcQueryInfoRt buildPartial() {
      pb4client.JjcQueryInfoRt result = new pb4client.JjcQueryInfoRt(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.rt_ = rt_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.rank_ = rank_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.power_ = power_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.times_ = times_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.coldEndTime_ = coldEndTime_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.maxRank_ = maxRank_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.score_ = score_;
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.drawRewards_ = drawRewards_;
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        scoreRewards_ = java.util.Collections.unmodifiableList(scoreRewards_);
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.scoreRewards_ = scoreRewards_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000080;
      }
      if (challenge1Builder_ == null) {
        result.challenge1_ = challenge1_;
      } else {
        result.challenge1_ = challenge1Builder_.build();
      }
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000100;
      }
      if (challenge2Builder_ == null) {
        result.challenge2_ = challenge2_;
      } else {
        result.challenge2_ = challenge2Builder_.build();
      }
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000200;
      }
      if (challenge3Builder_ == null) {
        result.challenge3_ = challenge3_;
      } else {
        result.challenge3_ = challenge3Builder_.build();
      }
      if (heroInfoBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          heroInfo_ = java.util.Collections.unmodifiableList(heroInfo_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.heroInfo_ = heroInfo_;
      } else {
        result.heroInfo_ = heroInfoBuilder_.build();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        achievementExchangeRewards_ = java.util.Collections.unmodifiableList(achievementExchangeRewards_);
        bitField0_ = (bitField0_ & ~0x00002000);
      }
      result.achievementExchangeRewards_ = achievementExchangeRewards_;
      if (tenRankBuilder_ == null) {
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          tenRank_ = java.util.Collections.unmodifiableList(tenRank_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.tenRank_ = tenRank_;
      } else {
        result.tenRank_ = tenRankBuilder_.build();
      }
      if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
        to_bitField0_ |= 0x00000400;
      }
      result.buyTimes_ = buyTimes_;
      if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
        to_bitField0_ |= 0x00000800;
      }
      result.nextRefreshTime_ = nextRefreshTime_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.JjcQueryInfoRt) {
        return mergeFrom((pb4client.JjcQueryInfoRt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.JjcQueryInfoRt other) {
      if (other == pb4client.JjcQueryInfoRt.getDefaultInstance()) return this;
      if (other.hasRt()) {
        setRt(other.getRt());
      }
      if (other.hasRank()) {
        setRank(other.getRank());
      }
      if (other.hasPower()) {
        setPower(other.getPower());
      }
      if (other.hasTimes()) {
        setTimes(other.getTimes());
      }
      if (other.hasColdEndTime()) {
        setColdEndTime(other.getColdEndTime());
      }
      if (other.hasMaxRank()) {
        setMaxRank(other.getMaxRank());
      }
      if (other.hasScore()) {
        setScore(other.getScore());
      }
      if (!other.drawRewards_.isEmpty()) {
        if (drawRewards_.isEmpty()) {
          drawRewards_ = other.drawRewards_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureDrawRewardsIsMutable();
          drawRewards_.addAll(other.drawRewards_);
        }
        onChanged();
      }
      if (!other.scoreRewards_.isEmpty()) {
        if (scoreRewards_.isEmpty()) {
          scoreRewards_ = other.scoreRewards_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureScoreRewardsIsMutable();
          scoreRewards_.addAll(other.scoreRewards_);
        }
        onChanged();
      }
      if (other.hasChallenge1()) {
        mergeChallenge1(other.getChallenge1());
      }
      if (other.hasChallenge2()) {
        mergeChallenge2(other.getChallenge2());
      }
      if (other.hasChallenge3()) {
        mergeChallenge3(other.getChallenge3());
      }
      if (heroInfoBuilder_ == null) {
        if (!other.heroInfo_.isEmpty()) {
          if (heroInfo_.isEmpty()) {
            heroInfo_ = other.heroInfo_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureHeroInfoIsMutable();
            heroInfo_.addAll(other.heroInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.heroInfo_.isEmpty()) {
          if (heroInfoBuilder_.isEmpty()) {
            heroInfoBuilder_.dispose();
            heroInfoBuilder_ = null;
            heroInfo_ = other.heroInfo_;
            bitField0_ = (bitField0_ & ~0x00001000);
            heroInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeroInfoFieldBuilder() : null;
          } else {
            heroInfoBuilder_.addAllMessages(other.heroInfo_);
          }
        }
      }
      if (!other.achievementExchangeRewards_.isEmpty()) {
        if (achievementExchangeRewards_.isEmpty()) {
          achievementExchangeRewards_ = other.achievementExchangeRewards_;
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          ensureAchievementExchangeRewardsIsMutable();
          achievementExchangeRewards_.addAll(other.achievementExchangeRewards_);
        }
        onChanged();
      }
      if (tenRankBuilder_ == null) {
        if (!other.tenRank_.isEmpty()) {
          if (tenRank_.isEmpty()) {
            tenRank_ = other.tenRank_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureTenRankIsMutable();
            tenRank_.addAll(other.tenRank_);
          }
          onChanged();
        }
      } else {
        if (!other.tenRank_.isEmpty()) {
          if (tenRankBuilder_.isEmpty()) {
            tenRankBuilder_.dispose();
            tenRankBuilder_ = null;
            tenRank_ = other.tenRank_;
            bitField0_ = (bitField0_ & ~0x00004000);
            tenRankBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTenRankFieldBuilder() : null;
          } else {
            tenRankBuilder_.addAllMessages(other.tenRank_);
          }
        }
      }
      if (other.hasBuyTimes()) {
        setBuyTimes(other.getBuyTimes());
      }
      if (other.hasNextRefreshTime()) {
        setNextRefreshTime(other.getNextRefreshTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRt()) {
        return false;
      }
      if (hasChallenge1()) {
        if (!getChallenge1().isInitialized()) {
          return false;
        }
      }
      if (hasChallenge2()) {
        if (!getChallenge2().isInitialized()) {
          return false;
        }
      }
      if (hasChallenge3()) {
        if (!getChallenge3().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getHeroInfoCount(); i++) {
        if (!getHeroInfo(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getTenRankCount(); i++) {
        if (!getTenRank(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.JjcQueryInfoRt parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.JjcQueryInfoRt) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int rt_ ;
    /**
     * <pre>
     * 返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public boolean hasRt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public int getRt() {
      return rt_;
    }
    /**
     * <pre>
     * 返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public Builder setRt(int value) {
      bitField0_ |= 0x00000001;
      rt_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public Builder clearRt() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rt_ = 0;
      onChanged();
      return this;
    }

    private int rank_ ;
    /**
     * <pre>
     * 自己的排名
     * </pre>
     *
     * <code>optional int32 rank = 2;</code>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 自己的排名
     * </pre>
     *
     * <code>optional int32 rank = 2;</code>
     */
    public int getRank() {
      return rank_;
    }
    /**
     * <pre>
     * 自己的排名
     * </pre>
     *
     * <code>optional int32 rank = 2;</code>
     */
    public Builder setRank(int value) {
      bitField0_ |= 0x00000002;
      rank_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 自己的排名
     * </pre>
     *
     * <code>optional int32 rank = 2;</code>
     */
    public Builder clearRank() {
      bitField0_ = (bitField0_ & ~0x00000002);
      rank_ = 0;
      onChanged();
      return this;
    }

    private long power_ ;
    /**
     * <pre>
     * 自己的实力值
     * </pre>
     *
     * <code>optional int64 power = 3;</code>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 自己的实力值
     * </pre>
     *
     * <code>optional int64 power = 3;</code>
     */
    public long getPower() {
      return power_;
    }
    /**
     * <pre>
     * 自己的实力值
     * </pre>
     *
     * <code>optional int64 power = 3;</code>
     */
    public Builder setPower(long value) {
      bitField0_ |= 0x00000004;
      power_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 自己的实力值
     * </pre>
     *
     * <code>optional int64 power = 3;</code>
     */
    public Builder clearPower() {
      bitField0_ = (bitField0_ & ~0x00000004);
      power_ = 0L;
      onChanged();
      return this;
    }

    private int times_ ;
    /**
     * <pre>
     * 挑战剩余次数
     * </pre>
     *
     * <code>optional int32 times = 4;</code>
     */
    public boolean hasTimes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 挑战剩余次数
     * </pre>
     *
     * <code>optional int32 times = 4;</code>
     */
    public int getTimes() {
      return times_;
    }
    /**
     * <pre>
     * 挑战剩余次数
     * </pre>
     *
     * <code>optional int32 times = 4;</code>
     */
    public Builder setTimes(int value) {
      bitField0_ |= 0x00000008;
      times_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 挑战剩余次数
     * </pre>
     *
     * <code>optional int32 times = 4;</code>
     */
    public Builder clearTimes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      times_ = 0;
      onChanged();
      return this;
    }

    private int coldEndTime_ ;
    /**
     * <pre>
     * 挑战冷却结束时间
     * </pre>
     *
     * <code>optional int32 coldEndTime = 5;</code>
     */
    public boolean hasColdEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 挑战冷却结束时间
     * </pre>
     *
     * <code>optional int32 coldEndTime = 5;</code>
     */
    public int getColdEndTime() {
      return coldEndTime_;
    }
    /**
     * <pre>
     * 挑战冷却结束时间
     * </pre>
     *
     * <code>optional int32 coldEndTime = 5;</code>
     */
    public Builder setColdEndTime(int value) {
      bitField0_ |= 0x00000010;
      coldEndTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 挑战冷却结束时间
     * </pre>
     *
     * <code>optional int32 coldEndTime = 5;</code>
     */
    public Builder clearColdEndTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      coldEndTime_ = 0;
      onChanged();
      return this;
    }

    private int maxRank_ ;
    /**
     * <pre>
     * 历史最高排名
     * </pre>
     *
     * <code>optional int32 maxRank = 6;</code>
     */
    public boolean hasMaxRank() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 历史最高排名
     * </pre>
     *
     * <code>optional int32 maxRank = 6;</code>
     */
    public int getMaxRank() {
      return maxRank_;
    }
    /**
     * <pre>
     * 历史最高排名
     * </pre>
     *
     * <code>optional int32 maxRank = 6;</code>
     */
    public Builder setMaxRank(int value) {
      bitField0_ |= 0x00000020;
      maxRank_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 历史最高排名
     * </pre>
     *
     * <code>optional int32 maxRank = 6;</code>
     */
    public Builder clearMaxRank() {
      bitField0_ = (bitField0_ & ~0x00000020);
      maxRank_ = 0;
      onChanged();
      return this;
    }

    private int score_ ;
    /**
     * <pre>
     * 本日积分
     * </pre>
     *
     * <code>optional int32 score = 7;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 本日积分
     * </pre>
     *
     * <code>optional int32 score = 7;</code>
     */
    public int getScore() {
      return score_;
    }
    /**
     * <pre>
     * 本日积分
     * </pre>
     *
     * <code>optional int32 score = 7;</code>
     */
    public Builder setScore(int value) {
      bitField0_ |= 0x00000040;
      score_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日积分
     * </pre>
     *
     * <code>optional int32 score = 7;</code>
     */
    public Builder clearScore() {
      bitField0_ = (bitField0_ & ~0x00000040);
      score_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> drawRewards_ = java.util.Collections.emptyList();
    private void ensureDrawRewardsIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        drawRewards_ = new java.util.ArrayList<java.lang.Integer>(drawRewards_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getDrawRewardsList() {
      return java.util.Collections.unmodifiableList(drawRewards_);
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public int getDrawRewardsCount() {
      return drawRewards_.size();
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public int getDrawRewards(int index) {
      return drawRewards_.get(index);
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public Builder setDrawRewards(
        int index, int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public Builder addDrawRewards(int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public Builder addAllDrawRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDrawRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, drawRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取奖励的模版ID（最高排名）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 8;</code>
     */
    public Builder clearDrawRewards() {
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> scoreRewards_ = java.util.Collections.emptyList();
    private void ensureScoreRewardsIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        scoreRewards_ = new java.util.ArrayList<java.lang.Integer>(scoreRewards_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getScoreRewardsList() {
      return java.util.Collections.unmodifiableList(scoreRewards_);
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public int getScoreRewardsCount() {
      return scoreRewards_.size();
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public int getScoreRewards(int index) {
      return scoreRewards_.get(index);
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public Builder setScoreRewards(
        int index, int value) {
      ensureScoreRewardsIsMutable();
      scoreRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public Builder addScoreRewards(int value) {
      ensureScoreRewardsIsMutable();
      scoreRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public Builder addAllScoreRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureScoreRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, scoreRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取奖励的模版ID（积分）
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 9;</code>
     */
    public Builder clearScoreRewards() {
      scoreRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }

    private pb4client.JjcChallengeInfo challenge1_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> challenge1Builder_;
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public boolean hasChallenge1() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public pb4client.JjcChallengeInfo getChallenge1() {
      if (challenge1Builder_ == null) {
        return challenge1_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge1_;
      } else {
        return challenge1Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public Builder setChallenge1(pb4client.JjcChallengeInfo value) {
      if (challenge1Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        challenge1_ = value;
        onChanged();
      } else {
        challenge1Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public Builder setChallenge1(
        pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (challenge1Builder_ == null) {
        challenge1_ = builderForValue.build();
        onChanged();
      } else {
        challenge1Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public Builder mergeChallenge1(pb4client.JjcChallengeInfo value) {
      if (challenge1Builder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            challenge1_ != null &&
            challenge1_ != pb4client.JjcChallengeInfo.getDefaultInstance()) {
          challenge1_ =
            pb4client.JjcChallengeInfo.newBuilder(challenge1_).mergeFrom(value).buildPartial();
        } else {
          challenge1_ = value;
        }
        onChanged();
      } else {
        challenge1Builder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public Builder clearChallenge1() {
      if (challenge1Builder_ == null) {
        challenge1_ = null;
        onChanged();
      } else {
        challenge1Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public pb4client.JjcChallengeInfo.Builder getChallenge1Builder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getChallenge1FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    public pb4client.JjcChallengeInfoOrBuilder getChallenge1OrBuilder() {
      if (challenge1Builder_ != null) {
        return challenge1Builder_.getMessageOrBuilder();
      } else {
        return challenge1_ == null ?
            pb4client.JjcChallengeInfo.getDefaultInstance() : challenge1_;
      }
    }
    /**
     * <pre>
     * 挑战对手排名1（低，数值大）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge1 = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> 
        getChallenge1FieldBuilder() {
      if (challenge1Builder_ == null) {
        challenge1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder>(
                getChallenge1(),
                getParentForChildren(),
                isClean());
        challenge1_ = null;
      }
      return challenge1Builder_;
    }

    private pb4client.JjcChallengeInfo challenge2_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> challenge2Builder_;
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public boolean hasChallenge2() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public pb4client.JjcChallengeInfo getChallenge2() {
      if (challenge2Builder_ == null) {
        return challenge2_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge2_;
      } else {
        return challenge2Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public Builder setChallenge2(pb4client.JjcChallengeInfo value) {
      if (challenge2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        challenge2_ = value;
        onChanged();
      } else {
        challenge2Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public Builder setChallenge2(
        pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (challenge2Builder_ == null) {
        challenge2_ = builderForValue.build();
        onChanged();
      } else {
        challenge2Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public Builder mergeChallenge2(pb4client.JjcChallengeInfo value) {
      if (challenge2Builder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            challenge2_ != null &&
            challenge2_ != pb4client.JjcChallengeInfo.getDefaultInstance()) {
          challenge2_ =
            pb4client.JjcChallengeInfo.newBuilder(challenge2_).mergeFrom(value).buildPartial();
        } else {
          challenge2_ = value;
        }
        onChanged();
      } else {
        challenge2Builder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public Builder clearChallenge2() {
      if (challenge2Builder_ == null) {
        challenge2_ = null;
        onChanged();
      } else {
        challenge2Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public pb4client.JjcChallengeInfo.Builder getChallenge2Builder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getChallenge2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    public pb4client.JjcChallengeInfoOrBuilder getChallenge2OrBuilder() {
      if (challenge2Builder_ != null) {
        return challenge2Builder_.getMessageOrBuilder();
      } else {
        return challenge2_ == null ?
            pb4client.JjcChallengeInfo.getDefaultInstance() : challenge2_;
      }
    }
    /**
     * <pre>
     * 挑战对手排名2（中，数值中）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge2 = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> 
        getChallenge2FieldBuilder() {
      if (challenge2Builder_ == null) {
        challenge2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder>(
                getChallenge2(),
                getParentForChildren(),
                isClean());
        challenge2_ = null;
      }
      return challenge2Builder_;
    }

    private pb4client.JjcChallengeInfo challenge3_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> challenge3Builder_;
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public boolean hasChallenge3() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public pb4client.JjcChallengeInfo getChallenge3() {
      if (challenge3Builder_ == null) {
        return challenge3_ == null ? pb4client.JjcChallengeInfo.getDefaultInstance() : challenge3_;
      } else {
        return challenge3Builder_.getMessage();
      }
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public Builder setChallenge3(pb4client.JjcChallengeInfo value) {
      if (challenge3Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        challenge3_ = value;
        onChanged();
      } else {
        challenge3Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public Builder setChallenge3(
        pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (challenge3Builder_ == null) {
        challenge3_ = builderForValue.build();
        onChanged();
      } else {
        challenge3Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public Builder mergeChallenge3(pb4client.JjcChallengeInfo value) {
      if (challenge3Builder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800) &&
            challenge3_ != null &&
            challenge3_ != pb4client.JjcChallengeInfo.getDefaultInstance()) {
          challenge3_ =
            pb4client.JjcChallengeInfo.newBuilder(challenge3_).mergeFrom(value).buildPartial();
        } else {
          challenge3_ = value;
        }
        onChanged();
      } else {
        challenge3Builder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public Builder clearChallenge3() {
      if (challenge3Builder_ == null) {
        challenge3_ = null;
        onChanged();
      } else {
        challenge3Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public pb4client.JjcChallengeInfo.Builder getChallenge3Builder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getChallenge3FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    public pb4client.JjcChallengeInfoOrBuilder getChallenge3OrBuilder() {
      if (challenge3Builder_ != null) {
        return challenge3Builder_.getMessageOrBuilder();
      } else {
        return challenge3_ == null ?
            pb4client.JjcChallengeInfo.getDefaultInstance() : challenge3_;
      }
    }
    /**
     * <pre>
     * 挑战对手排名3（高，数值小）
     * </pre>
     *
     * <code>optional .client2server.JjcChallengeInfo challenge3 = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> 
        getChallenge3FieldBuilder() {
      if (challenge3Builder_ == null) {
        challenge3Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder>(
                getChallenge3(),
                getParentForChildren(),
                isClean());
        challenge3_ = null;
      }
      return challenge3Builder_;
    }

    private java.util.List<pb4client.HeroPos> heroInfo_ =
      java.util.Collections.emptyList();
    private void ensureHeroInfoIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        heroInfo_ = new java.util.ArrayList<pb4client.HeroPos>(heroInfo_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroPos, pb4client.HeroPos.Builder, pb4client.HeroPosOrBuilder> heroInfoBuilder_;

    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public java.util.List<pb4client.HeroPos> getHeroInfoList() {
      if (heroInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(heroInfo_);
      } else {
        return heroInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public int getHeroInfoCount() {
      if (heroInfoBuilder_ == null) {
        return heroInfo_.size();
      } else {
        return heroInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public pb4client.HeroPos getHeroInfo(int index) {
      if (heroInfoBuilder_ == null) {
        return heroInfo_.get(index);
      } else {
        return heroInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder setHeroInfo(
        int index, pb4client.HeroPos value) {
      if (heroInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroInfoIsMutable();
        heroInfo_.set(index, value);
        onChanged();
      } else {
        heroInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder setHeroInfo(
        int index, pb4client.HeroPos.Builder builderForValue) {
      if (heroInfoBuilder_ == null) {
        ensureHeroInfoIsMutable();
        heroInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        heroInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder addHeroInfo(pb4client.HeroPos value) {
      if (heroInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroInfoIsMutable();
        heroInfo_.add(value);
        onChanged();
      } else {
        heroInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder addHeroInfo(
        int index, pb4client.HeroPos value) {
      if (heroInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroInfoIsMutable();
        heroInfo_.add(index, value);
        onChanged();
      } else {
        heroInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder addHeroInfo(
        pb4client.HeroPos.Builder builderForValue) {
      if (heroInfoBuilder_ == null) {
        ensureHeroInfoIsMutable();
        heroInfo_.add(builderForValue.build());
        onChanged();
      } else {
        heroInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder addHeroInfo(
        int index, pb4client.HeroPos.Builder builderForValue) {
      if (heroInfoBuilder_ == null) {
        ensureHeroInfoIsMutable();
        heroInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        heroInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder addAllHeroInfo(
        java.lang.Iterable<? extends pb4client.HeroPos> values) {
      if (heroInfoBuilder_ == null) {
        ensureHeroInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroInfo_);
        onChanged();
      } else {
        heroInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder clearHeroInfo() {
      if (heroInfoBuilder_ == null) {
        heroInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        heroInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public Builder removeHeroInfo(int index) {
      if (heroInfoBuilder_ == null) {
        ensureHeroInfoIsMutable();
        heroInfo_.remove(index);
        onChanged();
      } else {
        heroInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public pb4client.HeroPos.Builder getHeroInfoBuilder(
        int index) {
      return getHeroInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public pb4client.HeroPosOrBuilder getHeroInfoOrBuilder(
        int index) {
      if (heroInfoBuilder_ == null) {
        return heroInfo_.get(index);  } else {
        return heroInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public java.util.List<? extends pb4client.HeroPosOrBuilder> 
         getHeroInfoOrBuilderList() {
      if (heroInfoBuilder_ != null) {
        return heroInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(heroInfo_);
      }
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public pb4client.HeroPos.Builder addHeroInfoBuilder() {
      return getHeroInfoFieldBuilder().addBuilder(
          pb4client.HeroPos.getDefaultInstance());
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public pb4client.HeroPos.Builder addHeroInfoBuilder(
        int index) {
      return getHeroInfoFieldBuilder().addBuilder(
          index, pb4client.HeroPos.getDefaultInstance());
    }
    /**
     * <pre>
     *英雄信息
     * </pre>
     *
     * <code>repeated .client2server.HeroPos heroInfo = 13;</code>
     */
    public java.util.List<pb4client.HeroPos.Builder> 
         getHeroInfoBuilderList() {
      return getHeroInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroPos, pb4client.HeroPos.Builder, pb4client.HeroPosOrBuilder> 
        getHeroInfoFieldBuilder() {
      if (heroInfoBuilder_ == null) {
        heroInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.HeroPos, pb4client.HeroPos.Builder, pb4client.HeroPosOrBuilder>(
                heroInfo_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        heroInfo_ = null;
      }
      return heroInfoBuilder_;
    }

    private java.util.List<java.lang.Integer> achievementExchangeRewards_ = java.util.Collections.emptyList();
    private void ensureAchievementExchangeRewardsIsMutable() {
      if (!((bitField0_ & 0x00002000) == 0x00002000)) {
        achievementExchangeRewards_ = new java.util.ArrayList<java.lang.Integer>(achievementExchangeRewards_);
        bitField0_ |= 0x00002000;
       }
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getAchievementExchangeRewardsList() {
      return java.util.Collections.unmodifiableList(achievementExchangeRewards_);
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public int getAchievementExchangeRewardsCount() {
      return achievementExchangeRewards_.size();
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public int getAchievementExchangeRewards(int index) {
      return achievementExchangeRewards_.get(index);
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public Builder setAchievementExchangeRewards(
        int index, int value) {
      ensureAchievementExchangeRewardsIsMutable();
      achievementExchangeRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public Builder addAchievementExchangeRewards(int value) {
      ensureAchievementExchangeRewardsIsMutable();
      achievementExchangeRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public Builder addAllAchievementExchangeRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAchievementExchangeRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, achievementExchangeRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取成就奖励的模版ID
     * </pre>
     *
     * <code>repeated int32 achievementExchangeRewards = 14;</code>
     */
    public Builder clearAchievementExchangeRewards() {
      achievementExchangeRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }

    private java.util.List<pb4client.JjcChallengeInfo> tenRank_ =
      java.util.Collections.emptyList();
    private void ensureTenRankIsMutable() {
      if (!((bitField0_ & 0x00004000) == 0x00004000)) {
        tenRank_ = new java.util.ArrayList<pb4client.JjcChallengeInfo>(tenRank_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> tenRankBuilder_;

    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public java.util.List<pb4client.JjcChallengeInfo> getTenRankList() {
      if (tenRankBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tenRank_);
      } else {
        return tenRankBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public int getTenRankCount() {
      if (tenRankBuilder_ == null) {
        return tenRank_.size();
      } else {
        return tenRankBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public pb4client.JjcChallengeInfo getTenRank(int index) {
      if (tenRankBuilder_ == null) {
        return tenRank_.get(index);
      } else {
        return tenRankBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder setTenRank(
        int index, pb4client.JjcChallengeInfo value) {
      if (tenRankBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTenRankIsMutable();
        tenRank_.set(index, value);
        onChanged();
      } else {
        tenRankBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder setTenRank(
        int index, pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (tenRankBuilder_ == null) {
        ensureTenRankIsMutable();
        tenRank_.set(index, builderForValue.build());
        onChanged();
      } else {
        tenRankBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder addTenRank(pb4client.JjcChallengeInfo value) {
      if (tenRankBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTenRankIsMutable();
        tenRank_.add(value);
        onChanged();
      } else {
        tenRankBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder addTenRank(
        int index, pb4client.JjcChallengeInfo value) {
      if (tenRankBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTenRankIsMutable();
        tenRank_.add(index, value);
        onChanged();
      } else {
        tenRankBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder addTenRank(
        pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (tenRankBuilder_ == null) {
        ensureTenRankIsMutable();
        tenRank_.add(builderForValue.build());
        onChanged();
      } else {
        tenRankBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder addTenRank(
        int index, pb4client.JjcChallengeInfo.Builder builderForValue) {
      if (tenRankBuilder_ == null) {
        ensureTenRankIsMutable();
        tenRank_.add(index, builderForValue.build());
        onChanged();
      } else {
        tenRankBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder addAllTenRank(
        java.lang.Iterable<? extends pb4client.JjcChallengeInfo> values) {
      if (tenRankBuilder_ == null) {
        ensureTenRankIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tenRank_);
        onChanged();
      } else {
        tenRankBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder clearTenRank() {
      if (tenRankBuilder_ == null) {
        tenRank_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        tenRankBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public Builder removeTenRank(int index) {
      if (tenRankBuilder_ == null) {
        ensureTenRankIsMutable();
        tenRank_.remove(index);
        onChanged();
      } else {
        tenRankBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public pb4client.JjcChallengeInfo.Builder getTenRankBuilder(
        int index) {
      return getTenRankFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public pb4client.JjcChallengeInfoOrBuilder getTenRankOrBuilder(
        int index) {
      if (tenRankBuilder_ == null) {
        return tenRank_.get(index);  } else {
        return tenRankBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public java.util.List<? extends pb4client.JjcChallengeInfoOrBuilder> 
         getTenRankOrBuilderList() {
      if (tenRankBuilder_ != null) {
        return tenRankBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tenRank_);
      }
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public pb4client.JjcChallengeInfo.Builder addTenRankBuilder() {
      return getTenRankFieldBuilder().addBuilder(
          pb4client.JjcChallengeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public pb4client.JjcChallengeInfo.Builder addTenRankBuilder(
        int index) {
      return getTenRankFieldBuilder().addBuilder(
          index, pb4client.JjcChallengeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 前十名
     * </pre>
     *
     * <code>repeated .client2server.JjcChallengeInfo tenRank = 15;</code>
     */
    public java.util.List<pb4client.JjcChallengeInfo.Builder> 
         getTenRankBuilderList() {
      return getTenRankFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder> 
        getTenRankFieldBuilder() {
      if (tenRankBuilder_ == null) {
        tenRankBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.JjcChallengeInfo, pb4client.JjcChallengeInfo.Builder, pb4client.JjcChallengeInfoOrBuilder>(
                tenRank_,
                ((bitField0_ & 0x00004000) == 0x00004000),
                getParentForChildren(),
                isClean());
        tenRank_ = null;
      }
      return tenRankBuilder_;
    }

    private int buyTimes_ ;
    /**
     * <pre>
     * 挑战购买次数
     * </pre>
     *
     * <code>optional int32 buyTimes = 16;</code>
     */
    public boolean hasBuyTimes() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     * 挑战购买次数
     * </pre>
     *
     * <code>optional int32 buyTimes = 16;</code>
     */
    public int getBuyTimes() {
      return buyTimes_;
    }
    /**
     * <pre>
     * 挑战购买次数
     * </pre>
     *
     * <code>optional int32 buyTimes = 16;</code>
     */
    public Builder setBuyTimes(int value) {
      bitField0_ |= 0x00008000;
      buyTimes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 挑战购买次数
     * </pre>
     *
     * <code>optional int32 buyTimes = 16;</code>
     */
    public Builder clearBuyTimes() {
      bitField0_ = (bitField0_ & ~0x00008000);
      buyTimes_ = 0;
      onChanged();
      return this;
    }

    private long nextRefreshTime_ ;
    /**
     * <pre>
     * 下一次挑战刷新时间
     * </pre>
     *
     * <code>optional int64 nextRefreshTime = 17;</code>
     */
    public boolean hasNextRefreshTime() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     * 下一次挑战刷新时间
     * </pre>
     *
     * <code>optional int64 nextRefreshTime = 17;</code>
     */
    public long getNextRefreshTime() {
      return nextRefreshTime_;
    }
    /**
     * <pre>
     * 下一次挑战刷新时间
     * </pre>
     *
     * <code>optional int64 nextRefreshTime = 17;</code>
     */
    public Builder setNextRefreshTime(long value) {
      bitField0_ |= 0x00010000;
      nextRefreshTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 下一次挑战刷新时间
     * </pre>
     *
     * <code>optional int64 nextRefreshTime = 17;</code>
     */
    public Builder clearNextRefreshTime() {
      bitField0_ = (bitField0_ & ~0x00010000);
      nextRefreshTime_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.JjcQueryInfoRt)
  }

  // @@protoc_insertion_point(class_scope:client2server.JjcQueryInfoRt)
  private static final pb4client.JjcQueryInfoRt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.JjcQueryInfoRt();
  }

  public static pb4client.JjcQueryInfoRt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<JjcQueryInfoRt>
      PARSER = new com.google.protobuf.AbstractParser<JjcQueryInfoRt>() {
    public JjcQueryInfoRt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new JjcQueryInfoRt(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JjcQueryInfoRt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JjcQueryInfoRt> getParserForType() {
    return PARSER;
  }

  public pb4client.JjcQueryInfoRt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

