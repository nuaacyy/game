// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *玩家城信息
 * </pre>
 *
 * Protobuf type {@code client2server.CastleCell}
 */
public  final class CastleCell extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.CastleCell)
    CastleCellOrBuilder {
  // Use CastleCell.newBuilder() to construct.
  private CastleCell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CastleCell() {
    vipLv_ = 0;
    photoId_ = 0;
    power_ = 0L;
    killer_ = 0L;
    buildingLv_ = 0;
    alliancePos_ = 0;
    office_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CastleCell(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            pb4client.PlayerNameInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = info_.toBuilder();
            }
            info_ = input.readMessage(pb4client.PlayerNameInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(info_);
              info_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 48: {
            bitField0_ |= 0x00000002;
            vipLv_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000004;
            photoId_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000008;
            power_ = input.readInt64();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000010;
            killer_ = input.readInt64();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000020;
            buildingLv_ = input.readInt32();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000040;
            alliancePos_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000080;
            office_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_CastleCell_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_CastleCell_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.CastleCell.class, pb4client.CastleCell.Builder.class);
  }

  private int bitField0_;
  public static final int INFO_FIELD_NUMBER = 1;
  private pb4client.PlayerNameInfo info_;
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>required .client2server.PlayerNameInfo info = 1;</code>
   */
  public boolean hasInfo() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>required .client2server.PlayerNameInfo info = 1;</code>
   */
  public pb4client.PlayerNameInfo getInfo() {
    return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
  }
  /**
   * <pre>
   *玩家名称信息
   * </pre>
   *
   * <code>required .client2server.PlayerNameInfo info = 1;</code>
   */
  public pb4client.PlayerNameInfoOrBuilder getInfoOrBuilder() {
    return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
  }

  public static final int VIPLV_FIELD_NUMBER = 6;
  private int vipLv_;
  /**
   * <pre>
   *vip等级
   * </pre>
   *
   * <code>required int32 vipLv = 6;</code>
   */
  public boolean hasVipLv() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *vip等级
   * </pre>
   *
   * <code>required int32 vipLv = 6;</code>
   */
  public int getVipLv() {
    return vipLv_;
  }

  public static final int PHOTOID_FIELD_NUMBER = 7;
  private int photoId_;
  /**
   * <pre>
   *头像ID
   * </pre>
   *
   * <code>required int32 photoId = 7;</code>
   */
  public boolean hasPhotoId() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *头像ID
   * </pre>
   *
   * <code>required int32 photoId = 7;</code>
   */
  public int getPhotoId() {
    return photoId_;
  }

  public static final int POWER_FIELD_NUMBER = 8;
  private long power_;
  /**
   * <pre>
   *实力值
   * </pre>
   *
   * <code>required int64 power = 8;</code>
   */
  public boolean hasPower() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *实力值
   * </pre>
   *
   * <code>required int64 power = 8;</code>
   */
  public long getPower() {
    return power_;
  }

  public static final int KILLER_FIELD_NUMBER = 9;
  private long killer_;
  /**
   * <pre>
   *击杀数
   * </pre>
   *
   * <code>required int64 killer = 9;</code>
   */
  public boolean hasKiller() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *击杀数
   * </pre>
   *
   * <code>required int64 killer = 9;</code>
   */
  public long getKiller() {
    return killer_;
  }

  public static final int BUILDINGLV_FIELD_NUMBER = 10;
  private int buildingLv_;
  /**
   * <pre>
   *大使馆等级
   * </pre>
   *
   * <code>optional int32 buildingLv = 10;</code>
   */
  public boolean hasBuildingLv() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *大使馆等级
   * </pre>
   *
   * <code>optional int32 buildingLv = 10;</code>
   */
  public int getBuildingLv() {
    return buildingLv_;
  }

  public static final int ALLIANCEPOS_FIELD_NUMBER = 11;
  private int alliancePos_;
  /**
   * <pre>
   *联盟阶级
   * </pre>
   *
   * <code>optional int32 alliancePos = 11;</code>
   */
  public boolean hasAlliancePos() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *联盟阶级
   * </pre>
   *
   * <code>optional int32 alliancePos = 11;</code>
   */
  public int getAlliancePos() {
    return alliancePos_;
  }

  public static final int OFFICE_FIELD_NUMBER = 12;
  private int office_;
  /**
   * <pre>
   *国家官职
   * </pre>
   *
   * <code>optional int32 office = 12;</code>
   */
  public boolean hasOffice() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *国家官职
   * </pre>
   *
   * <code>optional int32 office = 12;</code>
   */
  public int getOffice() {
    return office_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasInfo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasVipLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPhotoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPower()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasKiller()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getInfo().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(6, vipLv_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(7, photoId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(8, power_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt64(9, killer_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(10, buildingLv_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(11, alliancePos_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(12, office_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInfo());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, vipLv_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, photoId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, power_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, killer_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, buildingLv_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, alliancePos_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, office_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.CastleCell)) {
      return super.equals(obj);
    }
    pb4client.CastleCell other = (pb4client.CastleCell) obj;

    boolean result = true;
    result = result && (hasInfo() == other.hasInfo());
    if (hasInfo()) {
      result = result && getInfo()
          .equals(other.getInfo());
    }
    result = result && (hasVipLv() == other.hasVipLv());
    if (hasVipLv()) {
      result = result && (getVipLv()
          == other.getVipLv());
    }
    result = result && (hasPhotoId() == other.hasPhotoId());
    if (hasPhotoId()) {
      result = result && (getPhotoId()
          == other.getPhotoId());
    }
    result = result && (hasPower() == other.hasPower());
    if (hasPower()) {
      result = result && (getPower()
          == other.getPower());
    }
    result = result && (hasKiller() == other.hasKiller());
    if (hasKiller()) {
      result = result && (getKiller()
          == other.getKiller());
    }
    result = result && (hasBuildingLv() == other.hasBuildingLv());
    if (hasBuildingLv()) {
      result = result && (getBuildingLv()
          == other.getBuildingLv());
    }
    result = result && (hasAlliancePos() == other.hasAlliancePos());
    if (hasAlliancePos()) {
      result = result && (getAlliancePos()
          == other.getAlliancePos());
    }
    result = result && (hasOffice() == other.hasOffice());
    if (hasOffice()) {
      result = result && (getOffice()
          == other.getOffice());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInfo()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
    }
    if (hasVipLv()) {
      hash = (37 * hash) + VIPLV_FIELD_NUMBER;
      hash = (53 * hash) + getVipLv();
    }
    if (hasPhotoId()) {
      hash = (37 * hash) + PHOTOID_FIELD_NUMBER;
      hash = (53 * hash) + getPhotoId();
    }
    if (hasPower()) {
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
    }
    if (hasKiller()) {
      hash = (37 * hash) + KILLER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKiller());
    }
    if (hasBuildingLv()) {
      hash = (37 * hash) + BUILDINGLV_FIELD_NUMBER;
      hash = (53 * hash) + getBuildingLv();
    }
    if (hasAlliancePos()) {
      hash = (37 * hash) + ALLIANCEPOS_FIELD_NUMBER;
      hash = (53 * hash) + getAlliancePos();
    }
    if (hasOffice()) {
      hash = (37 * hash) + OFFICE_FIELD_NUMBER;
      hash = (53 * hash) + getOffice();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.CastleCell parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.CastleCell parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.CastleCell parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.CastleCell parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.CastleCell parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.CastleCell parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.CastleCell parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.CastleCell parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.CastleCell parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.CastleCell parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.CastleCell parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.CastleCell parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.CastleCell prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *玩家城信息
   * </pre>
   *
   * Protobuf type {@code client2server.CastleCell}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.CastleCell)
      pb4client.CastleCellOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_CastleCell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_CastleCell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.CastleCell.class, pb4client.CastleCell.Builder.class);
    }

    // Construct using pb4client.CastleCell.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (infoBuilder_ == null) {
        info_ = null;
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      vipLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      photoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      power_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      killer_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      buildingLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      alliancePos_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      office_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_CastleCell_descriptor;
    }

    public pb4client.CastleCell getDefaultInstanceForType() {
      return pb4client.CastleCell.getDefaultInstance();
    }

    public pb4client.CastleCell build() {
      pb4client.CastleCell result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.CastleCell buildPartial() {
      pb4client.CastleCell result = new pb4client.CastleCell(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (infoBuilder_ == null) {
        result.info_ = info_;
      } else {
        result.info_ = infoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.vipLv_ = vipLv_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.photoId_ = photoId_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.power_ = power_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.killer_ = killer_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.buildingLv_ = buildingLv_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.alliancePos_ = alliancePos_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.office_ = office_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.CastleCell) {
        return mergeFrom((pb4client.CastleCell)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.CastleCell other) {
      if (other == pb4client.CastleCell.getDefaultInstance()) return this;
      if (other.hasInfo()) {
        mergeInfo(other.getInfo());
      }
      if (other.hasVipLv()) {
        setVipLv(other.getVipLv());
      }
      if (other.hasPhotoId()) {
        setPhotoId(other.getPhotoId());
      }
      if (other.hasPower()) {
        setPower(other.getPower());
      }
      if (other.hasKiller()) {
        setKiller(other.getKiller());
      }
      if (other.hasBuildingLv()) {
        setBuildingLv(other.getBuildingLv());
      }
      if (other.hasAlliancePos()) {
        setAlliancePos(other.getAlliancePos());
      }
      if (other.hasOffice()) {
        setOffice(other.getOffice());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasInfo()) {
        return false;
      }
      if (!hasVipLv()) {
        return false;
      }
      if (!hasPhotoId()) {
        return false;
      }
      if (!hasPower()) {
        return false;
      }
      if (!hasKiller()) {
        return false;
      }
      if (!getInfo().isInitialized()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.CastleCell parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.CastleCell) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private pb4client.PlayerNameInfo info_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfo getInfo() {
      if (infoBuilder_ == null) {
        return info_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : info_;
      } else {
        return infoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder setInfo(pb4client.PlayerNameInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder setInfo(
        pb4client.PlayerNameInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        info_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder mergeInfo(pb4client.PlayerNameInfo value) {
      if (infoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            info_ != null &&
            info_ != pb4client.PlayerNameInfo.getDefaultInstance()) {
          info_ =
            pb4client.PlayerNameInfo.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }
        onChanged();
      } else {
        infoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        info_ = null;
        onChanged();
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfo.Builder getInfoBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    public pb4client.PlayerNameInfoOrBuilder getInfoOrBuilder() {
      if (infoBuilder_ != null) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        return info_ == null ?
            pb4client.PlayerNameInfo.getDefaultInstance() : info_;
      }
    }
    /**
     * <pre>
     *玩家名称信息
     * </pre>
     *
     * <code>required .client2server.PlayerNameInfo info = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder>(
                getInfo(),
                getParentForChildren(),
                isClean());
        info_ = null;
      }
      return infoBuilder_;
    }

    private int vipLv_ ;
    /**
     * <pre>
     *vip等级
     * </pre>
     *
     * <code>required int32 vipLv = 6;</code>
     */
    public boolean hasVipLv() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *vip等级
     * </pre>
     *
     * <code>required int32 vipLv = 6;</code>
     */
    public int getVipLv() {
      return vipLv_;
    }
    /**
     * <pre>
     *vip等级
     * </pre>
     *
     * <code>required int32 vipLv = 6;</code>
     */
    public Builder setVipLv(int value) {
      bitField0_ |= 0x00000002;
      vipLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *vip等级
     * </pre>
     *
     * <code>required int32 vipLv = 6;</code>
     */
    public Builder clearVipLv() {
      bitField0_ = (bitField0_ & ~0x00000002);
      vipLv_ = 0;
      onChanged();
      return this;
    }

    private int photoId_ ;
    /**
     * <pre>
     *头像ID
     * </pre>
     *
     * <code>required int32 photoId = 7;</code>
     */
    public boolean hasPhotoId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *头像ID
     * </pre>
     *
     * <code>required int32 photoId = 7;</code>
     */
    public int getPhotoId() {
      return photoId_;
    }
    /**
     * <pre>
     *头像ID
     * </pre>
     *
     * <code>required int32 photoId = 7;</code>
     */
    public Builder setPhotoId(int value) {
      bitField0_ |= 0x00000004;
      photoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *头像ID
     * </pre>
     *
     * <code>required int32 photoId = 7;</code>
     */
    public Builder clearPhotoId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      photoId_ = 0;
      onChanged();
      return this;
    }

    private long power_ ;
    /**
     * <pre>
     *实力值
     * </pre>
     *
     * <code>required int64 power = 8;</code>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *实力值
     * </pre>
     *
     * <code>required int64 power = 8;</code>
     */
    public long getPower() {
      return power_;
    }
    /**
     * <pre>
     *实力值
     * </pre>
     *
     * <code>required int64 power = 8;</code>
     */
    public Builder setPower(long value) {
      bitField0_ |= 0x00000008;
      power_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *实力值
     * </pre>
     *
     * <code>required int64 power = 8;</code>
     */
    public Builder clearPower() {
      bitField0_ = (bitField0_ & ~0x00000008);
      power_ = 0L;
      onChanged();
      return this;
    }

    private long killer_ ;
    /**
     * <pre>
     *击杀数
     * </pre>
     *
     * <code>required int64 killer = 9;</code>
     */
    public boolean hasKiller() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *击杀数
     * </pre>
     *
     * <code>required int64 killer = 9;</code>
     */
    public long getKiller() {
      return killer_;
    }
    /**
     * <pre>
     *击杀数
     * </pre>
     *
     * <code>required int64 killer = 9;</code>
     */
    public Builder setKiller(long value) {
      bitField0_ |= 0x00000010;
      killer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *击杀数
     * </pre>
     *
     * <code>required int64 killer = 9;</code>
     */
    public Builder clearKiller() {
      bitField0_ = (bitField0_ & ~0x00000010);
      killer_ = 0L;
      onChanged();
      return this;
    }

    private int buildingLv_ ;
    /**
     * <pre>
     *大使馆等级
     * </pre>
     *
     * <code>optional int32 buildingLv = 10;</code>
     */
    public boolean hasBuildingLv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *大使馆等级
     * </pre>
     *
     * <code>optional int32 buildingLv = 10;</code>
     */
    public int getBuildingLv() {
      return buildingLv_;
    }
    /**
     * <pre>
     *大使馆等级
     * </pre>
     *
     * <code>optional int32 buildingLv = 10;</code>
     */
    public Builder setBuildingLv(int value) {
      bitField0_ |= 0x00000020;
      buildingLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大使馆等级
     * </pre>
     *
     * <code>optional int32 buildingLv = 10;</code>
     */
    public Builder clearBuildingLv() {
      bitField0_ = (bitField0_ & ~0x00000020);
      buildingLv_ = 0;
      onChanged();
      return this;
    }

    private int alliancePos_ ;
    /**
     * <pre>
     *联盟阶级
     * </pre>
     *
     * <code>optional int32 alliancePos = 11;</code>
     */
    public boolean hasAlliancePos() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *联盟阶级
     * </pre>
     *
     * <code>optional int32 alliancePos = 11;</code>
     */
    public int getAlliancePos() {
      return alliancePos_;
    }
    /**
     * <pre>
     *联盟阶级
     * </pre>
     *
     * <code>optional int32 alliancePos = 11;</code>
     */
    public Builder setAlliancePos(int value) {
      bitField0_ |= 0x00000040;
      alliancePos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟阶级
     * </pre>
     *
     * <code>optional int32 alliancePos = 11;</code>
     */
    public Builder clearAlliancePos() {
      bitField0_ = (bitField0_ & ~0x00000040);
      alliancePos_ = 0;
      onChanged();
      return this;
    }

    private int office_ ;
    /**
     * <pre>
     *国家官职
     * </pre>
     *
     * <code>optional int32 office = 12;</code>
     */
    public boolean hasOffice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *国家官职
     * </pre>
     *
     * <code>optional int32 office = 12;</code>
     */
    public int getOffice() {
      return office_;
    }
    /**
     * <pre>
     *国家官职
     * </pre>
     *
     * <code>optional int32 office = 12;</code>
     */
    public Builder setOffice(int value) {
      bitField0_ |= 0x00000080;
      office_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *国家官职
     * </pre>
     *
     * <code>optional int32 office = 12;</code>
     */
    public Builder clearOffice() {
      bitField0_ = (bitField0_ & ~0x00000080);
      office_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.CastleCell)
  }

  // @@protoc_insertion_point(class_scope:client2server.CastleCell)
  private static final pb4client.CastleCell DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.CastleCell();
  }

  public static pb4client.CastleCell getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<CastleCell>
      PARSER = new com.google.protobuf.AbstractParser<CastleCell>() {
    public CastleCell parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new CastleCell(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CastleCell> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CastleCell> getParserForType() {
    return PARSER;
  }

  public pb4client.CastleCell getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

