// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

public interface JjcFightRtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:client2server.JjcFightRt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  boolean hasRt();
  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  int getRt();

  /**
   * <pre>
   * 战斗结果,同大地图战斗结果常量
   * </pre>
   *
   * <code>optional int32 fightResult = 2;</code>
   */
  boolean hasFightResult();
  /**
   * <pre>
   * 战斗结果,同大地图战斗结果常量
   * </pre>
   *
   * <code>optional int32 fightResult = 2;</code>
   */
  int getFightResult();

  /**
   * <pre>
   * 玩家战斗后排名
   * </pre>
   *
   * <code>optional int32 nowRank = 3;</code>
   */
  boolean hasNowRank();
  /**
   * <pre>
   * 玩家战斗后排名
   * </pre>
   *
   * <code>optional int32 nowRank = 3;</code>
   */
  int getNowRank();

  /**
   * <pre>
   * 历史最高排名
   * </pre>
   *
   * <code>optional int32 maxRank = 4;</code>
   */
  boolean hasMaxRank();
  /**
   * <pre>
   * 历史最高排名
   * </pre>
   *
   * <code>optional int32 maxRank = 4;</code>
   */
  int getMaxRank();

  /**
   * <pre>
   * 本日积分
   * </pre>
   *
   * <code>optional int32 score = 5;</code>
   */
  boolean hasScore();
  /**
   * <pre>
   * 本日积分
   * </pre>
   *
   * <code>optional int32 score = 5;</code>
   */
  int getScore();

  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 7;</code>
   */
  boolean hasChallenge1();
  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 7;</code>
   */
  pb4client.JjcChallengeInfo getChallenge1();
  /**
   * <pre>
   * 挑战对手排名1（低，数值大）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge1 = 7;</code>
   */
  pb4client.JjcChallengeInfoOrBuilder getChallenge1OrBuilder();

  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 8;</code>
   */
  boolean hasChallenge2();
  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 8;</code>
   */
  pb4client.JjcChallengeInfo getChallenge2();
  /**
   * <pre>
   * 挑战对手排名2（中，数值中）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge2 = 8;</code>
   */
  pb4client.JjcChallengeInfoOrBuilder getChallenge2OrBuilder();

  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 9;</code>
   */
  boolean hasChallenge3();
  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 9;</code>
   */
  pb4client.JjcChallengeInfo getChallenge3();
  /**
   * <pre>
   * 挑战对手排名3（高，数值小）
   * </pre>
   *
   * <code>optional .client2server.JjcChallengeInfo challenge3 = 9;</code>
   */
  pb4client.JjcChallengeInfoOrBuilder getChallenge3OrBuilder();

  /**
   * <pre>
   *战报内容
   * </pre>
   *
   * <code>repeated .client2server.HeroFightReport report = 10;</code>
   */
  java.util.List<pb4client.HeroFightReport> 
      getReportList();
  /**
   * <pre>
   *战报内容
   * </pre>
   *
   * <code>repeated .client2server.HeroFightReport report = 10;</code>
   */
  pb4client.HeroFightReport getReport(int index);
  /**
   * <pre>
   *战报内容
   * </pre>
   *
   * <code>repeated .client2server.HeroFightReport report = 10;</code>
   */
  int getReportCount();
  /**
   * <pre>
   *战报内容
   * </pre>
   *
   * <code>repeated .client2server.HeroFightReport report = 10;</code>
   */
  java.util.List<? extends pb4client.HeroFightReportOrBuilder> 
      getReportOrBuilderList();
  /**
   * <pre>
   *战报内容
   * </pre>
   *
   * <code>repeated .client2server.HeroFightReport report = 10;</code>
   */
  pb4client.HeroFightReportOrBuilder getReportOrBuilder(
      int index);

  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport heroInfos = 11;</code>
   */
  java.util.List<pb4client.HeroInfoForReport> 
      getHeroInfosList();
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport heroInfos = 11;</code>
   */
  pb4client.HeroInfoForReport getHeroInfos(int index);
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport heroInfos = 11;</code>
   */
  int getHeroInfosCount();
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport heroInfos = 11;</code>
   */
  java.util.List<? extends pb4client.HeroInfoForReportOrBuilder> 
      getHeroInfosOrBuilderList();
  /**
   * <pre>
   *英雄信息
   * </pre>
   *
   * <code>repeated .client2server.HeroInfoForReport heroInfos = 11;</code>
   */
  pb4client.HeroInfoForReportOrBuilder getHeroInfosOrBuilder(
      int index);

  /**
   * <pre>
   * 打架之前的排名
   * </pre>
   *
   * <code>optional int32 oldRank = 12;</code>
   */
  boolean hasOldRank();
  /**
   * <pre>
   * 打架之前的排名
   * </pre>
   *
   * <code>optional int32 oldRank = 12;</code>
   */
  int getOldRank();

  /**
   * <pre>
   * 获得经验
   * </pre>
   *
   * <code>optional int64 exp = 13;</code>
   */
  boolean hasExp();
  /**
   * <pre>
   * 获得经验
   * </pre>
   *
   * <code>optional int64 exp = 13;</code>
   */
  long getExp();

  /**
   * <pre>
   * 竞技场战斗获得竞技币
   * </pre>
   *
   * <code>optional string coinArenaNum = 14;</code>
   */
  boolean hasCoinArenaNum();
  /**
   * <pre>
   * 竞技场战斗获得竞技币
   * </pre>
   *
   * <code>optional string coinArenaNum = 14;</code>
   */
  java.lang.String getCoinArenaNum();
  /**
   * <pre>
   * 竞技场战斗获得竞技币
   * </pre>
   *
   * <code>optional string coinArenaNum = 14;</code>
   */
  com.google.protobuf.ByteString
      getCoinArenaNumBytes();

  /**
   * <pre>
   *达成的战斗星数条件
   * </pre>
   *
   * <code>repeated int32 star = 15;</code>
   */
  java.util.List<java.lang.Integer> getStarList();
  /**
   * <pre>
   *达成的战斗星数条件
   * </pre>
   *
   * <code>repeated int32 star = 15;</code>
   */
  int getStarCount();
  /**
   * <pre>
   *达成的战斗星数条件
   * </pre>
   *
   * <code>repeated int32 star = 15;</code>
   */
  int getStar(int index);
}
