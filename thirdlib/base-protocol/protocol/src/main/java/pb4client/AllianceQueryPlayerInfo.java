// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.AllianceQueryPlayerInfo}
 */
public  final class AllianceQueryPlayerInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.AllianceQueryPlayerInfo)
    AllianceQueryPlayerInfoOrBuilder {
  // Use AllianceQueryPlayerInfo.newBuilder() to construct.
  private AllianceQueryPlayerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllianceQueryPlayerInfo() {
    id_ = 0L;
    name_ = "";
    photoProtoId_ = 0;
    ctrbtTotal_ = 0L;
    ctrbtWeek_ = 0L;
    mertsWeek_ = 0L;
    powerValue_ = 0L;
    landX_ = 0;
    landY_ = 0;
    fightValue_ = 0;
    isOnline_ = 0;
    positions_ = java.util.Collections.emptyList();
    tsLandX_ = 0;
    tsLandY_ = 0;
    occupiedFlag_ = 0;
    makeOverTime_ = 0L;
    nickName_ = "";
    weekResearchHonor_ = 0;
    weekHonor_ = 0;
    weekShalu_ = 0;
    weekXisheng_ = 0;
    weekPohuai_ = 0;
    lastOffTime_ = 0;
    mapAreaNo_ = 0;
    monsterScore_ = 0;
    lastGetMonsterScore_ = 0;
    currentPos_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AllianceQueryPlayerInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            id_ = input.readInt64();
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            name_ = bs;
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            photoProtoId_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            ctrbtTotal_ = input.readInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            ctrbtWeek_ = input.readInt64();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            mertsWeek_ = input.readInt64();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            powerValue_ = input.readInt64();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            landX_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            landY_ = input.readInt32();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            fightValue_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000400;
            isOnline_ = input.readInt32();
            break;
          }
          case 104: {
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000800;
            }
            positions_.add(input.readInt32());
            break;
          }
          case 106: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              positions_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 112: {
            bitField0_ |= 0x00000800;
            tsLandX_ = input.readInt32();
            break;
          }
          case 120: {
            bitField0_ |= 0x00001000;
            tsLandY_ = input.readInt32();
            break;
          }
          case 128: {
            bitField0_ |= 0x00002000;
            occupiedFlag_ = input.readInt32();
            break;
          }
          case 136: {
            bitField0_ |= 0x00004000;
            makeOverTime_ = input.readInt64();
            break;
          }
          case 146: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00008000;
            nickName_ = bs;
            break;
          }
          case 152: {
            bitField0_ |= 0x00010000;
            weekResearchHonor_ = input.readInt32();
            break;
          }
          case 160: {
            bitField0_ |= 0x00020000;
            weekHonor_ = input.readInt32();
            break;
          }
          case 168: {
            bitField0_ |= 0x00040000;
            weekShalu_ = input.readInt32();
            break;
          }
          case 176: {
            bitField0_ |= 0x00080000;
            weekXisheng_ = input.readInt32();
            break;
          }
          case 184: {
            bitField0_ |= 0x00100000;
            weekPohuai_ = input.readInt32();
            break;
          }
          case 192: {
            bitField0_ |= 0x00200000;
            lastOffTime_ = input.readInt32();
            break;
          }
          case 200: {
            bitField0_ |= 0x00400000;
            mapAreaNo_ = input.readInt32();
            break;
          }
          case 208: {
            bitField0_ |= 0x00800000;
            monsterScore_ = input.readInt32();
            break;
          }
          case 216: {
            bitField0_ |= 0x01000000;
            lastGetMonsterScore_ = input.readInt32();
            break;
          }
          case 224: {
            bitField0_ |= 0x02000000;
            currentPos_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryPlayerInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryPlayerInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.AllianceQueryPlayerInfo.class, pb4client.AllianceQueryPlayerInfo.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   *玩家ID
   * </pre>
   *
   * <code>required int64 id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *玩家ID
   * </pre>
   *
   * <code>required int64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   *玩家名称
   * </pre>
   *
   * <code>required string name = 2;</code>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *玩家名称
   * </pre>
   *
   * <code>required string name = 2;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        name_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *玩家名称
   * </pre>
   *
   * <code>required string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PHOTOPROTOID_FIELD_NUMBER = 3;
  private int photoProtoId_;
  /**
   * <pre>
   *头像模版ID
   * </pre>
   *
   * <code>required int32 photoProtoId = 3;</code>
   */
  public boolean hasPhotoProtoId() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *头像模版ID
   * </pre>
   *
   * <code>required int32 photoProtoId = 3;</code>
   */
  public int getPhotoProtoId() {
    return photoProtoId_;
  }

  public static final int CTRBTTOTAL_FIELD_NUMBER = 4;
  private long ctrbtTotal_;
  /**
   * <pre>
   *总贡献
   * </pre>
   *
   * <code>required int64 ctrbtTotal = 4;</code>
   */
  public boolean hasCtrbtTotal() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *总贡献
   * </pre>
   *
   * <code>required int64 ctrbtTotal = 4;</code>
   */
  public long getCtrbtTotal() {
    return ctrbtTotal_;
  }

  public static final int CTRBTWEEK_FIELD_NUMBER = 5;
  private long ctrbtWeek_;
  /**
   * <pre>
   *本周贡献
   * </pre>
   *
   * <code>required int64 ctrbtWeek = 5;</code>
   */
  public boolean hasCtrbtWeek() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *本周贡献
   * </pre>
   *
   * <code>required int64 ctrbtWeek = 5;</code>
   */
  public long getCtrbtWeek() {
    return ctrbtWeek_;
  }

  public static final int MERTSWEEK_FIELD_NUMBER = 6;
  private long mertsWeek_;
  /**
   * <pre>
   *本周功勋
   * </pre>
   *
   * <code>required int64 mertsWeek = 6;</code>
   */
  public boolean hasMertsWeek() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *本周功勋
   * </pre>
   *
   * <code>required int64 mertsWeek = 6;</code>
   */
  public long getMertsWeek() {
    return mertsWeek_;
  }

  public static final int POWERVALUE_FIELD_NUMBER = 7;
  private long powerValue_;
  /**
   * <pre>
   *玩家战斗力
   * </pre>
   *
   * <code>required int64 powerValue = 7;</code>
   */
  public boolean hasPowerValue() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *玩家战斗力
   * </pre>
   *
   * <code>required int64 powerValue = 7;</code>
   */
  public long getPowerValue() {
    return powerValue_;
  }

  public static final int LANDX_FIELD_NUMBER = 9;
  private int landX_;
  /**
   * <pre>
   *坐标X
   * </pre>
   *
   * <code>required int32 landX = 9;</code>
   */
  public boolean hasLandX() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *坐标X
   * </pre>
   *
   * <code>required int32 landX = 9;</code>
   */
  public int getLandX() {
    return landX_;
  }

  public static final int LANDY_FIELD_NUMBER = 10;
  private int landY_;
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>required int32 landY = 10;</code>
   */
  public boolean hasLandY() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>required int32 landY = 10;</code>
   */
  public int getLandY() {
    return landY_;
  }

  public static final int FIGHTVALUE_FIELD_NUMBER = 11;
  private int fightValue_;
  /**
   * <pre>
   *=====废弃字段
   * </pre>
   *
   * <code>required int32 fightValue = 11;</code>
   */
  public boolean hasFightValue() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *=====废弃字段
   * </pre>
   *
   * <code>required int32 fightValue = 11;</code>
   */
  public int getFightValue() {
    return fightValue_;
  }

  public static final int ISONLINE_FIELD_NUMBER = 12;
  private int isOnline_;
  /**
   * <pre>
   *玩家是否在线：0-不在线；1-在线
   * </pre>
   *
   * <code>required int32 isOnline = 12;</code>
   */
  public boolean hasIsOnline() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   *玩家是否在线：0-不在线；1-在线
   * </pre>
   *
   * <code>required int32 isOnline = 12;</code>
   */
  public int getIsOnline() {
    return isOnline_;
  }

  public static final int POSITIONS_FIELD_NUMBER = 13;
  private java.util.List<java.lang.Integer> positions_;
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 13;</code>
   */
  public java.util.List<java.lang.Integer>
      getPositionsList() {
    return positions_;
  }
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 13;</code>
   */
  public int getPositionsCount() {
    return positions_.size();
  }
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 13;</code>
   */
  public int getPositions(int index) {
    return positions_.get(index);
  }

  public static final int TSLANDX_FIELD_NUMBER = 14;
  private int tsLandX_;
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标X
   * </pre>
   *
   * <code>optional int32 tsLandX = 14;</code>
   */
  public boolean hasTsLandX() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标X
   * </pre>
   *
   * <code>optional int32 tsLandX = 14;</code>
   */
  public int getTsLandX() {
    return tsLandX_;
  }

  public static final int TSLANDY_FIELD_NUMBER = 15;
  private int tsLandY_;
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标Y
   * </pre>
   *
   * <code>optional int32 tsLandY = 15;</code>
   */
  public boolean hasTsLandY() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标Y
   * </pre>
   *
   * <code>optional int32 tsLandY = 15;</code>
   */
  public int getTsLandY() {
    return tsLandY_;
  }

  public static final int OCCUPIEDFLAG_FIELD_NUMBER = 16;
  private int occupiedFlag_;
  /**
   * <pre>
   *是否沦陷标志位：1-沦陷；0-没有沦陷
   * </pre>
   *
   * <code>required int32 occupiedFlag = 16;</code>
   */
  public boolean hasOccupiedFlag() {
    return ((bitField0_ & 0x00002000) == 0x00002000);
  }
  /**
   * <pre>
   *是否沦陷标志位：1-沦陷；0-没有沦陷
   * </pre>
   *
   * <code>required int32 occupiedFlag = 16;</code>
   */
  public int getOccupiedFlag() {
    return occupiedFlag_;
  }

  public static final int MAKEOVERTIME_FIELD_NUMBER = 17;
  private long makeOverTime_;
  /**
   * <pre>
   *如果是盟主会有执行盟主转让操作的时间戳
   * </pre>
   *
   * <code>optional int64 makeOverTime = 17;</code>
   */
  public boolean hasMakeOverTime() {
    return ((bitField0_ & 0x00004000) == 0x00004000);
  }
  /**
   * <pre>
   *如果是盟主会有执行盟主转让操作的时间戳
   * </pre>
   *
   * <code>optional int64 makeOverTime = 17;</code>
   */
  public long getMakeOverTime() {
    return makeOverTime_;
  }

  public static final int NICKNAME_FIELD_NUMBER = 18;
  private volatile java.lang.Object nickName_;
  /**
   * <pre>
   *玩家昵称
   * </pre>
   *
   * <code>required string nickName = 18;</code>
   */
  public boolean hasNickName() {
    return ((bitField0_ & 0x00008000) == 0x00008000);
  }
  /**
   * <pre>
   *玩家昵称
   * </pre>
   *
   * <code>required string nickName = 18;</code>
   */
  public java.lang.String getNickName() {
    java.lang.Object ref = nickName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        nickName_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   *玩家昵称
   * </pre>
   *
   * <code>required string nickName = 18;</code>
   */
  public com.google.protobuf.ByteString
      getNickNameBytes() {
    java.lang.Object ref = nickName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nickName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WEEKRESEARCHHONOR_FIELD_NUMBER = 19;
  private int weekResearchHonor_;
  /**
   * <pre>
   *本周捐赠科技获得的贡献
   * </pre>
   *
   * <code>required int32 weekResearchHonor = 19;</code>
   */
  public boolean hasWeekResearchHonor() {
    return ((bitField0_ & 0x00010000) == 0x00010000);
  }
  /**
   * <pre>
   *本周捐赠科技获得的贡献
   * </pre>
   *
   * <code>required int32 weekResearchHonor = 19;</code>
   */
  public int getWeekResearchHonor() {
    return weekResearchHonor_;
  }

  public static final int WEEKHONOR_FIELD_NUMBER = 20;
  private int weekHonor_;
  /**
   * <pre>
   *本周获得的贡献
   * </pre>
   *
   * <code>required int32 weekHonor = 20;</code>
   */
  public boolean hasWeekHonor() {
    return ((bitField0_ & 0x00020000) == 0x00020000);
  }
  /**
   * <pre>
   *本周获得的贡献
   * </pre>
   *
   * <code>required int32 weekHonor = 20;</code>
   */
  public int getWeekHonor() {
    return weekHonor_;
  }

  public static final int WEEKSHALU_FIELD_NUMBER = 21;
  private int weekShalu_;
  /**
   * <pre>
   *本周杀戮值
   * </pre>
   *
   * <code>required int32 weekShalu = 21;</code>
   */
  public boolean hasWeekShalu() {
    return ((bitField0_ & 0x00040000) == 0x00040000);
  }
  /**
   * <pre>
   *本周杀戮值
   * </pre>
   *
   * <code>required int32 weekShalu = 21;</code>
   */
  public int getWeekShalu() {
    return weekShalu_;
  }

  public static final int WEEKXISHENG_FIELD_NUMBER = 22;
  private int weekXisheng_;
  /**
   * <pre>
   *本周牺牲值
   * </pre>
   *
   * <code>required int32 weekXisheng = 22;</code>
   */
  public boolean hasWeekXisheng() {
    return ((bitField0_ & 0x00080000) == 0x00080000);
  }
  /**
   * <pre>
   *本周牺牲值
   * </pre>
   *
   * <code>required int32 weekXisheng = 22;</code>
   */
  public int getWeekXisheng() {
    return weekXisheng_;
  }

  public static final int WEEKPOHUAI_FIELD_NUMBER = 23;
  private int weekPohuai_;
  /**
   * <pre>
   *本周破坏值
   * </pre>
   *
   * <code>required int32 weekPohuai = 23;</code>
   */
  public boolean hasWeekPohuai() {
    return ((bitField0_ & 0x00100000) == 0x00100000);
  }
  /**
   * <pre>
   *本周破坏值
   * </pre>
   *
   * <code>required int32 weekPohuai = 23;</code>
   */
  public int getWeekPohuai() {
    return weekPohuai_;
  }

  public static final int LASTOFFTIME_FIELD_NUMBER = 24;
  private int lastOffTime_;
  /**
   * <pre>
   * 上次离线时间
   * </pre>
   *
   * <code>required int32 lastOffTime = 24;</code>
   */
  public boolean hasLastOffTime() {
    return ((bitField0_ & 0x00200000) == 0x00200000);
  }
  /**
   * <pre>
   * 上次离线时间
   * </pre>
   *
   * <code>required int32 lastOffTime = 24;</code>
   */
  public int getLastOffTime() {
    return lastOffTime_;
  }

  public static final int MAPAREANO_FIELD_NUMBER = 25;
  private int mapAreaNo_;
  /**
   * <pre>
   * 玩家所属的服务器编号
   * </pre>
   *
   * <code>required int32 mapAreaNo = 25;</code>
   */
  public boolean hasMapAreaNo() {
    return ((bitField0_ & 0x00400000) == 0x00400000);
  }
  /**
   * <pre>
   * 玩家所属的服务器编号
   * </pre>
   *
   * <code>required int32 mapAreaNo = 25;</code>
   */
  public int getMapAreaNo() {
    return mapAreaNo_;
  }

  public static final int MONSTERSCORE_FIELD_NUMBER = 26;
  private int monsterScore_;
  /**
   * <pre>
   * 本日获得魔物积分
   * </pre>
   *
   * <code>required int32 monsterScore = 26;</code>
   */
  public boolean hasMonsterScore() {
    return ((bitField0_ & 0x00800000) == 0x00800000);
  }
  /**
   * <pre>
   * 本日获得魔物积分
   * </pre>
   *
   * <code>required int32 monsterScore = 26;</code>
   */
  public int getMonsterScore() {
    return monsterScore_;
  }

  public static final int LASTGETMONSTERSCORE_FIELD_NUMBER = 27;
  private int lastGetMonsterScore_;
  /**
   * <pre>
   * 上次获得魔物积分时间
   * </pre>
   *
   * <code>required int32 lastGetMonsterScore = 27;</code>
   */
  public boolean hasLastGetMonsterScore() {
    return ((bitField0_ & 0x01000000) == 0x01000000);
  }
  /**
   * <pre>
   * 上次获得魔物积分时间
   * </pre>
   *
   * <code>required int32 lastGetMonsterScore = 27;</code>
   */
  public int getLastGetMonsterScore() {
    return lastGetMonsterScore_;
  }

  public static final int CURRENTPOS_FIELD_NUMBER = 28;
  private int currentPos_;
  /**
   * <pre>
   *当前官职
   * </pre>
   *
   * <code>optional int32 currentPos = 28;</code>
   */
  public boolean hasCurrentPos() {
    return ((bitField0_ & 0x02000000) == 0x02000000);
  }
  /**
   * <pre>
   *当前官职
   * </pre>
   *
   * <code>optional int32 currentPos = 28;</code>
   */
  public int getCurrentPos() {
    return currentPos_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPhotoProtoId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCtrbtTotal()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasCtrbtWeek()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMertsWeek()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPowerValue()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLandX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLandY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightValue()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsOnline()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasOccupiedFlag()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNickName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWeekResearchHonor()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWeekHonor()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWeekShalu()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWeekXisheng()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWeekPohuai()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLastOffTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMapAreaNo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMonsterScore()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasLastGetMonsterScore()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, photoProtoId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt64(4, ctrbtTotal_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt64(5, ctrbtWeek_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt64(6, mertsWeek_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(7, powerValue_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(9, landX_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(10, landY_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(11, fightValue_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(12, isOnline_);
    }
    for (int i = 0; i < positions_.size(); i++) {
      output.writeInt32(13, positions_.get(i));
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeInt32(14, tsLandX_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeInt32(15, tsLandY_);
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      output.writeInt32(16, occupiedFlag_);
    }
    if (((bitField0_ & 0x00004000) == 0x00004000)) {
      output.writeInt64(17, makeOverTime_);
    }
    if (((bitField0_ & 0x00008000) == 0x00008000)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, nickName_);
    }
    if (((bitField0_ & 0x00010000) == 0x00010000)) {
      output.writeInt32(19, weekResearchHonor_);
    }
    if (((bitField0_ & 0x00020000) == 0x00020000)) {
      output.writeInt32(20, weekHonor_);
    }
    if (((bitField0_ & 0x00040000) == 0x00040000)) {
      output.writeInt32(21, weekShalu_);
    }
    if (((bitField0_ & 0x00080000) == 0x00080000)) {
      output.writeInt32(22, weekXisheng_);
    }
    if (((bitField0_ & 0x00100000) == 0x00100000)) {
      output.writeInt32(23, weekPohuai_);
    }
    if (((bitField0_ & 0x00200000) == 0x00200000)) {
      output.writeInt32(24, lastOffTime_);
    }
    if (((bitField0_ & 0x00400000) == 0x00400000)) {
      output.writeInt32(25, mapAreaNo_);
    }
    if (((bitField0_ & 0x00800000) == 0x00800000)) {
      output.writeInt32(26, monsterScore_);
    }
    if (((bitField0_ & 0x01000000) == 0x01000000)) {
      output.writeInt32(27, lastGetMonsterScore_);
    }
    if (((bitField0_ & 0x02000000) == 0x02000000)) {
      output.writeInt32(28, currentPos_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, photoProtoId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, ctrbtTotal_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, ctrbtWeek_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, mertsWeek_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, powerValue_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, landX_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, landY_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, fightValue_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, isOnline_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < positions_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(positions_.get(i));
      }
      size += dataSize;
      size += 1 * getPositionsList().size();
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, tsLandX_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, tsLandY_);
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, occupiedFlag_);
    }
    if (((bitField0_ & 0x00004000) == 0x00004000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(17, makeOverTime_);
    }
    if (((bitField0_ & 0x00008000) == 0x00008000)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, nickName_);
    }
    if (((bitField0_ & 0x00010000) == 0x00010000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, weekResearchHonor_);
    }
    if (((bitField0_ & 0x00020000) == 0x00020000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(20, weekHonor_);
    }
    if (((bitField0_ & 0x00040000) == 0x00040000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(21, weekShalu_);
    }
    if (((bitField0_ & 0x00080000) == 0x00080000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, weekXisheng_);
    }
    if (((bitField0_ & 0x00100000) == 0x00100000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(23, weekPohuai_);
    }
    if (((bitField0_ & 0x00200000) == 0x00200000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(24, lastOffTime_);
    }
    if (((bitField0_ & 0x00400000) == 0x00400000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(25, mapAreaNo_);
    }
    if (((bitField0_ & 0x00800000) == 0x00800000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(26, monsterScore_);
    }
    if (((bitField0_ & 0x01000000) == 0x01000000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(27, lastGetMonsterScore_);
    }
    if (((bitField0_ & 0x02000000) == 0x02000000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(28, currentPos_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.AllianceQueryPlayerInfo)) {
      return super.equals(obj);
    }
    pb4client.AllianceQueryPlayerInfo other = (pb4client.AllianceQueryPlayerInfo) obj;

    boolean result = true;
    result = result && (hasId() == other.hasId());
    if (hasId()) {
      result = result && (getId()
          == other.getId());
    }
    result = result && (hasName() == other.hasName());
    if (hasName()) {
      result = result && getName()
          .equals(other.getName());
    }
    result = result && (hasPhotoProtoId() == other.hasPhotoProtoId());
    if (hasPhotoProtoId()) {
      result = result && (getPhotoProtoId()
          == other.getPhotoProtoId());
    }
    result = result && (hasCtrbtTotal() == other.hasCtrbtTotal());
    if (hasCtrbtTotal()) {
      result = result && (getCtrbtTotal()
          == other.getCtrbtTotal());
    }
    result = result && (hasCtrbtWeek() == other.hasCtrbtWeek());
    if (hasCtrbtWeek()) {
      result = result && (getCtrbtWeek()
          == other.getCtrbtWeek());
    }
    result = result && (hasMertsWeek() == other.hasMertsWeek());
    if (hasMertsWeek()) {
      result = result && (getMertsWeek()
          == other.getMertsWeek());
    }
    result = result && (hasPowerValue() == other.hasPowerValue());
    if (hasPowerValue()) {
      result = result && (getPowerValue()
          == other.getPowerValue());
    }
    result = result && (hasLandX() == other.hasLandX());
    if (hasLandX()) {
      result = result && (getLandX()
          == other.getLandX());
    }
    result = result && (hasLandY() == other.hasLandY());
    if (hasLandY()) {
      result = result && (getLandY()
          == other.getLandY());
    }
    result = result && (hasFightValue() == other.hasFightValue());
    if (hasFightValue()) {
      result = result && (getFightValue()
          == other.getFightValue());
    }
    result = result && (hasIsOnline() == other.hasIsOnline());
    if (hasIsOnline()) {
      result = result && (getIsOnline()
          == other.getIsOnline());
    }
    result = result && getPositionsList()
        .equals(other.getPositionsList());
    result = result && (hasTsLandX() == other.hasTsLandX());
    if (hasTsLandX()) {
      result = result && (getTsLandX()
          == other.getTsLandX());
    }
    result = result && (hasTsLandY() == other.hasTsLandY());
    if (hasTsLandY()) {
      result = result && (getTsLandY()
          == other.getTsLandY());
    }
    result = result && (hasOccupiedFlag() == other.hasOccupiedFlag());
    if (hasOccupiedFlag()) {
      result = result && (getOccupiedFlag()
          == other.getOccupiedFlag());
    }
    result = result && (hasMakeOverTime() == other.hasMakeOverTime());
    if (hasMakeOverTime()) {
      result = result && (getMakeOverTime()
          == other.getMakeOverTime());
    }
    result = result && (hasNickName() == other.hasNickName());
    if (hasNickName()) {
      result = result && getNickName()
          .equals(other.getNickName());
    }
    result = result && (hasWeekResearchHonor() == other.hasWeekResearchHonor());
    if (hasWeekResearchHonor()) {
      result = result && (getWeekResearchHonor()
          == other.getWeekResearchHonor());
    }
    result = result && (hasWeekHonor() == other.hasWeekHonor());
    if (hasWeekHonor()) {
      result = result && (getWeekHonor()
          == other.getWeekHonor());
    }
    result = result && (hasWeekShalu() == other.hasWeekShalu());
    if (hasWeekShalu()) {
      result = result && (getWeekShalu()
          == other.getWeekShalu());
    }
    result = result && (hasWeekXisheng() == other.hasWeekXisheng());
    if (hasWeekXisheng()) {
      result = result && (getWeekXisheng()
          == other.getWeekXisheng());
    }
    result = result && (hasWeekPohuai() == other.hasWeekPohuai());
    if (hasWeekPohuai()) {
      result = result && (getWeekPohuai()
          == other.getWeekPohuai());
    }
    result = result && (hasLastOffTime() == other.hasLastOffTime());
    if (hasLastOffTime()) {
      result = result && (getLastOffTime()
          == other.getLastOffTime());
    }
    result = result && (hasMapAreaNo() == other.hasMapAreaNo());
    if (hasMapAreaNo()) {
      result = result && (getMapAreaNo()
          == other.getMapAreaNo());
    }
    result = result && (hasMonsterScore() == other.hasMonsterScore());
    if (hasMonsterScore()) {
      result = result && (getMonsterScore()
          == other.getMonsterScore());
    }
    result = result && (hasLastGetMonsterScore() == other.hasLastGetMonsterScore());
    if (hasLastGetMonsterScore()) {
      result = result && (getLastGetMonsterScore()
          == other.getLastGetMonsterScore());
    }
    result = result && (hasCurrentPos() == other.hasCurrentPos());
    if (hasCurrentPos()) {
      result = result && (getCurrentPos()
          == other.getCurrentPos());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
    }
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasPhotoProtoId()) {
      hash = (37 * hash) + PHOTOPROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getPhotoProtoId();
    }
    if (hasCtrbtTotal()) {
      hash = (37 * hash) + CTRBTTOTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCtrbtTotal());
    }
    if (hasCtrbtWeek()) {
      hash = (37 * hash) + CTRBTWEEK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCtrbtWeek());
    }
    if (hasMertsWeek()) {
      hash = (37 * hash) + MERTSWEEK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMertsWeek());
    }
    if (hasPowerValue()) {
      hash = (37 * hash) + POWERVALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPowerValue());
    }
    if (hasLandX()) {
      hash = (37 * hash) + LANDX_FIELD_NUMBER;
      hash = (53 * hash) + getLandX();
    }
    if (hasLandY()) {
      hash = (37 * hash) + LANDY_FIELD_NUMBER;
      hash = (53 * hash) + getLandY();
    }
    if (hasFightValue()) {
      hash = (37 * hash) + FIGHTVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getFightValue();
    }
    if (hasIsOnline()) {
      hash = (37 * hash) + ISONLINE_FIELD_NUMBER;
      hash = (53 * hash) + getIsOnline();
    }
    if (getPositionsCount() > 0) {
      hash = (37 * hash) + POSITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPositionsList().hashCode();
    }
    if (hasTsLandX()) {
      hash = (37 * hash) + TSLANDX_FIELD_NUMBER;
      hash = (53 * hash) + getTsLandX();
    }
    if (hasTsLandY()) {
      hash = (37 * hash) + TSLANDY_FIELD_NUMBER;
      hash = (53 * hash) + getTsLandY();
    }
    if (hasOccupiedFlag()) {
      hash = (37 * hash) + OCCUPIEDFLAG_FIELD_NUMBER;
      hash = (53 * hash) + getOccupiedFlag();
    }
    if (hasMakeOverTime()) {
      hash = (37 * hash) + MAKEOVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMakeOverTime());
    }
    if (hasNickName()) {
      hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNickName().hashCode();
    }
    if (hasWeekResearchHonor()) {
      hash = (37 * hash) + WEEKRESEARCHHONOR_FIELD_NUMBER;
      hash = (53 * hash) + getWeekResearchHonor();
    }
    if (hasWeekHonor()) {
      hash = (37 * hash) + WEEKHONOR_FIELD_NUMBER;
      hash = (53 * hash) + getWeekHonor();
    }
    if (hasWeekShalu()) {
      hash = (37 * hash) + WEEKSHALU_FIELD_NUMBER;
      hash = (53 * hash) + getWeekShalu();
    }
    if (hasWeekXisheng()) {
      hash = (37 * hash) + WEEKXISHENG_FIELD_NUMBER;
      hash = (53 * hash) + getWeekXisheng();
    }
    if (hasWeekPohuai()) {
      hash = (37 * hash) + WEEKPOHUAI_FIELD_NUMBER;
      hash = (53 * hash) + getWeekPohuai();
    }
    if (hasLastOffTime()) {
      hash = (37 * hash) + LASTOFFTIME_FIELD_NUMBER;
      hash = (53 * hash) + getLastOffTime();
    }
    if (hasMapAreaNo()) {
      hash = (37 * hash) + MAPAREANO_FIELD_NUMBER;
      hash = (53 * hash) + getMapAreaNo();
    }
    if (hasMonsterScore()) {
      hash = (37 * hash) + MONSTERSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getMonsterScore();
    }
    if (hasLastGetMonsterScore()) {
      hash = (37 * hash) + LASTGETMONSTERSCORE_FIELD_NUMBER;
      hash = (53 * hash) + getLastGetMonsterScore();
    }
    if (hasCurrentPos()) {
      hash = (37 * hash) + CURRENTPOS_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPos();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceQueryPlayerInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryPlayerInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryPlayerInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.AllianceQueryPlayerInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.AllianceQueryPlayerInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.AllianceQueryPlayerInfo)
      pb4client.AllianceQueryPlayerInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.AllianceQueryPlayerInfo.class, pb4client.AllianceQueryPlayerInfo.Builder.class);
    }

    // Construct using pb4client.AllianceQueryPlayerInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      photoProtoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      ctrbtTotal_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      ctrbtWeek_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      mertsWeek_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      powerValue_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      landX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      landY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      fightValue_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      isOnline_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      tsLandX_ = 0;
      bitField0_ = (bitField0_ & ~0x00001000);
      tsLandY_ = 0;
      bitField0_ = (bitField0_ & ~0x00002000);
      occupiedFlag_ = 0;
      bitField0_ = (bitField0_ & ~0x00004000);
      makeOverTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00008000);
      nickName_ = "";
      bitField0_ = (bitField0_ & ~0x00010000);
      weekResearchHonor_ = 0;
      bitField0_ = (bitField0_ & ~0x00020000);
      weekHonor_ = 0;
      bitField0_ = (bitField0_ & ~0x00040000);
      weekShalu_ = 0;
      bitField0_ = (bitField0_ & ~0x00080000);
      weekXisheng_ = 0;
      bitField0_ = (bitField0_ & ~0x00100000);
      weekPohuai_ = 0;
      bitField0_ = (bitField0_ & ~0x00200000);
      lastOffTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00400000);
      mapAreaNo_ = 0;
      bitField0_ = (bitField0_ & ~0x00800000);
      monsterScore_ = 0;
      bitField0_ = (bitField0_ & ~0x01000000);
      lastGetMonsterScore_ = 0;
      bitField0_ = (bitField0_ & ~0x02000000);
      currentPos_ = 0;
      bitField0_ = (bitField0_ & ~0x04000000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryPlayerInfo_descriptor;
    }

    public pb4client.AllianceQueryPlayerInfo getDefaultInstanceForType() {
      return pb4client.AllianceQueryPlayerInfo.getDefaultInstance();
    }

    public pb4client.AllianceQueryPlayerInfo build() {
      pb4client.AllianceQueryPlayerInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.AllianceQueryPlayerInfo buildPartial() {
      pb4client.AllianceQueryPlayerInfo result = new pb4client.AllianceQueryPlayerInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.id_ = id_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.photoProtoId_ = photoProtoId_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.ctrbtTotal_ = ctrbtTotal_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.ctrbtWeek_ = ctrbtWeek_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.mertsWeek_ = mertsWeek_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.powerValue_ = powerValue_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.landX_ = landX_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.landY_ = landY_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.fightValue_ = fightValue_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      result.isOnline_ = isOnline_;
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.positions_ = positions_;
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00000800;
      }
      result.tsLandX_ = tsLandX_;
      if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
        to_bitField0_ |= 0x00001000;
      }
      result.tsLandY_ = tsLandY_;
      if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
        to_bitField0_ |= 0x00002000;
      }
      result.occupiedFlag_ = occupiedFlag_;
      if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
        to_bitField0_ |= 0x00004000;
      }
      result.makeOverTime_ = makeOverTime_;
      if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
        to_bitField0_ |= 0x00008000;
      }
      result.nickName_ = nickName_;
      if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
        to_bitField0_ |= 0x00010000;
      }
      result.weekResearchHonor_ = weekResearchHonor_;
      if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
        to_bitField0_ |= 0x00020000;
      }
      result.weekHonor_ = weekHonor_;
      if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
        to_bitField0_ |= 0x00040000;
      }
      result.weekShalu_ = weekShalu_;
      if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
        to_bitField0_ |= 0x00080000;
      }
      result.weekXisheng_ = weekXisheng_;
      if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
        to_bitField0_ |= 0x00100000;
      }
      result.weekPohuai_ = weekPohuai_;
      if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
        to_bitField0_ |= 0x00200000;
      }
      result.lastOffTime_ = lastOffTime_;
      if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
        to_bitField0_ |= 0x00400000;
      }
      result.mapAreaNo_ = mapAreaNo_;
      if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
        to_bitField0_ |= 0x00800000;
      }
      result.monsterScore_ = monsterScore_;
      if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
        to_bitField0_ |= 0x01000000;
      }
      result.lastGetMonsterScore_ = lastGetMonsterScore_;
      if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
        to_bitField0_ |= 0x02000000;
      }
      result.currentPos_ = currentPos_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.AllianceQueryPlayerInfo) {
        return mergeFrom((pb4client.AllianceQueryPlayerInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.AllianceQueryPlayerInfo other) {
      if (other == pb4client.AllianceQueryPlayerInfo.getDefaultInstance()) return this;
      if (other.hasId()) {
        setId(other.getId());
      }
      if (other.hasName()) {
        bitField0_ |= 0x00000002;
        name_ = other.name_;
        onChanged();
      }
      if (other.hasPhotoProtoId()) {
        setPhotoProtoId(other.getPhotoProtoId());
      }
      if (other.hasCtrbtTotal()) {
        setCtrbtTotal(other.getCtrbtTotal());
      }
      if (other.hasCtrbtWeek()) {
        setCtrbtWeek(other.getCtrbtWeek());
      }
      if (other.hasMertsWeek()) {
        setMertsWeek(other.getMertsWeek());
      }
      if (other.hasPowerValue()) {
        setPowerValue(other.getPowerValue());
      }
      if (other.hasLandX()) {
        setLandX(other.getLandX());
      }
      if (other.hasLandY()) {
        setLandY(other.getLandY());
      }
      if (other.hasFightValue()) {
        setFightValue(other.getFightValue());
      }
      if (other.hasIsOnline()) {
        setIsOnline(other.getIsOnline());
      }
      if (!other.positions_.isEmpty()) {
        if (positions_.isEmpty()) {
          positions_ = other.positions_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensurePositionsIsMutable();
          positions_.addAll(other.positions_);
        }
        onChanged();
      }
      if (other.hasTsLandX()) {
        setTsLandX(other.getTsLandX());
      }
      if (other.hasTsLandY()) {
        setTsLandY(other.getTsLandY());
      }
      if (other.hasOccupiedFlag()) {
        setOccupiedFlag(other.getOccupiedFlag());
      }
      if (other.hasMakeOverTime()) {
        setMakeOverTime(other.getMakeOverTime());
      }
      if (other.hasNickName()) {
        bitField0_ |= 0x00010000;
        nickName_ = other.nickName_;
        onChanged();
      }
      if (other.hasWeekResearchHonor()) {
        setWeekResearchHonor(other.getWeekResearchHonor());
      }
      if (other.hasWeekHonor()) {
        setWeekHonor(other.getWeekHonor());
      }
      if (other.hasWeekShalu()) {
        setWeekShalu(other.getWeekShalu());
      }
      if (other.hasWeekXisheng()) {
        setWeekXisheng(other.getWeekXisheng());
      }
      if (other.hasWeekPohuai()) {
        setWeekPohuai(other.getWeekPohuai());
      }
      if (other.hasLastOffTime()) {
        setLastOffTime(other.getLastOffTime());
      }
      if (other.hasMapAreaNo()) {
        setMapAreaNo(other.getMapAreaNo());
      }
      if (other.hasMonsterScore()) {
        setMonsterScore(other.getMonsterScore());
      }
      if (other.hasLastGetMonsterScore()) {
        setLastGetMonsterScore(other.getLastGetMonsterScore());
      }
      if (other.hasCurrentPos()) {
        setCurrentPos(other.getCurrentPos());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasId()) {
        return false;
      }
      if (!hasName()) {
        return false;
      }
      if (!hasPhotoProtoId()) {
        return false;
      }
      if (!hasCtrbtTotal()) {
        return false;
      }
      if (!hasCtrbtWeek()) {
        return false;
      }
      if (!hasMertsWeek()) {
        return false;
      }
      if (!hasPowerValue()) {
        return false;
      }
      if (!hasLandX()) {
        return false;
      }
      if (!hasLandY()) {
        return false;
      }
      if (!hasFightValue()) {
        return false;
      }
      if (!hasIsOnline()) {
        return false;
      }
      if (!hasOccupiedFlag()) {
        return false;
      }
      if (!hasNickName()) {
        return false;
      }
      if (!hasWeekResearchHonor()) {
        return false;
      }
      if (!hasWeekHonor()) {
        return false;
      }
      if (!hasWeekShalu()) {
        return false;
      }
      if (!hasWeekXisheng()) {
        return false;
      }
      if (!hasWeekPohuai()) {
        return false;
      }
      if (!hasLastOffTime()) {
        return false;
      }
      if (!hasMapAreaNo()) {
        return false;
      }
      if (!hasMonsterScore()) {
        return false;
      }
      if (!hasLastGetMonsterScore()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.AllianceQueryPlayerInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.AllianceQueryPlayerInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public Builder setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public Builder clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value;
      onChanged();
      return this;
    }

    private int photoProtoId_ ;
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>required int32 photoProtoId = 3;</code>
     */
    public boolean hasPhotoProtoId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>required int32 photoProtoId = 3;</code>
     */
    public int getPhotoProtoId() {
      return photoProtoId_;
    }
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>required int32 photoProtoId = 3;</code>
     */
    public Builder setPhotoProtoId(int value) {
      bitField0_ |= 0x00000004;
      photoProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>required int32 photoProtoId = 3;</code>
     */
    public Builder clearPhotoProtoId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      photoProtoId_ = 0;
      onChanged();
      return this;
    }

    private long ctrbtTotal_ ;
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>required int64 ctrbtTotal = 4;</code>
     */
    public boolean hasCtrbtTotal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>required int64 ctrbtTotal = 4;</code>
     */
    public long getCtrbtTotal() {
      return ctrbtTotal_;
    }
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>required int64 ctrbtTotal = 4;</code>
     */
    public Builder setCtrbtTotal(long value) {
      bitField0_ |= 0x00000008;
      ctrbtTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>required int64 ctrbtTotal = 4;</code>
     */
    public Builder clearCtrbtTotal() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ctrbtTotal_ = 0L;
      onChanged();
      return this;
    }

    private long ctrbtWeek_ ;
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>required int64 ctrbtWeek = 5;</code>
     */
    public boolean hasCtrbtWeek() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>required int64 ctrbtWeek = 5;</code>
     */
    public long getCtrbtWeek() {
      return ctrbtWeek_;
    }
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>required int64 ctrbtWeek = 5;</code>
     */
    public Builder setCtrbtWeek(long value) {
      bitField0_ |= 0x00000010;
      ctrbtWeek_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>required int64 ctrbtWeek = 5;</code>
     */
    public Builder clearCtrbtWeek() {
      bitField0_ = (bitField0_ & ~0x00000010);
      ctrbtWeek_ = 0L;
      onChanged();
      return this;
    }

    private long mertsWeek_ ;
    /**
     * <pre>
     *本周功勋
     * </pre>
     *
     * <code>required int64 mertsWeek = 6;</code>
     */
    public boolean hasMertsWeek() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *本周功勋
     * </pre>
     *
     * <code>required int64 mertsWeek = 6;</code>
     */
    public long getMertsWeek() {
      return mertsWeek_;
    }
    /**
     * <pre>
     *本周功勋
     * </pre>
     *
     * <code>required int64 mertsWeek = 6;</code>
     */
    public Builder setMertsWeek(long value) {
      bitField0_ |= 0x00000020;
      mertsWeek_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周功勋
     * </pre>
     *
     * <code>required int64 mertsWeek = 6;</code>
     */
    public Builder clearMertsWeek() {
      bitField0_ = (bitField0_ & ~0x00000020);
      mertsWeek_ = 0L;
      onChanged();
      return this;
    }

    private long powerValue_ ;
    /**
     * <pre>
     *玩家战斗力
     * </pre>
     *
     * <code>required int64 powerValue = 7;</code>
     */
    public boolean hasPowerValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *玩家战斗力
     * </pre>
     *
     * <code>required int64 powerValue = 7;</code>
     */
    public long getPowerValue() {
      return powerValue_;
    }
    /**
     * <pre>
     *玩家战斗力
     * </pre>
     *
     * <code>required int64 powerValue = 7;</code>
     */
    public Builder setPowerValue(long value) {
      bitField0_ |= 0x00000040;
      powerValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家战斗力
     * </pre>
     *
     * <code>required int64 powerValue = 7;</code>
     */
    public Builder clearPowerValue() {
      bitField0_ = (bitField0_ & ~0x00000040);
      powerValue_ = 0L;
      onChanged();
      return this;
    }

    private int landX_ ;
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>required int32 landX = 9;</code>
     */
    public boolean hasLandX() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>required int32 landX = 9;</code>
     */
    public int getLandX() {
      return landX_;
    }
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>required int32 landX = 9;</code>
     */
    public Builder setLandX(int value) {
      bitField0_ |= 0x00000080;
      landX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>required int32 landX = 9;</code>
     */
    public Builder clearLandX() {
      bitField0_ = (bitField0_ & ~0x00000080);
      landX_ = 0;
      onChanged();
      return this;
    }

    private int landY_ ;
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 landY = 10;</code>
     */
    public boolean hasLandY() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 landY = 10;</code>
     */
    public int getLandY() {
      return landY_;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 landY = 10;</code>
     */
    public Builder setLandY(int value) {
      bitField0_ |= 0x00000100;
      landY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 landY = 10;</code>
     */
    public Builder clearLandY() {
      bitField0_ = (bitField0_ & ~0x00000100);
      landY_ = 0;
      onChanged();
      return this;
    }

    private int fightValue_ ;
    /**
     * <pre>
     *=====废弃字段
     * </pre>
     *
     * <code>required int32 fightValue = 11;</code>
     */
    public boolean hasFightValue() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *=====废弃字段
     * </pre>
     *
     * <code>required int32 fightValue = 11;</code>
     */
    public int getFightValue() {
      return fightValue_;
    }
    /**
     * <pre>
     *=====废弃字段
     * </pre>
     *
     * <code>required int32 fightValue = 11;</code>
     */
    public Builder setFightValue(int value) {
      bitField0_ |= 0x00000200;
      fightValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *=====废弃字段
     * </pre>
     *
     * <code>required int32 fightValue = 11;</code>
     */
    public Builder clearFightValue() {
      bitField0_ = (bitField0_ & ~0x00000200);
      fightValue_ = 0;
      onChanged();
      return this;
    }

    private int isOnline_ ;
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>required int32 isOnline = 12;</code>
     */
    public boolean hasIsOnline() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>required int32 isOnline = 12;</code>
     */
    public int getIsOnline() {
      return isOnline_;
    }
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>required int32 isOnline = 12;</code>
     */
    public Builder setIsOnline(int value) {
      bitField0_ |= 0x00000400;
      isOnline_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>required int32 isOnline = 12;</code>
     */
    public Builder clearIsOnline() {
      bitField0_ = (bitField0_ & ~0x00000400);
      isOnline_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> positions_ = java.util.Collections.emptyList();
    private void ensurePositionsIsMutable() {
      if (!((bitField0_ & 0x00000800) == 0x00000800)) {
        positions_ = new java.util.ArrayList<java.lang.Integer>(positions_);
        bitField0_ |= 0x00000800;
       }
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getPositionsList() {
      return java.util.Collections.unmodifiableList(positions_);
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public int getPositionsCount() {
      return positions_.size();
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public int getPositions(int index) {
      return positions_.get(index);
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public Builder setPositions(
        int index, int value) {
      ensurePositionsIsMutable();
      positions_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public Builder addPositions(int value) {
      ensurePositionsIsMutable();
      positions_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public Builder addAllPositions(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePositionsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, positions_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 13;</code>
     */
    public Builder clearPositions() {
      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }

    private int tsLandX_ ;
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>optional int32 tsLandX = 14;</code>
     */
    public boolean hasTsLandX() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>optional int32 tsLandX = 14;</code>
     */
    public int getTsLandX() {
      return tsLandX_;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>optional int32 tsLandX = 14;</code>
     */
    public Builder setTsLandX(int value) {
      bitField0_ |= 0x00001000;
      tsLandX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>optional int32 tsLandX = 14;</code>
     */
    public Builder clearTsLandX() {
      bitField0_ = (bitField0_ & ~0x00001000);
      tsLandX_ = 0;
      onChanged();
      return this;
    }

    private int tsLandY_ ;
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>optional int32 tsLandY = 15;</code>
     */
    public boolean hasTsLandY() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>optional int32 tsLandY = 15;</code>
     */
    public int getTsLandY() {
      return tsLandY_;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>optional int32 tsLandY = 15;</code>
     */
    public Builder setTsLandY(int value) {
      bitField0_ |= 0x00002000;
      tsLandY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>optional int32 tsLandY = 15;</code>
     */
    public Builder clearTsLandY() {
      bitField0_ = (bitField0_ & ~0x00002000);
      tsLandY_ = 0;
      onChanged();
      return this;
    }

    private int occupiedFlag_ ;
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>required int32 occupiedFlag = 16;</code>
     */
    public boolean hasOccupiedFlag() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>required int32 occupiedFlag = 16;</code>
     */
    public int getOccupiedFlag() {
      return occupiedFlag_;
    }
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>required int32 occupiedFlag = 16;</code>
     */
    public Builder setOccupiedFlag(int value) {
      bitField0_ |= 0x00004000;
      occupiedFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>required int32 occupiedFlag = 16;</code>
     */
    public Builder clearOccupiedFlag() {
      bitField0_ = (bitField0_ & ~0x00004000);
      occupiedFlag_ = 0;
      onChanged();
      return this;
    }

    private long makeOverTime_ ;
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>optional int64 makeOverTime = 17;</code>
     */
    public boolean hasMakeOverTime() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>optional int64 makeOverTime = 17;</code>
     */
    public long getMakeOverTime() {
      return makeOverTime_;
    }
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>optional int64 makeOverTime = 17;</code>
     */
    public Builder setMakeOverTime(long value) {
      bitField0_ |= 0x00008000;
      makeOverTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>optional int64 makeOverTime = 17;</code>
     */
    public Builder clearMakeOverTime() {
      bitField0_ = (bitField0_ & ~0x00008000);
      makeOverTime_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object nickName_ = "";
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public boolean hasNickName() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public java.lang.String getNickName() {
      java.lang.Object ref = nickName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nickName_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      java.lang.Object ref = nickName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public Builder setNickName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
      nickName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public Builder clearNickName() {
      bitField0_ = (bitField0_ & ~0x00010000);
      nickName_ = getDefaultInstance().getNickName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>required string nickName = 18;</code>
     */
    public Builder setNickNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
      nickName_ = value;
      onChanged();
      return this;
    }

    private int weekResearchHonor_ ;
    /**
     * <pre>
     *本周捐赠科技获得的贡献
     * </pre>
     *
     * <code>required int32 weekResearchHonor = 19;</code>
     */
    public boolean hasWeekResearchHonor() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *本周捐赠科技获得的贡献
     * </pre>
     *
     * <code>required int32 weekResearchHonor = 19;</code>
     */
    public int getWeekResearchHonor() {
      return weekResearchHonor_;
    }
    /**
     * <pre>
     *本周捐赠科技获得的贡献
     * </pre>
     *
     * <code>required int32 weekResearchHonor = 19;</code>
     */
    public Builder setWeekResearchHonor(int value) {
      bitField0_ |= 0x00020000;
      weekResearchHonor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周捐赠科技获得的贡献
     * </pre>
     *
     * <code>required int32 weekResearchHonor = 19;</code>
     */
    public Builder clearWeekResearchHonor() {
      bitField0_ = (bitField0_ & ~0x00020000);
      weekResearchHonor_ = 0;
      onChanged();
      return this;
    }

    private int weekHonor_ ;
    /**
     * <pre>
     *本周获得的贡献
     * </pre>
     *
     * <code>required int32 weekHonor = 20;</code>
     */
    public boolean hasWeekHonor() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *本周获得的贡献
     * </pre>
     *
     * <code>required int32 weekHonor = 20;</code>
     */
    public int getWeekHonor() {
      return weekHonor_;
    }
    /**
     * <pre>
     *本周获得的贡献
     * </pre>
     *
     * <code>required int32 weekHonor = 20;</code>
     */
    public Builder setWeekHonor(int value) {
      bitField0_ |= 0x00040000;
      weekHonor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周获得的贡献
     * </pre>
     *
     * <code>required int32 weekHonor = 20;</code>
     */
    public Builder clearWeekHonor() {
      bitField0_ = (bitField0_ & ~0x00040000);
      weekHonor_ = 0;
      onChanged();
      return this;
    }

    private int weekShalu_ ;
    /**
     * <pre>
     *本周杀戮值
     * </pre>
     *
     * <code>required int32 weekShalu = 21;</code>
     */
    public boolean hasWeekShalu() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *本周杀戮值
     * </pre>
     *
     * <code>required int32 weekShalu = 21;</code>
     */
    public int getWeekShalu() {
      return weekShalu_;
    }
    /**
     * <pre>
     *本周杀戮值
     * </pre>
     *
     * <code>required int32 weekShalu = 21;</code>
     */
    public Builder setWeekShalu(int value) {
      bitField0_ |= 0x00080000;
      weekShalu_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周杀戮值
     * </pre>
     *
     * <code>required int32 weekShalu = 21;</code>
     */
    public Builder clearWeekShalu() {
      bitField0_ = (bitField0_ & ~0x00080000);
      weekShalu_ = 0;
      onChanged();
      return this;
    }

    private int weekXisheng_ ;
    /**
     * <pre>
     *本周牺牲值
     * </pre>
     *
     * <code>required int32 weekXisheng = 22;</code>
     */
    public boolean hasWeekXisheng() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *本周牺牲值
     * </pre>
     *
     * <code>required int32 weekXisheng = 22;</code>
     */
    public int getWeekXisheng() {
      return weekXisheng_;
    }
    /**
     * <pre>
     *本周牺牲值
     * </pre>
     *
     * <code>required int32 weekXisheng = 22;</code>
     */
    public Builder setWeekXisheng(int value) {
      bitField0_ |= 0x00100000;
      weekXisheng_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周牺牲值
     * </pre>
     *
     * <code>required int32 weekXisheng = 22;</code>
     */
    public Builder clearWeekXisheng() {
      bitField0_ = (bitField0_ & ~0x00100000);
      weekXisheng_ = 0;
      onChanged();
      return this;
    }

    private int weekPohuai_ ;
    /**
     * <pre>
     *本周破坏值
     * </pre>
     *
     * <code>required int32 weekPohuai = 23;</code>
     */
    public boolean hasWeekPohuai() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *本周破坏值
     * </pre>
     *
     * <code>required int32 weekPohuai = 23;</code>
     */
    public int getWeekPohuai() {
      return weekPohuai_;
    }
    /**
     * <pre>
     *本周破坏值
     * </pre>
     *
     * <code>required int32 weekPohuai = 23;</code>
     */
    public Builder setWeekPohuai(int value) {
      bitField0_ |= 0x00200000;
      weekPohuai_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周破坏值
     * </pre>
     *
     * <code>required int32 weekPohuai = 23;</code>
     */
    public Builder clearWeekPohuai() {
      bitField0_ = (bitField0_ & ~0x00200000);
      weekPohuai_ = 0;
      onChanged();
      return this;
    }

    private int lastOffTime_ ;
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>required int32 lastOffTime = 24;</code>
     */
    public boolean hasLastOffTime() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>required int32 lastOffTime = 24;</code>
     */
    public int getLastOffTime() {
      return lastOffTime_;
    }
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>required int32 lastOffTime = 24;</code>
     */
    public Builder setLastOffTime(int value) {
      bitField0_ |= 0x00400000;
      lastOffTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>required int32 lastOffTime = 24;</code>
     */
    public Builder clearLastOffTime() {
      bitField0_ = (bitField0_ & ~0x00400000);
      lastOffTime_ = 0;
      onChanged();
      return this;
    }

    private int mapAreaNo_ ;
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>required int32 mapAreaNo = 25;</code>
     */
    public boolean hasMapAreaNo() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>required int32 mapAreaNo = 25;</code>
     */
    public int getMapAreaNo() {
      return mapAreaNo_;
    }
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>required int32 mapAreaNo = 25;</code>
     */
    public Builder setMapAreaNo(int value) {
      bitField0_ |= 0x00800000;
      mapAreaNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>required int32 mapAreaNo = 25;</code>
     */
    public Builder clearMapAreaNo() {
      bitField0_ = (bitField0_ & ~0x00800000);
      mapAreaNo_ = 0;
      onChanged();
      return this;
    }

    private int monsterScore_ ;
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>required int32 monsterScore = 26;</code>
     */
    public boolean hasMonsterScore() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>required int32 monsterScore = 26;</code>
     */
    public int getMonsterScore() {
      return monsterScore_;
    }
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>required int32 monsterScore = 26;</code>
     */
    public Builder setMonsterScore(int value) {
      bitField0_ |= 0x01000000;
      monsterScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>required int32 monsterScore = 26;</code>
     */
    public Builder clearMonsterScore() {
      bitField0_ = (bitField0_ & ~0x01000000);
      monsterScore_ = 0;
      onChanged();
      return this;
    }

    private int lastGetMonsterScore_ ;
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>required int32 lastGetMonsterScore = 27;</code>
     */
    public boolean hasLastGetMonsterScore() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>required int32 lastGetMonsterScore = 27;</code>
     */
    public int getLastGetMonsterScore() {
      return lastGetMonsterScore_;
    }
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>required int32 lastGetMonsterScore = 27;</code>
     */
    public Builder setLastGetMonsterScore(int value) {
      bitField0_ |= 0x02000000;
      lastGetMonsterScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>required int32 lastGetMonsterScore = 27;</code>
     */
    public Builder clearLastGetMonsterScore() {
      bitField0_ = (bitField0_ & ~0x02000000);
      lastGetMonsterScore_ = 0;
      onChanged();
      return this;
    }

    private int currentPos_ ;
    /**
     * <pre>
     *当前官职
     * </pre>
     *
     * <code>optional int32 currentPos = 28;</code>
     */
    public boolean hasCurrentPos() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <pre>
     *当前官职
     * </pre>
     *
     * <code>optional int32 currentPos = 28;</code>
     */
    public int getCurrentPos() {
      return currentPos_;
    }
    /**
     * <pre>
     *当前官职
     * </pre>
     *
     * <code>optional int32 currentPos = 28;</code>
     */
    public Builder setCurrentPos(int value) {
      bitField0_ |= 0x04000000;
      currentPos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前官职
     * </pre>
     *
     * <code>optional int32 currentPos = 28;</code>
     */
    public Builder clearCurrentPos() {
      bitField0_ = (bitField0_ & ~0x04000000);
      currentPos_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.AllianceQueryPlayerInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.AllianceQueryPlayerInfo)
  private static final pb4client.AllianceQueryPlayerInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.AllianceQueryPlayerInfo();
  }

  public static pb4client.AllianceQueryPlayerInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<AllianceQueryPlayerInfo>
      PARSER = new com.google.protobuf.AbstractParser<AllianceQueryPlayerInfo>() {
    public AllianceQueryPlayerInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllianceQueryPlayerInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AllianceQueryPlayerInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllianceQueryPlayerInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.AllianceQueryPlayerInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

