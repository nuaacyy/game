// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

public interface AllianceQueryWithStateRtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:client2server.AllianceQueryWithStateRt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  boolean hasRt();
  /**
   * <pre>
   *返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  int getRt();

  /**
   * <pre>
   *简要的联盟列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceQueryWithStateInfo alliances = 2;</code>
   */
  java.util.List<pb4client.AllianceQueryWithStateInfo> 
      getAlliancesList();
  /**
   * <pre>
   *简要的联盟列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceQueryWithStateInfo alliances = 2;</code>
   */
  pb4client.AllianceQueryWithStateInfo getAlliances(int index);
  /**
   * <pre>
   *简要的联盟列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceQueryWithStateInfo alliances = 2;</code>
   */
  int getAlliancesCount();
  /**
   * <pre>
   *简要的联盟列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceQueryWithStateInfo alliances = 2;</code>
   */
  java.util.List<? extends pb4client.AllianceQueryWithStateInfoOrBuilder> 
      getAlliancesOrBuilderList();
  /**
   * <pre>
   *简要的联盟列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceQueryWithStateInfo alliances = 2;</code>
   */
  pb4client.AllianceQueryWithStateInfoOrBuilder getAlliancesOrBuilder(
      int index);
}
