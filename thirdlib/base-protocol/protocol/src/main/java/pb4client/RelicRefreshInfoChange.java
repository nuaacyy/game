// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 * msgType = 3129
 * 服务器 -&gt; 客户端
 * 遗迹刷新时间变化
 * </pre>
 *
 * Protobuf type {@code client2server.RelicRefreshInfoChange}
 */
public  final class RelicRefreshInfoChange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.RelicRefreshInfoChange)
    RelicRefreshInfoChangeOrBuilder {
  // Use RelicRefreshInfoChange.newBuilder() to construct.
  private RelicRefreshInfoChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RelicRefreshInfoChange() {
    relicRefreshInfos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RelicRefreshInfoChange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              relicRefreshInfos_ = new java.util.ArrayList<pb4client.RelicRefreshInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            relicRefreshInfos_.add(
                input.readMessage(pb4client.RelicRefreshInfo.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        relicRefreshInfos_ = java.util.Collections.unmodifiableList(relicRefreshInfos_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicRefreshInfoChange_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicRefreshInfoChange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.RelicRefreshInfoChange.class, pb4client.RelicRefreshInfoChange.Builder.class);
  }

  public static final int RELICREFRESHINFOS_FIELD_NUMBER = 1;
  private java.util.List<pb4client.RelicRefreshInfo> relicRefreshInfos_;
  /**
   * <pre>
   *各等级遗迹刷新信息
   * </pre>
   *
   * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
   */
  public java.util.List<pb4client.RelicRefreshInfo> getRelicRefreshInfosList() {
    return relicRefreshInfos_;
  }
  /**
   * <pre>
   *各等级遗迹刷新信息
   * </pre>
   *
   * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
   */
  public java.util.List<? extends pb4client.RelicRefreshInfoOrBuilder> 
      getRelicRefreshInfosOrBuilderList() {
    return relicRefreshInfos_;
  }
  /**
   * <pre>
   *各等级遗迹刷新信息
   * </pre>
   *
   * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
   */
  public int getRelicRefreshInfosCount() {
    return relicRefreshInfos_.size();
  }
  /**
   * <pre>
   *各等级遗迹刷新信息
   * </pre>
   *
   * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
   */
  public pb4client.RelicRefreshInfo getRelicRefreshInfos(int index) {
    return relicRefreshInfos_.get(index);
  }
  /**
   * <pre>
   *各等级遗迹刷新信息
   * </pre>
   *
   * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
   */
  public pb4client.RelicRefreshInfoOrBuilder getRelicRefreshInfosOrBuilder(
      int index) {
    return relicRefreshInfos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getRelicRefreshInfosCount(); i++) {
      if (!getRelicRefreshInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < relicRefreshInfos_.size(); i++) {
      output.writeMessage(1, relicRefreshInfos_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < relicRefreshInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, relicRefreshInfos_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.RelicRefreshInfoChange)) {
      return super.equals(obj);
    }
    pb4client.RelicRefreshInfoChange other = (pb4client.RelicRefreshInfoChange) obj;

    boolean result = true;
    result = result && getRelicRefreshInfosList()
        .equals(other.getRelicRefreshInfosList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRelicRefreshInfosCount() > 0) {
      hash = (37 * hash) + RELICREFRESHINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getRelicRefreshInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.RelicRefreshInfoChange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicRefreshInfoChange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.RelicRefreshInfoChange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicRefreshInfoChange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.RelicRefreshInfoChange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * msgType = 3129
   * 服务器 -&gt; 客户端
   * 遗迹刷新时间变化
   * </pre>
   *
   * Protobuf type {@code client2server.RelicRefreshInfoChange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.RelicRefreshInfoChange)
      pb4client.RelicRefreshInfoChangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicRefreshInfoChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicRefreshInfoChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.RelicRefreshInfoChange.class, pb4client.RelicRefreshInfoChange.Builder.class);
    }

    // Construct using pb4client.RelicRefreshInfoChange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRelicRefreshInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (relicRefreshInfosBuilder_ == null) {
        relicRefreshInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        relicRefreshInfosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicRefreshInfoChange_descriptor;
    }

    public pb4client.RelicRefreshInfoChange getDefaultInstanceForType() {
      return pb4client.RelicRefreshInfoChange.getDefaultInstance();
    }

    public pb4client.RelicRefreshInfoChange build() {
      pb4client.RelicRefreshInfoChange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.RelicRefreshInfoChange buildPartial() {
      pb4client.RelicRefreshInfoChange result = new pb4client.RelicRefreshInfoChange(this);
      int from_bitField0_ = bitField0_;
      if (relicRefreshInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          relicRefreshInfos_ = java.util.Collections.unmodifiableList(relicRefreshInfos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.relicRefreshInfos_ = relicRefreshInfos_;
      } else {
        result.relicRefreshInfos_ = relicRefreshInfosBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.RelicRefreshInfoChange) {
        return mergeFrom((pb4client.RelicRefreshInfoChange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.RelicRefreshInfoChange other) {
      if (other == pb4client.RelicRefreshInfoChange.getDefaultInstance()) return this;
      if (relicRefreshInfosBuilder_ == null) {
        if (!other.relicRefreshInfos_.isEmpty()) {
          if (relicRefreshInfos_.isEmpty()) {
            relicRefreshInfos_ = other.relicRefreshInfos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRelicRefreshInfosIsMutable();
            relicRefreshInfos_.addAll(other.relicRefreshInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.relicRefreshInfos_.isEmpty()) {
          if (relicRefreshInfosBuilder_.isEmpty()) {
            relicRefreshInfosBuilder_.dispose();
            relicRefreshInfosBuilder_ = null;
            relicRefreshInfos_ = other.relicRefreshInfos_;
            bitField0_ = (bitField0_ & ~0x00000001);
            relicRefreshInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRelicRefreshInfosFieldBuilder() : null;
          } else {
            relicRefreshInfosBuilder_.addAllMessages(other.relicRefreshInfos_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      for (int i = 0; i < getRelicRefreshInfosCount(); i++) {
        if (!getRelicRefreshInfos(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.RelicRefreshInfoChange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.RelicRefreshInfoChange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<pb4client.RelicRefreshInfo> relicRefreshInfos_ =
      java.util.Collections.emptyList();
    private void ensureRelicRefreshInfosIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        relicRefreshInfos_ = new java.util.ArrayList<pb4client.RelicRefreshInfo>(relicRefreshInfos_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RelicRefreshInfo, pb4client.RelicRefreshInfo.Builder, pb4client.RelicRefreshInfoOrBuilder> relicRefreshInfosBuilder_;

    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public java.util.List<pb4client.RelicRefreshInfo> getRelicRefreshInfosList() {
      if (relicRefreshInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relicRefreshInfos_);
      } else {
        return relicRefreshInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public int getRelicRefreshInfosCount() {
      if (relicRefreshInfosBuilder_ == null) {
        return relicRefreshInfos_.size();
      } else {
        return relicRefreshInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public pb4client.RelicRefreshInfo getRelicRefreshInfos(int index) {
      if (relicRefreshInfosBuilder_ == null) {
        return relicRefreshInfos_.get(index);
      } else {
        return relicRefreshInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder setRelicRefreshInfos(
        int index, pb4client.RelicRefreshInfo value) {
      if (relicRefreshInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.set(index, value);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder setRelicRefreshInfos(
        int index, pb4client.RelicRefreshInfo.Builder builderForValue) {
      if (relicRefreshInfosBuilder_ == null) {
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        relicRefreshInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder addRelicRefreshInfos(pb4client.RelicRefreshInfo value) {
      if (relicRefreshInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.add(value);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder addRelicRefreshInfos(
        int index, pb4client.RelicRefreshInfo value) {
      if (relicRefreshInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.add(index, value);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder addRelicRefreshInfos(
        pb4client.RelicRefreshInfo.Builder builderForValue) {
      if (relicRefreshInfosBuilder_ == null) {
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.add(builderForValue.build());
        onChanged();
      } else {
        relicRefreshInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder addRelicRefreshInfos(
        int index, pb4client.RelicRefreshInfo.Builder builderForValue) {
      if (relicRefreshInfosBuilder_ == null) {
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        relicRefreshInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder addAllRelicRefreshInfos(
        java.lang.Iterable<? extends pb4client.RelicRefreshInfo> values) {
      if (relicRefreshInfosBuilder_ == null) {
        ensureRelicRefreshInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relicRefreshInfos_);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder clearRelicRefreshInfos() {
      if (relicRefreshInfosBuilder_ == null) {
        relicRefreshInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public Builder removeRelicRefreshInfos(int index) {
      if (relicRefreshInfosBuilder_ == null) {
        ensureRelicRefreshInfosIsMutable();
        relicRefreshInfos_.remove(index);
        onChanged();
      } else {
        relicRefreshInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public pb4client.RelicRefreshInfo.Builder getRelicRefreshInfosBuilder(
        int index) {
      return getRelicRefreshInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public pb4client.RelicRefreshInfoOrBuilder getRelicRefreshInfosOrBuilder(
        int index) {
      if (relicRefreshInfosBuilder_ == null) {
        return relicRefreshInfos_.get(index);  } else {
        return relicRefreshInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public java.util.List<? extends pb4client.RelicRefreshInfoOrBuilder> 
         getRelicRefreshInfosOrBuilderList() {
      if (relicRefreshInfosBuilder_ != null) {
        return relicRefreshInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relicRefreshInfos_);
      }
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public pb4client.RelicRefreshInfo.Builder addRelicRefreshInfosBuilder() {
      return getRelicRefreshInfosFieldBuilder().addBuilder(
          pb4client.RelicRefreshInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public pb4client.RelicRefreshInfo.Builder addRelicRefreshInfosBuilder(
        int index) {
      return getRelicRefreshInfosFieldBuilder().addBuilder(
          index, pb4client.RelicRefreshInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *各等级遗迹刷新信息
     * </pre>
     *
     * <code>repeated .client2server.RelicRefreshInfo relicRefreshInfos = 1;</code>
     */
    public java.util.List<pb4client.RelicRefreshInfo.Builder> 
         getRelicRefreshInfosBuilderList() {
      return getRelicRefreshInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RelicRefreshInfo, pb4client.RelicRefreshInfo.Builder, pb4client.RelicRefreshInfoOrBuilder> 
        getRelicRefreshInfosFieldBuilder() {
      if (relicRefreshInfosBuilder_ == null) {
        relicRefreshInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.RelicRefreshInfo, pb4client.RelicRefreshInfo.Builder, pb4client.RelicRefreshInfoOrBuilder>(
                relicRefreshInfos_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        relicRefreshInfos_ = null;
      }
      return relicRefreshInfosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.RelicRefreshInfoChange)
  }

  // @@protoc_insertion_point(class_scope:client2server.RelicRefreshInfoChange)
  private static final pb4client.RelicRefreshInfoChange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.RelicRefreshInfoChange();
  }

  public static pb4client.RelicRefreshInfoChange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RelicRefreshInfoChange>
      PARSER = new com.google.protobuf.AbstractParser<RelicRefreshInfoChange>() {
    public RelicRefreshInfoChange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelicRefreshInfoChange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RelicRefreshInfoChange> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RelicRefreshInfoChange> getParserForType() {
    return PARSER;
  }

  public pb4client.RelicRefreshInfoChange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

