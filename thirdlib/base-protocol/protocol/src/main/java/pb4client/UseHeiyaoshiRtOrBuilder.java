// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

public interface UseHeiyaoshiRtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:client2server.UseHeiyaoshiRt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  boolean hasRt();
  /**
   * <pre>
   * 返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  int getRt();

  /**
   * <pre>
   * 被使用的装备ID
   * </pre>
   *
   * <code>optional int64 kingEquipId = 2;</code>
   */
  boolean hasKingEquipId();
  /**
   * <pre>
   * 被使用的装备ID
   * </pre>
   *
   * <code>optional int64 kingEquipId = 2;</code>
   */
  long getKingEquipId();

  /**
   * <pre>
   * 是否黑曜石成功 0-失败  1-成功
   * </pre>
   *
   * <code>optional int32 isSuccess = 3;</code>
   */
  boolean hasIsSuccess();
  /**
   * <pre>
   * 是否黑曜石成功 0-失败  1-成功
   * </pre>
   *
   * <code>optional int32 isSuccess = 3;</code>
   */
  int getIsSuccess();

  /**
   * <pre>
   * 下次使用黑曜石时间
   * </pre>
   *
   * <code>optional int32 nextUseTime = 4;</code>
   */
  boolean hasNextUseTime();
  /**
   * <pre>
   * 下次使用黑曜石时间
   * </pre>
   *
   * <code>optional int32 nextUseTime = 4;</code>
   */
  int getNextUseTime();

  /**
   * <pre>
   * 使用后的装备模版 成功了的话是会变的
   * </pre>
   *
   * <code>optional int32 nowEeuipProto = 5;</code>
   */
  boolean hasNowEeuipProto();
  /**
   * <pre>
   * 使用后的装备模版 成功了的话是会变的
   * </pre>
   *
   * <code>optional int32 nowEeuipProto = 5;</code>
   */
  int getNowEeuipProto();
}
