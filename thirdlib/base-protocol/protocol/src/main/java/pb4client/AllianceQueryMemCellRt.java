// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.AllianceQueryMemCellRt}
 */
public  final class AllianceQueryMemCellRt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.AllianceQueryMemCellRt)
    AllianceQueryMemCellRtOrBuilder {
  // Use AllianceQueryMemCellRt.newBuilder() to construct.
  private AllianceQueryMemCellRt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllianceQueryMemCellRt() {
    rt_ = 0;
    protoId_ = 0;
    wood_ = 0;
    iron_ = 0;
    stone_ = 0;
    food_ = 0;
    cell3_ = 0;
    cell4_ = 0;
    cell5_ = 0;
    cell6_ = 0;
    cell7_ = 0;
    cell8_ = 0;
    cell9_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AllianceQueryMemCellRt(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            rt_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            protoId_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            wood_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            iron_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            stone_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            food_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            cell3_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            cell4_ = input.readInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000100;
            cell5_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000200;
            cell6_ = input.readInt32();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000400;
            cell7_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000800;
            cell8_ = input.readInt32();
            break;
          }
          case 104: {
            bitField0_ |= 0x00001000;
            cell9_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryMemCellRt_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryMemCellRt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.AllianceQueryMemCellRt.class, pb4client.AllianceQueryMemCellRt.Builder.class);
  }

  private int bitField0_;
  public static final int RT_FIELD_NUMBER = 1;
  private int rt_;
  /**
   * <pre>
   *返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  public boolean hasRt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *返回值
   * </pre>
   *
   * <code>required int32 rt = 1;</code>
   */
  public int getRt() {
    return rt_;
  }

  public static final int PROTOID_FIELD_NUMBER = 2;
  private int protoId_;
  /**
   * <pre>
   *模版ID（当前已达成的ID）
   * </pre>
   *
   * <code>optional int32 protoId = 2;</code>
   */
  public boolean hasProtoId() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *模版ID（当前已达成的ID）
   * </pre>
   *
   * <code>optional int32 protoId = 2;</code>
   */
  public int getProtoId() {
    return protoId_;
  }

  public static final int WOOD_FIELD_NUMBER = 3;
  private int wood_;
  /**
   * <pre>
   *木料加成
   * </pre>
   *
   * <code>optional int32 wood = 3;</code>
   */
  public boolean hasWood() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *木料加成
   * </pre>
   *
   * <code>optional int32 wood = 3;</code>
   */
  public int getWood() {
    return wood_;
  }

  public static final int IRON_FIELD_NUMBER = 4;
  private int iron_;
  /**
   * <pre>
   *晶矿加成
   * </pre>
   *
   * <code>optional int32 iron = 4;</code>
   */
  public boolean hasIron() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *晶矿加成
   * </pre>
   *
   * <code>optional int32 iron = 4;</code>
   */
  public int getIron() {
    return iron_;
  }

  public static final int STONE_FIELD_NUMBER = 5;
  private int stone_;
  /**
   * <pre>
   *石料加成
   * </pre>
   *
   * <code>optional int32 stone = 5;</code>
   */
  public boolean hasStone() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *石料加成
   * </pre>
   *
   * <code>optional int32 stone = 5;</code>
   */
  public int getStone() {
    return stone_;
  }

  public static final int FOOD_FIELD_NUMBER = 6;
  private int food_;
  /**
   * <pre>
   *粮食加成
   * </pre>
   *
   * <code>optional int32 food = 6;</code>
   */
  public boolean hasFood() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *粮食加成
   * </pre>
   *
   * <code>optional int32 food = 6;</code>
   */
  public int getFood() {
    return food_;
  }

  public static final int CELL3_FIELD_NUMBER = 7;
  private int cell3_;
  /**
   * <pre>
   *3级地数量
   * </pre>
   *
   * <code>optional int32 cell3 = 7;</code>
   */
  public boolean hasCell3() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *3级地数量
   * </pre>
   *
   * <code>optional int32 cell3 = 7;</code>
   */
  public int getCell3() {
    return cell3_;
  }

  public static final int CELL4_FIELD_NUMBER = 8;
  private int cell4_;
  /**
   * <pre>
   *4级地数量
   * </pre>
   *
   * <code>optional int32 cell4 = 8;</code>
   */
  public boolean hasCell4() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *4级地数量
   * </pre>
   *
   * <code>optional int32 cell4 = 8;</code>
   */
  public int getCell4() {
    return cell4_;
  }

  public static final int CELL5_FIELD_NUMBER = 9;
  private int cell5_;
  /**
   * <pre>
   *5级地数量
   * </pre>
   *
   * <code>optional int32 cell5 = 9;</code>
   */
  public boolean hasCell5() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *5级地数量
   * </pre>
   *
   * <code>optional int32 cell5 = 9;</code>
   */
  public int getCell5() {
    return cell5_;
  }

  public static final int CELL6_FIELD_NUMBER = 10;
  private int cell6_;
  /**
   * <pre>
   *6级地数量
   * </pre>
   *
   * <code>optional int32 cell6 = 10;</code>
   */
  public boolean hasCell6() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *6级地数量
   * </pre>
   *
   * <code>optional int32 cell6 = 10;</code>
   */
  public int getCell6() {
    return cell6_;
  }

  public static final int CELL7_FIELD_NUMBER = 11;
  private int cell7_;
  /**
   * <pre>
   *7级地数量
   * </pre>
   *
   * <code>optional int32 cell7 = 11;</code>
   */
  public boolean hasCell7() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   *7级地数量
   * </pre>
   *
   * <code>optional int32 cell7 = 11;</code>
   */
  public int getCell7() {
    return cell7_;
  }

  public static final int CELL8_FIELD_NUMBER = 12;
  private int cell8_;
  /**
   * <pre>
   *8级地数量
   * </pre>
   *
   * <code>optional int32 cell8 = 12;</code>
   */
  public boolean hasCell8() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   *8级地数量
   * </pre>
   *
   * <code>optional int32 cell8 = 12;</code>
   */
  public int getCell8() {
    return cell8_;
  }

  public static final int CELL9_FIELD_NUMBER = 13;
  private int cell9_;
  /**
   * <pre>
   *9级地数量
   * </pre>
   *
   * <code>optional int32 cell9 = 13;</code>
   */
  public boolean hasCell9() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <pre>
   *9级地数量
   * </pre>
   *
   * <code>optional int32 cell9 = 13;</code>
   */
  public int getCell9() {
    return cell9_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRt()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, protoId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, wood_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, iron_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, stone_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, food_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, cell3_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, cell4_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(9, cell5_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(10, cell6_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(11, cell7_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeInt32(12, cell8_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeInt32(13, cell9_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, protoId_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, wood_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, iron_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, stone_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, food_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, cell3_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, cell4_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, cell5_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, cell6_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, cell7_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, cell8_);
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, cell9_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.AllianceQueryMemCellRt)) {
      return super.equals(obj);
    }
    pb4client.AllianceQueryMemCellRt other = (pb4client.AllianceQueryMemCellRt) obj;

    boolean result = true;
    result = result && (hasRt() == other.hasRt());
    if (hasRt()) {
      result = result && (getRt()
          == other.getRt());
    }
    result = result && (hasProtoId() == other.hasProtoId());
    if (hasProtoId()) {
      result = result && (getProtoId()
          == other.getProtoId());
    }
    result = result && (hasWood() == other.hasWood());
    if (hasWood()) {
      result = result && (getWood()
          == other.getWood());
    }
    result = result && (hasIron() == other.hasIron());
    if (hasIron()) {
      result = result && (getIron()
          == other.getIron());
    }
    result = result && (hasStone() == other.hasStone());
    if (hasStone()) {
      result = result && (getStone()
          == other.getStone());
    }
    result = result && (hasFood() == other.hasFood());
    if (hasFood()) {
      result = result && (getFood()
          == other.getFood());
    }
    result = result && (hasCell3() == other.hasCell3());
    if (hasCell3()) {
      result = result && (getCell3()
          == other.getCell3());
    }
    result = result && (hasCell4() == other.hasCell4());
    if (hasCell4()) {
      result = result && (getCell4()
          == other.getCell4());
    }
    result = result && (hasCell5() == other.hasCell5());
    if (hasCell5()) {
      result = result && (getCell5()
          == other.getCell5());
    }
    result = result && (hasCell6() == other.hasCell6());
    if (hasCell6()) {
      result = result && (getCell6()
          == other.getCell6());
    }
    result = result && (hasCell7() == other.hasCell7());
    if (hasCell7()) {
      result = result && (getCell7()
          == other.getCell7());
    }
    result = result && (hasCell8() == other.hasCell8());
    if (hasCell8()) {
      result = result && (getCell8()
          == other.getCell8());
    }
    result = result && (hasCell9() == other.hasCell9());
    if (hasCell9()) {
      result = result && (getCell9()
          == other.getCell9());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRt()) {
      hash = (37 * hash) + RT_FIELD_NUMBER;
      hash = (53 * hash) + getRt();
    }
    if (hasProtoId()) {
      hash = (37 * hash) + PROTOID_FIELD_NUMBER;
      hash = (53 * hash) + getProtoId();
    }
    if (hasWood()) {
      hash = (37 * hash) + WOOD_FIELD_NUMBER;
      hash = (53 * hash) + getWood();
    }
    if (hasIron()) {
      hash = (37 * hash) + IRON_FIELD_NUMBER;
      hash = (53 * hash) + getIron();
    }
    if (hasStone()) {
      hash = (37 * hash) + STONE_FIELD_NUMBER;
      hash = (53 * hash) + getStone();
    }
    if (hasFood()) {
      hash = (37 * hash) + FOOD_FIELD_NUMBER;
      hash = (53 * hash) + getFood();
    }
    if (hasCell3()) {
      hash = (37 * hash) + CELL3_FIELD_NUMBER;
      hash = (53 * hash) + getCell3();
    }
    if (hasCell4()) {
      hash = (37 * hash) + CELL4_FIELD_NUMBER;
      hash = (53 * hash) + getCell4();
    }
    if (hasCell5()) {
      hash = (37 * hash) + CELL5_FIELD_NUMBER;
      hash = (53 * hash) + getCell5();
    }
    if (hasCell6()) {
      hash = (37 * hash) + CELL6_FIELD_NUMBER;
      hash = (53 * hash) + getCell6();
    }
    if (hasCell7()) {
      hash = (37 * hash) + CELL7_FIELD_NUMBER;
      hash = (53 * hash) + getCell7();
    }
    if (hasCell8()) {
      hash = (37 * hash) + CELL8_FIELD_NUMBER;
      hash = (53 * hash) + getCell8();
    }
    if (hasCell9()) {
      hash = (37 * hash) + CELL9_FIELD_NUMBER;
      hash = (53 * hash) + getCell9();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.AllianceQueryMemCellRt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceQueryMemCellRt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryMemCellRt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.AllianceQueryMemCellRt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.AllianceQueryMemCellRt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.AllianceQueryMemCellRt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.AllianceQueryMemCellRt)
      pb4client.AllianceQueryMemCellRtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryMemCellRt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryMemCellRt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.AllianceQueryMemCellRt.class, pb4client.AllianceQueryMemCellRt.Builder.class);
    }

    // Construct using pb4client.AllianceQueryMemCellRt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      rt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      protoId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      wood_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      iron_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      stone_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      food_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      cell3_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      cell4_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      cell5_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      cell6_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      cell7_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      cell8_ = 0;
      bitField0_ = (bitField0_ & ~0x00000800);
      cell9_ = 0;
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_AllianceQueryMemCellRt_descriptor;
    }

    public pb4client.AllianceQueryMemCellRt getDefaultInstanceForType() {
      return pb4client.AllianceQueryMemCellRt.getDefaultInstance();
    }

    public pb4client.AllianceQueryMemCellRt build() {
      pb4client.AllianceQueryMemCellRt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.AllianceQueryMemCellRt buildPartial() {
      pb4client.AllianceQueryMemCellRt result = new pb4client.AllianceQueryMemCellRt(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.rt_ = rt_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.protoId_ = protoId_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.wood_ = wood_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.iron_ = iron_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.stone_ = stone_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.food_ = food_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.cell3_ = cell3_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.cell4_ = cell4_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.cell5_ = cell5_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.cell6_ = cell6_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      result.cell7_ = cell7_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000800;
      }
      result.cell8_ = cell8_;
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00001000;
      }
      result.cell9_ = cell9_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.AllianceQueryMemCellRt) {
        return mergeFrom((pb4client.AllianceQueryMemCellRt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.AllianceQueryMemCellRt other) {
      if (other == pb4client.AllianceQueryMemCellRt.getDefaultInstance()) return this;
      if (other.hasRt()) {
        setRt(other.getRt());
      }
      if (other.hasProtoId()) {
        setProtoId(other.getProtoId());
      }
      if (other.hasWood()) {
        setWood(other.getWood());
      }
      if (other.hasIron()) {
        setIron(other.getIron());
      }
      if (other.hasStone()) {
        setStone(other.getStone());
      }
      if (other.hasFood()) {
        setFood(other.getFood());
      }
      if (other.hasCell3()) {
        setCell3(other.getCell3());
      }
      if (other.hasCell4()) {
        setCell4(other.getCell4());
      }
      if (other.hasCell5()) {
        setCell5(other.getCell5());
      }
      if (other.hasCell6()) {
        setCell6(other.getCell6());
      }
      if (other.hasCell7()) {
        setCell7(other.getCell7());
      }
      if (other.hasCell8()) {
        setCell8(other.getCell8());
      }
      if (other.hasCell9()) {
        setCell9(other.getCell9());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRt()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.AllianceQueryMemCellRt parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.AllianceQueryMemCellRt) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int rt_ ;
    /**
     * <pre>
     *返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public boolean hasRt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public int getRt() {
      return rt_;
    }
    /**
     * <pre>
     *返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public Builder setRt(int value) {
      bitField0_ |= 0x00000001;
      rt_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *返回值
     * </pre>
     *
     * <code>required int32 rt = 1;</code>
     */
    public Builder clearRt() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rt_ = 0;
      onChanged();
      return this;
    }

    private int protoId_ ;
    /**
     * <pre>
     *模版ID（当前已达成的ID）
     * </pre>
     *
     * <code>optional int32 protoId = 2;</code>
     */
    public boolean hasProtoId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *模版ID（当前已达成的ID）
     * </pre>
     *
     * <code>optional int32 protoId = 2;</code>
     */
    public int getProtoId() {
      return protoId_;
    }
    /**
     * <pre>
     *模版ID（当前已达成的ID）
     * </pre>
     *
     * <code>optional int32 protoId = 2;</code>
     */
    public Builder setProtoId(int value) {
      bitField0_ |= 0x00000002;
      protoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *模版ID（当前已达成的ID）
     * </pre>
     *
     * <code>optional int32 protoId = 2;</code>
     */
    public Builder clearProtoId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      protoId_ = 0;
      onChanged();
      return this;
    }

    private int wood_ ;
    /**
     * <pre>
     *木料加成
     * </pre>
     *
     * <code>optional int32 wood = 3;</code>
     */
    public boolean hasWood() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *木料加成
     * </pre>
     *
     * <code>optional int32 wood = 3;</code>
     */
    public int getWood() {
      return wood_;
    }
    /**
     * <pre>
     *木料加成
     * </pre>
     *
     * <code>optional int32 wood = 3;</code>
     */
    public Builder setWood(int value) {
      bitField0_ |= 0x00000004;
      wood_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *木料加成
     * </pre>
     *
     * <code>optional int32 wood = 3;</code>
     */
    public Builder clearWood() {
      bitField0_ = (bitField0_ & ~0x00000004);
      wood_ = 0;
      onChanged();
      return this;
    }

    private int iron_ ;
    /**
     * <pre>
     *晶矿加成
     * </pre>
     *
     * <code>optional int32 iron = 4;</code>
     */
    public boolean hasIron() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *晶矿加成
     * </pre>
     *
     * <code>optional int32 iron = 4;</code>
     */
    public int getIron() {
      return iron_;
    }
    /**
     * <pre>
     *晶矿加成
     * </pre>
     *
     * <code>optional int32 iron = 4;</code>
     */
    public Builder setIron(int value) {
      bitField0_ |= 0x00000008;
      iron_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *晶矿加成
     * </pre>
     *
     * <code>optional int32 iron = 4;</code>
     */
    public Builder clearIron() {
      bitField0_ = (bitField0_ & ~0x00000008);
      iron_ = 0;
      onChanged();
      return this;
    }

    private int stone_ ;
    /**
     * <pre>
     *石料加成
     * </pre>
     *
     * <code>optional int32 stone = 5;</code>
     */
    public boolean hasStone() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *石料加成
     * </pre>
     *
     * <code>optional int32 stone = 5;</code>
     */
    public int getStone() {
      return stone_;
    }
    /**
     * <pre>
     *石料加成
     * </pre>
     *
     * <code>optional int32 stone = 5;</code>
     */
    public Builder setStone(int value) {
      bitField0_ |= 0x00000010;
      stone_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *石料加成
     * </pre>
     *
     * <code>optional int32 stone = 5;</code>
     */
    public Builder clearStone() {
      bitField0_ = (bitField0_ & ~0x00000010);
      stone_ = 0;
      onChanged();
      return this;
    }

    private int food_ ;
    /**
     * <pre>
     *粮食加成
     * </pre>
     *
     * <code>optional int32 food = 6;</code>
     */
    public boolean hasFood() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *粮食加成
     * </pre>
     *
     * <code>optional int32 food = 6;</code>
     */
    public int getFood() {
      return food_;
    }
    /**
     * <pre>
     *粮食加成
     * </pre>
     *
     * <code>optional int32 food = 6;</code>
     */
    public Builder setFood(int value) {
      bitField0_ |= 0x00000020;
      food_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *粮食加成
     * </pre>
     *
     * <code>optional int32 food = 6;</code>
     */
    public Builder clearFood() {
      bitField0_ = (bitField0_ & ~0x00000020);
      food_ = 0;
      onChanged();
      return this;
    }

    private int cell3_ ;
    /**
     * <pre>
     *3级地数量
     * </pre>
     *
     * <code>optional int32 cell3 = 7;</code>
     */
    public boolean hasCell3() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *3级地数量
     * </pre>
     *
     * <code>optional int32 cell3 = 7;</code>
     */
    public int getCell3() {
      return cell3_;
    }
    /**
     * <pre>
     *3级地数量
     * </pre>
     *
     * <code>optional int32 cell3 = 7;</code>
     */
    public Builder setCell3(int value) {
      bitField0_ |= 0x00000040;
      cell3_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *3级地数量
     * </pre>
     *
     * <code>optional int32 cell3 = 7;</code>
     */
    public Builder clearCell3() {
      bitField0_ = (bitField0_ & ~0x00000040);
      cell3_ = 0;
      onChanged();
      return this;
    }

    private int cell4_ ;
    /**
     * <pre>
     *4级地数量
     * </pre>
     *
     * <code>optional int32 cell4 = 8;</code>
     */
    public boolean hasCell4() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *4级地数量
     * </pre>
     *
     * <code>optional int32 cell4 = 8;</code>
     */
    public int getCell4() {
      return cell4_;
    }
    /**
     * <pre>
     *4级地数量
     * </pre>
     *
     * <code>optional int32 cell4 = 8;</code>
     */
    public Builder setCell4(int value) {
      bitField0_ |= 0x00000080;
      cell4_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *4级地数量
     * </pre>
     *
     * <code>optional int32 cell4 = 8;</code>
     */
    public Builder clearCell4() {
      bitField0_ = (bitField0_ & ~0x00000080);
      cell4_ = 0;
      onChanged();
      return this;
    }

    private int cell5_ ;
    /**
     * <pre>
     *5级地数量
     * </pre>
     *
     * <code>optional int32 cell5 = 9;</code>
     */
    public boolean hasCell5() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *5级地数量
     * </pre>
     *
     * <code>optional int32 cell5 = 9;</code>
     */
    public int getCell5() {
      return cell5_;
    }
    /**
     * <pre>
     *5级地数量
     * </pre>
     *
     * <code>optional int32 cell5 = 9;</code>
     */
    public Builder setCell5(int value) {
      bitField0_ |= 0x00000100;
      cell5_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *5级地数量
     * </pre>
     *
     * <code>optional int32 cell5 = 9;</code>
     */
    public Builder clearCell5() {
      bitField0_ = (bitField0_ & ~0x00000100);
      cell5_ = 0;
      onChanged();
      return this;
    }

    private int cell6_ ;
    /**
     * <pre>
     *6级地数量
     * </pre>
     *
     * <code>optional int32 cell6 = 10;</code>
     */
    public boolean hasCell6() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *6级地数量
     * </pre>
     *
     * <code>optional int32 cell6 = 10;</code>
     */
    public int getCell6() {
      return cell6_;
    }
    /**
     * <pre>
     *6级地数量
     * </pre>
     *
     * <code>optional int32 cell6 = 10;</code>
     */
    public Builder setCell6(int value) {
      bitField0_ |= 0x00000200;
      cell6_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *6级地数量
     * </pre>
     *
     * <code>optional int32 cell6 = 10;</code>
     */
    public Builder clearCell6() {
      bitField0_ = (bitField0_ & ~0x00000200);
      cell6_ = 0;
      onChanged();
      return this;
    }

    private int cell7_ ;
    /**
     * <pre>
     *7级地数量
     * </pre>
     *
     * <code>optional int32 cell7 = 11;</code>
     */
    public boolean hasCell7() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *7级地数量
     * </pre>
     *
     * <code>optional int32 cell7 = 11;</code>
     */
    public int getCell7() {
      return cell7_;
    }
    /**
     * <pre>
     *7级地数量
     * </pre>
     *
     * <code>optional int32 cell7 = 11;</code>
     */
    public Builder setCell7(int value) {
      bitField0_ |= 0x00000400;
      cell7_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *7级地数量
     * </pre>
     *
     * <code>optional int32 cell7 = 11;</code>
     */
    public Builder clearCell7() {
      bitField0_ = (bitField0_ & ~0x00000400);
      cell7_ = 0;
      onChanged();
      return this;
    }

    private int cell8_ ;
    /**
     * <pre>
     *8级地数量
     * </pre>
     *
     * <code>optional int32 cell8 = 12;</code>
     */
    public boolean hasCell8() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *8级地数量
     * </pre>
     *
     * <code>optional int32 cell8 = 12;</code>
     */
    public int getCell8() {
      return cell8_;
    }
    /**
     * <pre>
     *8级地数量
     * </pre>
     *
     * <code>optional int32 cell8 = 12;</code>
     */
    public Builder setCell8(int value) {
      bitField0_ |= 0x00000800;
      cell8_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *8级地数量
     * </pre>
     *
     * <code>optional int32 cell8 = 12;</code>
     */
    public Builder clearCell8() {
      bitField0_ = (bitField0_ & ~0x00000800);
      cell8_ = 0;
      onChanged();
      return this;
    }

    private int cell9_ ;
    /**
     * <pre>
     *9级地数量
     * </pre>
     *
     * <code>optional int32 cell9 = 13;</code>
     */
    public boolean hasCell9() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *9级地数量
     * </pre>
     *
     * <code>optional int32 cell9 = 13;</code>
     */
    public int getCell9() {
      return cell9_;
    }
    /**
     * <pre>
     *9级地数量
     * </pre>
     *
     * <code>optional int32 cell9 = 13;</code>
     */
    public Builder setCell9(int value) {
      bitField0_ |= 0x00001000;
      cell9_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *9级地数量
     * </pre>
     *
     * <code>optional int32 cell9 = 13;</code>
     */
    public Builder clearCell9() {
      bitField0_ = (bitField0_ & ~0x00001000);
      cell9_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.AllianceQueryMemCellRt)
  }

  // @@protoc_insertion_point(class_scope:client2server.AllianceQueryMemCellRt)
  private static final pb4client.AllianceQueryMemCellRt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.AllianceQueryMemCellRt();
  }

  public static pb4client.AllianceQueryMemCellRt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<AllianceQueryMemCellRt>
      PARSER = new com.google.protobuf.AbstractParser<AllianceQueryMemCellRt>() {
    public AllianceQueryMemCellRt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllianceQueryMemCellRt(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AllianceQueryMemCellRt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllianceQueryMemCellRt> getParserForType() {
    return PARSER;
  }

  public pb4client.AllianceQueryMemCellRt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

