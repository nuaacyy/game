// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *猎杀邀请信息
 * </pre>
 *
 * Protobuf type {@code client2server.HunterInviteInfo}
 */
public  final class HunterInviteInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.HunterInviteInfo)
    HunterInviteInfoOrBuilder {
  // Use HunterInviteInfo.newBuilder() to construct.
  private HunterInviteInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HunterInviteInfo() {
    inviteId_ = 0L;
    inviteTime_ = 0L;
    bossId_ = 0;
    nowHp_ = 0;
    haveHunterNum_ = 0;
    pltAreaNo_ = 0L;
    posX_ = 0;
    posY_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HunterInviteInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            inviteId_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            inviteTime_ = input.readInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            bossId_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            nowHp_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            haveHunterNum_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            pltAreaNo_ = input.readInt64();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            posX_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            posY_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_HunterInviteInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_HunterInviteInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.HunterInviteInfo.class, pb4client.HunterInviteInfo.Builder.class);
  }

  private int bitField0_;
  public static final int INVITEID_FIELD_NUMBER = 1;
  private long inviteId_;
  /**
   * <pre>
   *邀请Id
   * </pre>
   *
   * <code>optional int64 inviteId = 1;</code>
   */
  public boolean hasInviteId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *邀请Id
   * </pre>
   *
   * <code>optional int64 inviteId = 1;</code>
   */
  public long getInviteId() {
    return inviteId_;
  }

  public static final int INVITETIME_FIELD_NUMBER = 2;
  private long inviteTime_;
  /**
   * <pre>
   *最新邀请时间
   * </pre>
   *
   * <code>optional int64 inviteTime = 2;</code>
   */
  public boolean hasInviteTime() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   *最新邀请时间
   * </pre>
   *
   * <code>optional int64 inviteTime = 2;</code>
   */
  public long getInviteTime() {
    return inviteTime_;
  }

  public static final int BOSSID_FIELD_NUMBER = 3;
  private int bossId_;
  /**
   * <pre>
   *魔物配置Id
   * </pre>
   *
   * <code>optional int32 bossId = 3;</code>
   */
  public boolean hasBossId() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *魔物配置Id
   * </pre>
   *
   * <code>optional int32 bossId = 3;</code>
   */
  public int getBossId() {
    return bossId_;
  }

  public static final int NOWHP_FIELD_NUMBER = 4;
  private int nowHp_;
  /**
   * <pre>
   *当前血量
   * </pre>
   *
   * <code>optional int32 nowHp = 4;</code>
   */
  public boolean hasNowHp() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *当前血量
   * </pre>
   *
   * <code>optional int32 nowHp = 4;</code>
   */
  public int getNowHp() {
    return nowHp_;
  }

  public static final int HAVEHUNTERNUM_FIELD_NUMBER = 5;
  private int haveHunterNum_;
  /**
   * <pre>
   *已猎杀的同盟人数
   * </pre>
   *
   * <code>optional int32 haveHunterNum = 5;</code>
   */
  public boolean hasHaveHunterNum() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *已猎杀的同盟人数
   * </pre>
   *
   * <code>optional int32 haveHunterNum = 5;</code>
   */
  public int getHaveHunterNum() {
    return haveHunterNum_;
  }

  public static final int PLTAREANO_FIELD_NUMBER = 6;
  private long pltAreaNo_;
  /**
   * <pre>
   *区服Id
   * </pre>
   *
   * <code>required int64 pltAreaNo = 6;</code>
   */
  public boolean hasPltAreaNo() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *区服Id
   * </pre>
   *
   * <code>required int64 pltAreaNo = 6;</code>
   */
  public long getPltAreaNo() {
    return pltAreaNo_;
  }

  public static final int POSX_FIELD_NUMBER = 7;
  private int posX_;
  /**
   * <pre>
   *坐标x
   * </pre>
   *
   * <code>required int32 posX = 7;</code>
   */
  public boolean hasPosX() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *坐标x
   * </pre>
   *
   * <code>required int32 posX = 7;</code>
   */
  public int getPosX() {
    return posX_;
  }

  public static final int POSY_FIELD_NUMBER = 8;
  private int posY_;
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>required int32 posY = 8;</code>
   */
  public boolean hasPosY() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>required int32 posY = 8;</code>
   */
  public int getPosY() {
    return posY_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasPltAreaNo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPosX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPosY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, inviteId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(2, inviteTime_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, bossId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, nowHp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, haveHunterNum_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt64(6, pltAreaNo_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, posX_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, posY_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, inviteId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, inviteTime_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, bossId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, nowHp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, haveHunterNum_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, pltAreaNo_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, posX_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, posY_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.HunterInviteInfo)) {
      return super.equals(obj);
    }
    pb4client.HunterInviteInfo other = (pb4client.HunterInviteInfo) obj;

    boolean result = true;
    result = result && (hasInviteId() == other.hasInviteId());
    if (hasInviteId()) {
      result = result && (getInviteId()
          == other.getInviteId());
    }
    result = result && (hasInviteTime() == other.hasInviteTime());
    if (hasInviteTime()) {
      result = result && (getInviteTime()
          == other.getInviteTime());
    }
    result = result && (hasBossId() == other.hasBossId());
    if (hasBossId()) {
      result = result && (getBossId()
          == other.getBossId());
    }
    result = result && (hasNowHp() == other.hasNowHp());
    if (hasNowHp()) {
      result = result && (getNowHp()
          == other.getNowHp());
    }
    result = result && (hasHaveHunterNum() == other.hasHaveHunterNum());
    if (hasHaveHunterNum()) {
      result = result && (getHaveHunterNum()
          == other.getHaveHunterNum());
    }
    result = result && (hasPltAreaNo() == other.hasPltAreaNo());
    if (hasPltAreaNo()) {
      result = result && (getPltAreaNo()
          == other.getPltAreaNo());
    }
    result = result && (hasPosX() == other.hasPosX());
    if (hasPosX()) {
      result = result && (getPosX()
          == other.getPosX());
    }
    result = result && (hasPosY() == other.hasPosY());
    if (hasPosY()) {
      result = result && (getPosY()
          == other.getPosY());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInviteId()) {
      hash = (37 * hash) + INVITEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInviteId());
    }
    if (hasInviteTime()) {
      hash = (37 * hash) + INVITETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInviteTime());
    }
    if (hasBossId()) {
      hash = (37 * hash) + BOSSID_FIELD_NUMBER;
      hash = (53 * hash) + getBossId();
    }
    if (hasNowHp()) {
      hash = (37 * hash) + NOWHP_FIELD_NUMBER;
      hash = (53 * hash) + getNowHp();
    }
    if (hasHaveHunterNum()) {
      hash = (37 * hash) + HAVEHUNTERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getHaveHunterNum();
    }
    if (hasPltAreaNo()) {
      hash = (37 * hash) + PLTAREANO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPltAreaNo());
    }
    if (hasPosX()) {
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
    }
    if (hasPosY()) {
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.HunterInviteInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HunterInviteInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.HunterInviteInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.HunterInviteInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.HunterInviteInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.HunterInviteInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.HunterInviteInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * Protobuf type {@code client2server.HunterInviteInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.HunterInviteInfo)
      pb4client.HunterInviteInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_HunterInviteInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_HunterInviteInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.HunterInviteInfo.class, pb4client.HunterInviteInfo.Builder.class);
    }

    // Construct using pb4client.HunterInviteInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      inviteId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      inviteTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      bossId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      nowHp_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      haveHunterNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      pltAreaNo_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      posX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      posY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_HunterInviteInfo_descriptor;
    }

    public pb4client.HunterInviteInfo getDefaultInstanceForType() {
      return pb4client.HunterInviteInfo.getDefaultInstance();
    }

    public pb4client.HunterInviteInfo build() {
      pb4client.HunterInviteInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.HunterInviteInfo buildPartial() {
      pb4client.HunterInviteInfo result = new pb4client.HunterInviteInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.inviteId_ = inviteId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.inviteTime_ = inviteTime_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.bossId_ = bossId_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.nowHp_ = nowHp_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.haveHunterNum_ = haveHunterNum_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.pltAreaNo_ = pltAreaNo_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.posX_ = posX_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.posY_ = posY_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.HunterInviteInfo) {
        return mergeFrom((pb4client.HunterInviteInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.HunterInviteInfo other) {
      if (other == pb4client.HunterInviteInfo.getDefaultInstance()) return this;
      if (other.hasInviteId()) {
        setInviteId(other.getInviteId());
      }
      if (other.hasInviteTime()) {
        setInviteTime(other.getInviteTime());
      }
      if (other.hasBossId()) {
        setBossId(other.getBossId());
      }
      if (other.hasNowHp()) {
        setNowHp(other.getNowHp());
      }
      if (other.hasHaveHunterNum()) {
        setHaveHunterNum(other.getHaveHunterNum());
      }
      if (other.hasPltAreaNo()) {
        setPltAreaNo(other.getPltAreaNo());
      }
      if (other.hasPosX()) {
        setPosX(other.getPosX());
      }
      if (other.hasPosY()) {
        setPosY(other.getPosY());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasPltAreaNo()) {
        return false;
      }
      if (!hasPosX()) {
        return false;
      }
      if (!hasPosY()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.HunterInviteInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.HunterInviteInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long inviteId_ ;
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>optional int64 inviteId = 1;</code>
     */
    public boolean hasInviteId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>optional int64 inviteId = 1;</code>
     */
    public long getInviteId() {
      return inviteId_;
    }
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>optional int64 inviteId = 1;</code>
     */
    public Builder setInviteId(long value) {
      bitField0_ |= 0x00000001;
      inviteId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>optional int64 inviteId = 1;</code>
     */
    public Builder clearInviteId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      inviteId_ = 0L;
      onChanged();
      return this;
    }

    private long inviteTime_ ;
    /**
     * <pre>
     *最新邀请时间
     * </pre>
     *
     * <code>optional int64 inviteTime = 2;</code>
     */
    public boolean hasInviteTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *最新邀请时间
     * </pre>
     *
     * <code>optional int64 inviteTime = 2;</code>
     */
    public long getInviteTime() {
      return inviteTime_;
    }
    /**
     * <pre>
     *最新邀请时间
     * </pre>
     *
     * <code>optional int64 inviteTime = 2;</code>
     */
    public Builder setInviteTime(long value) {
      bitField0_ |= 0x00000002;
      inviteTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最新邀请时间
     * </pre>
     *
     * <code>optional int64 inviteTime = 2;</code>
     */
    public Builder clearInviteTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      inviteTime_ = 0L;
      onChanged();
      return this;
    }

    private int bossId_ ;
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>optional int32 bossId = 3;</code>
     */
    public boolean hasBossId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>optional int32 bossId = 3;</code>
     */
    public int getBossId() {
      return bossId_;
    }
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>optional int32 bossId = 3;</code>
     */
    public Builder setBossId(int value) {
      bitField0_ |= 0x00000004;
      bossId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>optional int32 bossId = 3;</code>
     */
    public Builder clearBossId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      bossId_ = 0;
      onChanged();
      return this;
    }

    private int nowHp_ ;
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>optional int32 nowHp = 4;</code>
     */
    public boolean hasNowHp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>optional int32 nowHp = 4;</code>
     */
    public int getNowHp() {
      return nowHp_;
    }
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>optional int32 nowHp = 4;</code>
     */
    public Builder setNowHp(int value) {
      bitField0_ |= 0x00000008;
      nowHp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>optional int32 nowHp = 4;</code>
     */
    public Builder clearNowHp() {
      bitField0_ = (bitField0_ & ~0x00000008);
      nowHp_ = 0;
      onChanged();
      return this;
    }

    private int haveHunterNum_ ;
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>optional int32 haveHunterNum = 5;</code>
     */
    public boolean hasHaveHunterNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>optional int32 haveHunterNum = 5;</code>
     */
    public int getHaveHunterNum() {
      return haveHunterNum_;
    }
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>optional int32 haveHunterNum = 5;</code>
     */
    public Builder setHaveHunterNum(int value) {
      bitField0_ |= 0x00000010;
      haveHunterNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>optional int32 haveHunterNum = 5;</code>
     */
    public Builder clearHaveHunterNum() {
      bitField0_ = (bitField0_ & ~0x00000010);
      haveHunterNum_ = 0;
      onChanged();
      return this;
    }

    private long pltAreaNo_ ;
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>required int64 pltAreaNo = 6;</code>
     */
    public boolean hasPltAreaNo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>required int64 pltAreaNo = 6;</code>
     */
    public long getPltAreaNo() {
      return pltAreaNo_;
    }
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>required int64 pltAreaNo = 6;</code>
     */
    public Builder setPltAreaNo(long value) {
      bitField0_ |= 0x00000020;
      pltAreaNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>required int64 pltAreaNo = 6;</code>
     */
    public Builder clearPltAreaNo() {
      bitField0_ = (bitField0_ & ~0x00000020);
      pltAreaNo_ = 0L;
      onChanged();
      return this;
    }

    private int posX_ ;
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>required int32 posX = 7;</code>
     */
    public boolean hasPosX() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>required int32 posX = 7;</code>
     */
    public int getPosX() {
      return posX_;
    }
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>required int32 posX = 7;</code>
     */
    public Builder setPosX(int value) {
      bitField0_ |= 0x00000040;
      posX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>required int32 posX = 7;</code>
     */
    public Builder clearPosX() {
      bitField0_ = (bitField0_ & ~0x00000040);
      posX_ = 0;
      onChanged();
      return this;
    }

    private int posY_ ;
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 posY = 8;</code>
     */
    public boolean hasPosY() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 posY = 8;</code>
     */
    public int getPosY() {
      return posY_;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 posY = 8;</code>
     */
    public Builder setPosY(int value) {
      bitField0_ |= 0x00000080;
      posY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>required int32 posY = 8;</code>
     */
    public Builder clearPosY() {
      bitField0_ = (bitField0_ & ~0x00000080);
      posY_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.HunterInviteInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.HunterInviteInfo)
  private static final pb4client.HunterInviteInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.HunterInviteInfo();
  }

  public static pb4client.HunterInviteInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<HunterInviteInfo>
      PARSER = new com.google.protobuf.AbstractParser<HunterInviteInfo>() {
    public HunterInviteInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new HunterInviteInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HunterInviteInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HunterInviteInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.HunterInviteInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

