// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.EnterGameRt}
 */
public  final class EnterGameRt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.EnterGameRt)
    EnterGameRtOrBuilder {
  // Use EnterGameRt.newBuilder() to construct.
  private EnterGameRt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EnterGameRt() {
    rt_ = 0;
    time_ = 0L;
    cityInfo_ = java.util.Collections.emptyList();
    heroStateInfo_ = java.util.Collections.emptyList();
    playerId_ = 0L;
    tasks_ = java.util.Collections.emptyList();
    bagInfo_ = java.util.Collections.emptyList();
    allianceMarks_ = java.util.Collections.emptyList();
    chatInfos_ = java.util.Collections.emptyList();
    newMailNum_ = java.util.Collections.emptyList();
    redPoints_ = java.util.Collections.emptyList();
    barracks_ = java.util.Collections.emptyList();
    buffs_ = java.util.Collections.emptyList();
    totalPower_ = 0L;
    friendApplys_ = java.util.Collections.emptyList();
    strength_ = 0;
    strengthTime_ = 0;
    nowInstanceId_ = 0;
    newItem_ = java.util.Collections.emptyList();
    fogs_ = java.util.Collections.emptyList();
    enterTimeInfo_ = java.util.Collections.emptyList();
    newPlayerActivity_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EnterGameRt(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            rt_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000002;
            time_ = input.readInt64();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              cityInfo_ = new java.util.ArrayList<pb4client.CityInfo>();
              mutable_bitField0_ |= 0x00000004;
            }
            cityInfo_.add(
                input.readMessage(pb4client.CityInfo.PARSER, extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              heroStateInfo_ = new java.util.ArrayList<pb4client.HeroStateInFo>();
              mutable_bitField0_ |= 0x00000008;
            }
            heroStateInfo_.add(
                input.readMessage(pb4client.HeroStateInFo.PARSER, extensionRegistry));
            break;
          }
          case 96: {
            bitField0_ |= 0x00000004;
            playerId_ = input.readInt64();
            break;
          }
          case 114: {
            pb4client.DecreeChange.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              subBuilder = decreeChange_.toBuilder();
            }
            decreeChange_ = input.readMessage(pb4client.DecreeChange.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(decreeChange_);
              decreeChange_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 162: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              tasks_ = new java.util.ArrayList<pb4client.Task>();
              mutable_bitField0_ |= 0x00000040;
            }
            tasks_.add(
                input.readMessage(pb4client.Task.PARSER, extensionRegistry));
            break;
          }
          case 242: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              bagInfo_ = new java.util.ArrayList<pb4client.BagInfo>();
              mutable_bitField0_ |= 0x00000080;
            }
            bagInfo_.add(
                input.readMessage(pb4client.BagInfo.PARSER, extensionRegistry));
            break;
          }
          case 250: {
            pb4client.ServerInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = serverInfo_.toBuilder();
            }
            serverInfo_ = input.readMessage(pb4client.ServerInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(serverInfo_);
              serverInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 298: {
            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
              allianceMarks_ = new java.util.ArrayList<pb4client.AllianceMarkInfo>();
              mutable_bitField0_ |= 0x00000200;
            }
            allianceMarks_.add(
                input.readMessage(pb4client.AllianceMarkInfo.PARSER, extensionRegistry));
            break;
          }
          case 386: {
            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
              chatInfos_ = new java.util.ArrayList<pb4client.ChatInfo>();
              mutable_bitField0_ |= 0x00000400;
            }
            chatInfos_.add(
                input.readMessage(pb4client.ChatInfo.PARSER, extensionRegistry));
            break;
          }
          case 424: {
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
              newMailNum_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000800;
            }
            newMailNum_.add(input.readInt32());
            break;
          }
          case 426: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
              newMailNum_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              newMailNum_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 482: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              redPoints_ = new java.util.ArrayList<pb4client.RedPoint>();
              mutable_bitField0_ |= 0x00001000;
            }
            redPoints_.add(
                input.readMessage(pb4client.RedPoint.PARSER, extensionRegistry));
            break;
          }
          case 562: {
            if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
              barracks_ = new java.util.ArrayList<pb4client.BarracksInfo>();
              mutable_bitField0_ |= 0x00002000;
            }
            barracks_.add(
                input.readMessage(pb4client.BarracksInfo.PARSER, extensionRegistry));
            break;
          }
          case 738: {
            pb4client.CaveInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = info_.toBuilder();
            }
            info_ = input.readMessage(pb4client.CaveInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(info_);
              info_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 778: {
            if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
              buffs_ = new java.util.ArrayList<pb4client.BuffVo>();
              mutable_bitField0_ |= 0x00008000;
            }
            buffs_.add(
                input.readMessage(pb4client.BuffVo.PARSER, extensionRegistry));
            break;
          }
          case 840: {
            bitField0_ |= 0x00000040;
            totalPower_ = input.readInt64();
            break;
          }
          case 954: {
            if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
              friendApplys_ = new java.util.ArrayList<pb4client.FriendApply>();
              mutable_bitField0_ |= 0x00020000;
            }
            friendApplys_.add(
                input.readMessage(pb4client.FriendApply.PARSER, extensionRegistry));
            break;
          }
          case 976: {
            bitField0_ |= 0x00000080;
            strength_ = input.readInt32();
            break;
          }
          case 984: {
            bitField0_ |= 0x00000100;
            strengthTime_ = input.readInt32();
            break;
          }
          case 1024: {
            bitField0_ |= 0x00000200;
            nowInstanceId_ = input.readInt32();
            break;
          }
          case 1096: {
            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
              newItem_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00200000;
            }
            newItem_.add(input.readInt32());
            break;
          }
          case 1098: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
              newItem_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00200000;
            }
            while (input.getBytesUntilLimit() > 0) {
              newItem_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1122: {
            if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
              fogs_ = new java.util.ArrayList<pb4client.FogInfo>();
              mutable_bitField0_ |= 0x00400000;
            }
            fogs_.add(
                input.readMessage(pb4client.FogInfo.PARSER, extensionRegistry));
            break;
          }
          case 1138: {
            if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
              enterTimeInfo_ = new java.util.ArrayList<pb4client.ActivityEnterTimeInfo>();
              mutable_bitField0_ |= 0x00800000;
            }
            enterTimeInfo_.add(
                input.readMessage(pb4client.ActivityEnterTimeInfo.PARSER, extensionRegistry));
            break;
          }
          case 1152: {
            bitField0_ |= 0x00000400;
            newPlayerActivity_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        cityInfo_ = java.util.Collections.unmodifiableList(cityInfo_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        heroStateInfo_ = java.util.Collections.unmodifiableList(heroStateInfo_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        tasks_ = java.util.Collections.unmodifiableList(tasks_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        bagInfo_ = java.util.Collections.unmodifiableList(bagInfo_);
      }
      if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
        allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
      }
      if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
        chatInfos_ = java.util.Collections.unmodifiableList(chatInfos_);
      }
      if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
        newMailNum_ = java.util.Collections.unmodifiableList(newMailNum_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
      }
      if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
        barracks_ = java.util.Collections.unmodifiableList(barracks_);
      }
      if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
        buffs_ = java.util.Collections.unmodifiableList(buffs_);
      }
      if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
        friendApplys_ = java.util.Collections.unmodifiableList(friendApplys_);
      }
      if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
        newItem_ = java.util.Collections.unmodifiableList(newItem_);
      }
      if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
        fogs_ = java.util.Collections.unmodifiableList(fogs_);
      }
      if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
        enterTimeInfo_ = java.util.Collections.unmodifiableList(enterTimeInfo_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_EnterGameRt_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_EnterGameRt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.EnterGameRt.class, pb4client.EnterGameRt.Builder.class);
  }

  private int bitField0_;
  public static final int RT_FIELD_NUMBER = 1;
  private int rt_;
  /**
   * <code>required int32 rt = 1;</code>
   */
  public boolean hasRt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int32 rt = 1;</code>
   */
  public int getRt() {
    return rt_;
  }

  public static final int TIME_FIELD_NUMBER = 4;
  private long time_;
  /**
   * <code>optional int64 time = 4;</code>
   */
  public boolean hasTime() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int64 time = 4;</code>
   */
  public long getTime() {
    return time_;
  }

  public static final int CITYINFO_FIELD_NUMBER = 7;
  private java.util.List<pb4client.CityInfo> cityInfo_;
  /**
   * <pre>
   *城池信息
   * </pre>
   *
   * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
   */
  public java.util.List<pb4client.CityInfo> getCityInfoList() {
    return cityInfo_;
  }
  /**
   * <pre>
   *城池信息
   * </pre>
   *
   * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
   */
  public java.util.List<? extends pb4client.CityInfoOrBuilder> 
      getCityInfoOrBuilderList() {
    return cityInfo_;
  }
  /**
   * <pre>
   *城池信息
   * </pre>
   *
   * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
   */
  public int getCityInfoCount() {
    return cityInfo_.size();
  }
  /**
   * <pre>
   *城池信息
   * </pre>
   *
   * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
   */
  public pb4client.CityInfo getCityInfo(int index) {
    return cityInfo_.get(index);
  }
  /**
   * <pre>
   *城池信息
   * </pre>
   *
   * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
   */
  public pb4client.CityInfoOrBuilder getCityInfoOrBuilder(
      int index) {
    return cityInfo_.get(index);
  }

  public static final int HEROSTATEINFO_FIELD_NUMBER = 8;
  private java.util.List<pb4client.HeroStateInFo> heroStateInfo_;
  /**
   * <pre>
   *武将状态信息
   * </pre>
   *
   * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
   */
  public java.util.List<pb4client.HeroStateInFo> getHeroStateInfoList() {
    return heroStateInfo_;
  }
  /**
   * <pre>
   *武将状态信息
   * </pre>
   *
   * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
   */
  public java.util.List<? extends pb4client.HeroStateInFoOrBuilder> 
      getHeroStateInfoOrBuilderList() {
    return heroStateInfo_;
  }
  /**
   * <pre>
   *武将状态信息
   * </pre>
   *
   * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
   */
  public int getHeroStateInfoCount() {
    return heroStateInfo_.size();
  }
  /**
   * <pre>
   *武将状态信息
   * </pre>
   *
   * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
   */
  public pb4client.HeroStateInFo getHeroStateInfo(int index) {
    return heroStateInfo_.get(index);
  }
  /**
   * <pre>
   *武将状态信息
   * </pre>
   *
   * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
   */
  public pb4client.HeroStateInFoOrBuilder getHeroStateInfoOrBuilder(
      int index) {
    return heroStateInfo_.get(index);
  }

  public static final int PLAYERID_FIELD_NUMBER = 12;
  private long playerId_;
  /**
   * <pre>
   *玩家Id
   * </pre>
   *
   * <code>optional int64 playerId = 12;</code>
   */
  public boolean hasPlayerId() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   *玩家Id
   * </pre>
   *
   * <code>optional int64 playerId = 12;</code>
   */
  public long getPlayerId() {
    return playerId_;
  }

  public static final int DECREECHANGE_FIELD_NUMBER = 14;
  private pb4client.DecreeChange decreeChange_;
  /**
   * <pre>
   *当前政令数与时间与上限
   * </pre>
   *
   * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
   */
  public boolean hasDecreeChange() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   *当前政令数与时间与上限
   * </pre>
   *
   * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
   */
  public pb4client.DecreeChange getDecreeChange() {
    return decreeChange_ == null ? pb4client.DecreeChange.getDefaultInstance() : decreeChange_;
  }
  /**
   * <pre>
   *当前政令数与时间与上限
   * </pre>
   *
   * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
   */
  public pb4client.DecreeChangeOrBuilder getDecreeChangeOrBuilder() {
    return decreeChange_ == null ? pb4client.DecreeChange.getDefaultInstance() : decreeChange_;
  }

  public static final int TASKS_FIELD_NUMBER = 20;
  private java.util.List<pb4client.Task> tasks_;
  /**
   * <pre>
   *我身上当前的任务
   * </pre>
   *
   * <code>repeated .client2server.Task tasks = 20;</code>
   */
  public java.util.List<pb4client.Task> getTasksList() {
    return tasks_;
  }
  /**
   * <pre>
   *我身上当前的任务
   * </pre>
   *
   * <code>repeated .client2server.Task tasks = 20;</code>
   */
  public java.util.List<? extends pb4client.TaskOrBuilder> 
      getTasksOrBuilderList() {
    return tasks_;
  }
  /**
   * <pre>
   *我身上当前的任务
   * </pre>
   *
   * <code>repeated .client2server.Task tasks = 20;</code>
   */
  public int getTasksCount() {
    return tasks_.size();
  }
  /**
   * <pre>
   *我身上当前的任务
   * </pre>
   *
   * <code>repeated .client2server.Task tasks = 20;</code>
   */
  public pb4client.Task getTasks(int index) {
    return tasks_.get(index);
  }
  /**
   * <pre>
   *我身上当前的任务
   * </pre>
   *
   * <code>repeated .client2server.Task tasks = 20;</code>
   */
  public pb4client.TaskOrBuilder getTasksOrBuilder(
      int index) {
    return tasks_.get(index);
  }

  public static final int BAGINFO_FIELD_NUMBER = 30;
  private java.util.List<pb4client.BagInfo> bagInfo_;
  /**
   * <pre>
   *背包物品信息
   * </pre>
   *
   * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
   */
  public java.util.List<pb4client.BagInfo> getBagInfoList() {
    return bagInfo_;
  }
  /**
   * <pre>
   *背包物品信息
   * </pre>
   *
   * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
   */
  public java.util.List<? extends pb4client.BagInfoOrBuilder> 
      getBagInfoOrBuilderList() {
    return bagInfo_;
  }
  /**
   * <pre>
   *背包物品信息
   * </pre>
   *
   * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
   */
  public int getBagInfoCount() {
    return bagInfo_.size();
  }
  /**
   * <pre>
   *背包物品信息
   * </pre>
   *
   * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
   */
  public pb4client.BagInfo getBagInfo(int index) {
    return bagInfo_.get(index);
  }
  /**
   * <pre>
   *背包物品信息
   * </pre>
   *
   * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
   */
  public pb4client.BagInfoOrBuilder getBagInfoOrBuilder(
      int index) {
    return bagInfo_.get(index);
  }

  public static final int SERVERINFO_FIELD_NUMBER = 31;
  private pb4client.ServerInfo serverInfo_;
  /**
   * <pre>
   *服务器相关信息
   * </pre>
   *
   * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
   */
  public boolean hasServerInfo() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *服务器相关信息
   * </pre>
   *
   * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
   */
  public pb4client.ServerInfo getServerInfo() {
    return serverInfo_ == null ? pb4client.ServerInfo.getDefaultInstance() : serverInfo_;
  }
  /**
   * <pre>
   *服务器相关信息
   * </pre>
   *
   * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
   */
  public pb4client.ServerInfoOrBuilder getServerInfoOrBuilder() {
    return serverInfo_ == null ? pb4client.ServerInfo.getDefaultInstance() : serverInfo_;
  }

  public static final int ALLIANCEMARKS_FIELD_NUMBER = 37;
  private java.util.List<pb4client.AllianceMarkInfo> allianceMarks_;
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
   */
  public java.util.List<pb4client.AllianceMarkInfo> getAllianceMarksList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
   */
  public java.util.List<? extends pb4client.AllianceMarkInfoOrBuilder> 
      getAllianceMarksOrBuilderList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
   */
  public int getAllianceMarksCount() {
    return allianceMarks_.size();
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
   */
  public pb4client.AllianceMarkInfo getAllianceMarks(int index) {
    return allianceMarks_.get(index);
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
   */
  public pb4client.AllianceMarkInfoOrBuilder getAllianceMarksOrBuilder(
      int index) {
    return allianceMarks_.get(index);
  }

  public static final int CHATINFOS_FIELD_NUMBER = 48;
  private java.util.List<pb4client.ChatInfo> chatInfos_;
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
   */
  public java.util.List<pb4client.ChatInfo> getChatInfosList() {
    return chatInfos_;
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
   */
  public java.util.List<? extends pb4client.ChatInfoOrBuilder> 
      getChatInfosOrBuilderList() {
    return chatInfos_;
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
   */
  public int getChatInfosCount() {
    return chatInfos_.size();
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
   */
  public pb4client.ChatInfo getChatInfos(int index) {
    return chatInfos_.get(index);
  }
  /**
   * <pre>
   *聊天历史
   * </pre>
   *
   * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
   */
  public pb4client.ChatInfoOrBuilder getChatInfosOrBuilder(
      int index) {
    return chatInfos_.get(index);
  }

  public static final int NEWMAILNUM_FIELD_NUMBER = 53;
  private java.util.List<java.lang.Integer> newMailNum_;
  /**
   * <pre>
   *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
   * </pre>
   *
   * <code>repeated int32 newMailNum = 53;</code>
   */
  public java.util.List<java.lang.Integer>
      getNewMailNumList() {
    return newMailNum_;
  }
  /**
   * <pre>
   *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
   * </pre>
   *
   * <code>repeated int32 newMailNum = 53;</code>
   */
  public int getNewMailNumCount() {
    return newMailNum_.size();
  }
  /**
   * <pre>
   *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
   * </pre>
   *
   * <code>repeated int32 newMailNum = 53;</code>
   */
  public int getNewMailNum(int index) {
    return newMailNum_.get(index);
  }

  public static final int REDPOINTS_FIELD_NUMBER = 60;
  private java.util.List<pb4client.RedPoint> redPoints_;
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 60;</code>
   */
  public java.util.List<pb4client.RedPoint> getRedPointsList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 60;</code>
   */
  public java.util.List<? extends pb4client.RedPointOrBuilder> 
      getRedPointsOrBuilderList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 60;</code>
   */
  public int getRedPointsCount() {
    return redPoints_.size();
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 60;</code>
   */
  public pb4client.RedPoint getRedPoints(int index) {
    return redPoints_.get(index);
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .client2server.RedPoint redPoints = 60;</code>
   */
  public pb4client.RedPointOrBuilder getRedPointsOrBuilder(
      int index) {
    return redPoints_.get(index);
  }

  public static final int BARRACKS_FIELD_NUMBER = 70;
  private java.util.List<pb4client.BarracksInfo> barracks_;
  /**
   * <pre>
   * 玩家的造兵信息(只有造兵数据)
   * </pre>
   *
   * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
   */
  public java.util.List<pb4client.BarracksInfo> getBarracksList() {
    return barracks_;
  }
  /**
   * <pre>
   * 玩家的造兵信息(只有造兵数据)
   * </pre>
   *
   * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
   */
  public java.util.List<? extends pb4client.BarracksInfoOrBuilder> 
      getBarracksOrBuilderList() {
    return barracks_;
  }
  /**
   * <pre>
   * 玩家的造兵信息(只有造兵数据)
   * </pre>
   *
   * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
   */
  public int getBarracksCount() {
    return barracks_.size();
  }
  /**
   * <pre>
   * 玩家的造兵信息(只有造兵数据)
   * </pre>
   *
   * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
   */
  public pb4client.BarracksInfo getBarracks(int index) {
    return barracks_.get(index);
  }
  /**
   * <pre>
   * 玩家的造兵信息(只有造兵数据)
   * </pre>
   *
   * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
   */
  public pb4client.BarracksInfoOrBuilder getBarracksOrBuilder(
      int index) {
    return barracks_.get(index);
  }

  public static final int INFO_FIELD_NUMBER = 92;
  private pb4client.CaveInfo info_;
  /**
   * <pre>
   * 当前藏兵信息
   * </pre>
   *
   * <code>optional .client2server.CaveInfo info = 92;</code>
   */
  public boolean hasInfo() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 当前藏兵信息
   * </pre>
   *
   * <code>optional .client2server.CaveInfo info = 92;</code>
   */
  public pb4client.CaveInfo getInfo() {
    return info_ == null ? pb4client.CaveInfo.getDefaultInstance() : info_;
  }
  /**
   * <pre>
   * 当前藏兵信息
   * </pre>
   *
   * <code>optional .client2server.CaveInfo info = 92;</code>
   */
  public pb4client.CaveInfoOrBuilder getInfoOrBuilder() {
    return info_ == null ? pb4client.CaveInfo.getDefaultInstance() : info_;
  }

  public static final int BUFFS_FIELD_NUMBER = 97;
  private java.util.List<pb4client.BuffVo> buffs_;
  /**
   * <pre>
   * 玩家的buff集合
   * </pre>
   *
   * <code>repeated .client2server.BuffVo buffs = 97;</code>
   */
  public java.util.List<pb4client.BuffVo> getBuffsList() {
    return buffs_;
  }
  /**
   * <pre>
   * 玩家的buff集合
   * </pre>
   *
   * <code>repeated .client2server.BuffVo buffs = 97;</code>
   */
  public java.util.List<? extends pb4client.BuffVoOrBuilder> 
      getBuffsOrBuilderList() {
    return buffs_;
  }
  /**
   * <pre>
   * 玩家的buff集合
   * </pre>
   *
   * <code>repeated .client2server.BuffVo buffs = 97;</code>
   */
  public int getBuffsCount() {
    return buffs_.size();
  }
  /**
   * <pre>
   * 玩家的buff集合
   * </pre>
   *
   * <code>repeated .client2server.BuffVo buffs = 97;</code>
   */
  public pb4client.BuffVo getBuffs(int index) {
    return buffs_.get(index);
  }
  /**
   * <pre>
   * 玩家的buff集合
   * </pre>
   *
   * <code>repeated .client2server.BuffVo buffs = 97;</code>
   */
  public pb4client.BuffVoOrBuilder getBuffsOrBuilder(
      int index) {
    return buffs_.get(index);
  }

  public static final int TOTALPOWER_FIELD_NUMBER = 105;
  private long totalPower_;
  /**
   * <pre>
   *总实力
   * </pre>
   *
   * <code>optional int64 totalPower = 105;</code>
   */
  public boolean hasTotalPower() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *总实力
   * </pre>
   *
   * <code>optional int64 totalPower = 105;</code>
   */
  public long getTotalPower() {
    return totalPower_;
  }

  public static final int FRIENDAPPLYS_FIELD_NUMBER = 119;
  private java.util.List<pb4client.FriendApply> friendApplys_;
  /**
   * <pre>
   * 加我为好友的人信息
   * </pre>
   *
   * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
   */
  public java.util.List<pb4client.FriendApply> getFriendApplysList() {
    return friendApplys_;
  }
  /**
   * <pre>
   * 加我为好友的人信息
   * </pre>
   *
   * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
   */
  public java.util.List<? extends pb4client.FriendApplyOrBuilder> 
      getFriendApplysOrBuilderList() {
    return friendApplys_;
  }
  /**
   * <pre>
   * 加我为好友的人信息
   * </pre>
   *
   * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
   */
  public int getFriendApplysCount() {
    return friendApplys_.size();
  }
  /**
   * <pre>
   * 加我为好友的人信息
   * </pre>
   *
   * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
   */
  public pb4client.FriendApply getFriendApplys(int index) {
    return friendApplys_.get(index);
  }
  /**
   * <pre>
   * 加我为好友的人信息
   * </pre>
   *
   * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
   */
  public pb4client.FriendApplyOrBuilder getFriendApplysOrBuilder(
      int index) {
    return friendApplys_.get(index);
  }

  public static final int STRENGTH_FIELD_NUMBER = 122;
  private int strength_;
  /**
   * <pre>
   *体力值 
   * </pre>
   *
   * <code>optional int32 strength = 122;</code>
   */
  public boolean hasStrength() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *体力值 
   * </pre>
   *
   * <code>optional int32 strength = 122;</code>
   */
  public int getStrength() {
    return strength_;
  }

  public static final int STRENGTHTIME_FIELD_NUMBER = 123;
  private int strengthTime_;
  /**
   * <pre>
   *玩家是当前体力值的时间
   * </pre>
   *
   * <code>optional int32 strengthTime = 123;</code>
   */
  public boolean hasStrengthTime() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *玩家是当前体力值的时间
   * </pre>
   *
   * <code>optional int32 strengthTime = 123;</code>
   */
  public int getStrengthTime() {
    return strengthTime_;
  }

  public static final int NOWINSTANCEID_FIELD_NUMBER = 128;
  private int nowInstanceId_;
  /**
   * <pre>
   *当前推图关卡Id
   * </pre>
   *
   * <code>optional int32 nowInstanceId = 128;</code>
   */
  public boolean hasNowInstanceId() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *当前推图关卡Id
   * </pre>
   *
   * <code>optional int32 nowInstanceId = 128;</code>
   */
  public int getNowInstanceId() {
    return nowInstanceId_;
  }

  public static final int NEWITEM_FIELD_NUMBER = 137;
  private java.util.List<java.lang.Integer> newItem_;
  /**
   * <pre>
   * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
   * </pre>
   *
   * <code>repeated int32 newItem = 137;</code>
   */
  public java.util.List<java.lang.Integer>
      getNewItemList() {
    return newItem_;
  }
  /**
   * <pre>
   * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
   * </pre>
   *
   * <code>repeated int32 newItem = 137;</code>
   */
  public int getNewItemCount() {
    return newItem_.size();
  }
  /**
   * <pre>
   * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
   * </pre>
   *
   * <code>repeated int32 newItem = 137;</code>
   */
  public int getNewItem(int index) {
    return newItem_.get(index);
  }

  public static final int FOGS_FIELD_NUMBER = 140;
  private java.util.List<pb4client.FogInfo> fogs_;
  /**
   * <pre>
   *迷雾信息
   * </pre>
   *
   * <code>repeated .client2server.FogInfo fogs = 140;</code>
   */
  public java.util.List<pb4client.FogInfo> getFogsList() {
    return fogs_;
  }
  /**
   * <pre>
   *迷雾信息
   * </pre>
   *
   * <code>repeated .client2server.FogInfo fogs = 140;</code>
   */
  public java.util.List<? extends pb4client.FogInfoOrBuilder> 
      getFogsOrBuilderList() {
    return fogs_;
  }
  /**
   * <pre>
   *迷雾信息
   * </pre>
   *
   * <code>repeated .client2server.FogInfo fogs = 140;</code>
   */
  public int getFogsCount() {
    return fogs_.size();
  }
  /**
   * <pre>
   *迷雾信息
   * </pre>
   *
   * <code>repeated .client2server.FogInfo fogs = 140;</code>
   */
  public pb4client.FogInfo getFogs(int index) {
    return fogs_.get(index);
  }
  /**
   * <pre>
   *迷雾信息
   * </pre>
   *
   * <code>repeated .client2server.FogInfo fogs = 140;</code>
   */
  public pb4client.FogInfoOrBuilder getFogsOrBuilder(
      int index) {
    return fogs_.get(index);
  }

  public static final int ENTERTIMEINFO_FIELD_NUMBER = 142;
  private java.util.List<pb4client.ActivityEnterTimeInfo> enterTimeInfo_;
  /**
   * <pre>
   * 活动开放时间
   * </pre>
   *
   * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
   */
  public java.util.List<pb4client.ActivityEnterTimeInfo> getEnterTimeInfoList() {
    return enterTimeInfo_;
  }
  /**
   * <pre>
   * 活动开放时间
   * </pre>
   *
   * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
   */
  public java.util.List<? extends pb4client.ActivityEnterTimeInfoOrBuilder> 
      getEnterTimeInfoOrBuilderList() {
    return enterTimeInfo_;
  }
  /**
   * <pre>
   * 活动开放时间
   * </pre>
   *
   * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
   */
  public int getEnterTimeInfoCount() {
    return enterTimeInfo_.size();
  }
  /**
   * <pre>
   * 活动开放时间
   * </pre>
   *
   * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
   */
  public pb4client.ActivityEnterTimeInfo getEnterTimeInfo(int index) {
    return enterTimeInfo_.get(index);
  }
  /**
   * <pre>
   * 活动开放时间
   * </pre>
   *
   * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
   */
  public pb4client.ActivityEnterTimeInfoOrBuilder getEnterTimeInfoOrBuilder(
      int index) {
    return enterTimeInfo_.get(index);
  }

  public static final int NEWPLAYERACTIVITY_FIELD_NUMBER = 144;
  private int newPlayerActivity_;
  /**
   * <pre>
   * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
   * </pre>
   *
   * <code>optional int32 newPlayerActivity = 144;</code>
   */
  public boolean hasNewPlayerActivity() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
   * </pre>
   *
   * <code>optional int32 newPlayerActivity = 144;</code>
   */
  public int getNewPlayerActivity() {
    return newPlayerActivity_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRt()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getCityInfoCount(); i++) {
      if (!getCityInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getHeroStateInfoCount(); i++) {
      if (!getHeroStateInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getTasksCount(); i++) {
      if (!getTasks(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getBagInfoCount(); i++) {
      if (!getBagInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasServerInfo()) {
      if (!getServerInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getAllianceMarksCount(); i++) {
      if (!getAllianceMarks(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getChatInfosCount(); i++) {
      if (!getChatInfos(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getRedPointsCount(); i++) {
      if (!getRedPoints(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getBarracksCount(); i++) {
      if (!getBarracks(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasInfo()) {
      if (!getInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getBuffsCount(); i++) {
      if (!getBuffs(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getFriendApplysCount(); i++) {
      if (!getFriendApplys(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getFogsCount(); i++) {
      if (!getFogs(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getEnterTimeInfoCount(); i++) {
      if (!getEnterTimeInfo(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(4, time_);
    }
    for (int i = 0; i < cityInfo_.size(); i++) {
      output.writeMessage(7, cityInfo_.get(i));
    }
    for (int i = 0; i < heroStateInfo_.size(); i++) {
      output.writeMessage(8, heroStateInfo_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(12, playerId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(14, getDecreeChange());
    }
    for (int i = 0; i < tasks_.size(); i++) {
      output.writeMessage(20, tasks_.get(i));
    }
    for (int i = 0; i < bagInfo_.size(); i++) {
      output.writeMessage(30, bagInfo_.get(i));
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(31, getServerInfo());
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      output.writeMessage(37, allianceMarks_.get(i));
    }
    for (int i = 0; i < chatInfos_.size(); i++) {
      output.writeMessage(48, chatInfos_.get(i));
    }
    for (int i = 0; i < newMailNum_.size(); i++) {
      output.writeInt32(53, newMailNum_.get(i));
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      output.writeMessage(60, redPoints_.get(i));
    }
    for (int i = 0; i < barracks_.size(); i++) {
      output.writeMessage(70, barracks_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(92, getInfo());
    }
    for (int i = 0; i < buffs_.size(); i++) {
      output.writeMessage(97, buffs_.get(i));
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(105, totalPower_);
    }
    for (int i = 0; i < friendApplys_.size(); i++) {
      output.writeMessage(119, friendApplys_.get(i));
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(122, strength_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(123, strengthTime_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(128, nowInstanceId_);
    }
    for (int i = 0; i < newItem_.size(); i++) {
      output.writeInt32(137, newItem_.get(i));
    }
    for (int i = 0; i < fogs_.size(); i++) {
      output.writeMessage(140, fogs_.get(i));
    }
    for (int i = 0; i < enterTimeInfo_.size(); i++) {
      output.writeMessage(142, enterTimeInfo_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(144, newPlayerActivity_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, rt_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, time_);
    }
    for (int i = 0; i < cityInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, cityInfo_.get(i));
    }
    for (int i = 0; i < heroStateInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, heroStateInfo_.get(i));
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, playerId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getDecreeChange());
    }
    for (int i = 0; i < tasks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, tasks_.get(i));
    }
    for (int i = 0; i < bagInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(30, bagInfo_.get(i));
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, getServerInfo());
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(37, allianceMarks_.get(i));
    }
    for (int i = 0; i < chatInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(48, chatInfos_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < newMailNum_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(newMailNum_.get(i));
      }
      size += dataSize;
      size += 2 * getNewMailNumList().size();
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(60, redPoints_.get(i));
    }
    for (int i = 0; i < barracks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(70, barracks_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(92, getInfo());
    }
    for (int i = 0; i < buffs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(97, buffs_.get(i));
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(105, totalPower_);
    }
    for (int i = 0; i < friendApplys_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(119, friendApplys_.get(i));
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(122, strength_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(123, strengthTime_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(128, nowInstanceId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < newItem_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(newItem_.get(i));
      }
      size += dataSize;
      size += 2 * getNewItemList().size();
    }
    for (int i = 0; i < fogs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(140, fogs_.get(i));
    }
    for (int i = 0; i < enterTimeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(142, enterTimeInfo_.get(i));
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(144, newPlayerActivity_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.EnterGameRt)) {
      return super.equals(obj);
    }
    pb4client.EnterGameRt other = (pb4client.EnterGameRt) obj;

    boolean result = true;
    result = result && (hasRt() == other.hasRt());
    if (hasRt()) {
      result = result && (getRt()
          == other.getRt());
    }
    result = result && (hasTime() == other.hasTime());
    if (hasTime()) {
      result = result && (getTime()
          == other.getTime());
    }
    result = result && getCityInfoList()
        .equals(other.getCityInfoList());
    result = result && getHeroStateInfoList()
        .equals(other.getHeroStateInfoList());
    result = result && (hasPlayerId() == other.hasPlayerId());
    if (hasPlayerId()) {
      result = result && (getPlayerId()
          == other.getPlayerId());
    }
    result = result && (hasDecreeChange() == other.hasDecreeChange());
    if (hasDecreeChange()) {
      result = result && getDecreeChange()
          .equals(other.getDecreeChange());
    }
    result = result && getTasksList()
        .equals(other.getTasksList());
    result = result && getBagInfoList()
        .equals(other.getBagInfoList());
    result = result && (hasServerInfo() == other.hasServerInfo());
    if (hasServerInfo()) {
      result = result && getServerInfo()
          .equals(other.getServerInfo());
    }
    result = result && getAllianceMarksList()
        .equals(other.getAllianceMarksList());
    result = result && getChatInfosList()
        .equals(other.getChatInfosList());
    result = result && getNewMailNumList()
        .equals(other.getNewMailNumList());
    result = result && getRedPointsList()
        .equals(other.getRedPointsList());
    result = result && getBarracksList()
        .equals(other.getBarracksList());
    result = result && (hasInfo() == other.hasInfo());
    if (hasInfo()) {
      result = result && getInfo()
          .equals(other.getInfo());
    }
    result = result && getBuffsList()
        .equals(other.getBuffsList());
    result = result && (hasTotalPower() == other.hasTotalPower());
    if (hasTotalPower()) {
      result = result && (getTotalPower()
          == other.getTotalPower());
    }
    result = result && getFriendApplysList()
        .equals(other.getFriendApplysList());
    result = result && (hasStrength() == other.hasStrength());
    if (hasStrength()) {
      result = result && (getStrength()
          == other.getStrength());
    }
    result = result && (hasStrengthTime() == other.hasStrengthTime());
    if (hasStrengthTime()) {
      result = result && (getStrengthTime()
          == other.getStrengthTime());
    }
    result = result && (hasNowInstanceId() == other.hasNowInstanceId());
    if (hasNowInstanceId()) {
      result = result && (getNowInstanceId()
          == other.getNowInstanceId());
    }
    result = result && getNewItemList()
        .equals(other.getNewItemList());
    result = result && getFogsList()
        .equals(other.getFogsList());
    result = result && getEnterTimeInfoList()
        .equals(other.getEnterTimeInfoList());
    result = result && (hasNewPlayerActivity() == other.hasNewPlayerActivity());
    if (hasNewPlayerActivity()) {
      result = result && (getNewPlayerActivity()
          == other.getNewPlayerActivity());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRt()) {
      hash = (37 * hash) + RT_FIELD_NUMBER;
      hash = (53 * hash) + getRt();
    }
    if (hasTime()) {
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
    }
    if (getCityInfoCount() > 0) {
      hash = (37 * hash) + CITYINFO_FIELD_NUMBER;
      hash = (53 * hash) + getCityInfoList().hashCode();
    }
    if (getHeroStateInfoCount() > 0) {
      hash = (37 * hash) + HEROSTATEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getHeroStateInfoList().hashCode();
    }
    if (hasPlayerId()) {
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPlayerId());
    }
    if (hasDecreeChange()) {
      hash = (37 * hash) + DECREECHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getDecreeChange().hashCode();
    }
    if (getTasksCount() > 0) {
      hash = (37 * hash) + TASKS_FIELD_NUMBER;
      hash = (53 * hash) + getTasksList().hashCode();
    }
    if (getBagInfoCount() > 0) {
      hash = (37 * hash) + BAGINFO_FIELD_NUMBER;
      hash = (53 * hash) + getBagInfoList().hashCode();
    }
    if (hasServerInfo()) {
      hash = (37 * hash) + SERVERINFO_FIELD_NUMBER;
      hash = (53 * hash) + getServerInfo().hashCode();
    }
    if (getAllianceMarksCount() > 0) {
      hash = (37 * hash) + ALLIANCEMARKS_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceMarksList().hashCode();
    }
    if (getChatInfosCount() > 0) {
      hash = (37 * hash) + CHATINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getChatInfosList().hashCode();
    }
    if (getNewMailNumCount() > 0) {
      hash = (37 * hash) + NEWMAILNUM_FIELD_NUMBER;
      hash = (53 * hash) + getNewMailNumList().hashCode();
    }
    if (getRedPointsCount() > 0) {
      hash = (37 * hash) + REDPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getRedPointsList().hashCode();
    }
    if (getBarracksCount() > 0) {
      hash = (37 * hash) + BARRACKS_FIELD_NUMBER;
      hash = (53 * hash) + getBarracksList().hashCode();
    }
    if (hasInfo()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
    }
    if (getBuffsCount() > 0) {
      hash = (37 * hash) + BUFFS_FIELD_NUMBER;
      hash = (53 * hash) + getBuffsList().hashCode();
    }
    if (hasTotalPower()) {
      hash = (37 * hash) + TOTALPOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalPower());
    }
    if (getFriendApplysCount() > 0) {
      hash = (37 * hash) + FRIENDAPPLYS_FIELD_NUMBER;
      hash = (53 * hash) + getFriendApplysList().hashCode();
    }
    if (hasStrength()) {
      hash = (37 * hash) + STRENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getStrength();
    }
    if (hasStrengthTime()) {
      hash = (37 * hash) + STRENGTHTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStrengthTime();
    }
    if (hasNowInstanceId()) {
      hash = (37 * hash) + NOWINSTANCEID_FIELD_NUMBER;
      hash = (53 * hash) + getNowInstanceId();
    }
    if (getNewItemCount() > 0) {
      hash = (37 * hash) + NEWITEM_FIELD_NUMBER;
      hash = (53 * hash) + getNewItemList().hashCode();
    }
    if (getFogsCount() > 0) {
      hash = (37 * hash) + FOGS_FIELD_NUMBER;
      hash = (53 * hash) + getFogsList().hashCode();
    }
    if (getEnterTimeInfoCount() > 0) {
      hash = (37 * hash) + ENTERTIMEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getEnterTimeInfoList().hashCode();
    }
    if (hasNewPlayerActivity()) {
      hash = (37 * hash) + NEWPLAYERACTIVITY_FIELD_NUMBER;
      hash = (53 * hash) + getNewPlayerActivity();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.EnterGameRt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGameRt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGameRt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGameRt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGameRt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.EnterGameRt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.EnterGameRt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.EnterGameRt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.EnterGameRt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.EnterGameRt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.EnterGameRt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.EnterGameRt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.EnterGameRt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.EnterGameRt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.EnterGameRt)
      pb4client.EnterGameRtOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGameRt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGameRt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.EnterGameRt.class, pb4client.EnterGameRt.Builder.class);
    }

    // Construct using pb4client.EnterGameRt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCityInfoFieldBuilder();
        getHeroStateInfoFieldBuilder();
        getDecreeChangeFieldBuilder();
        getTasksFieldBuilder();
        getBagInfoFieldBuilder();
        getServerInfoFieldBuilder();
        getAllianceMarksFieldBuilder();
        getChatInfosFieldBuilder();
        getRedPointsFieldBuilder();
        getBarracksFieldBuilder();
        getInfoFieldBuilder();
        getBuffsFieldBuilder();
        getFriendApplysFieldBuilder();
        getFogsFieldBuilder();
        getEnterTimeInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      rt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      time_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (cityInfoBuilder_ == null) {
        cityInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        cityInfoBuilder_.clear();
      }
      if (heroStateInfoBuilder_ == null) {
        heroStateInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        heroStateInfoBuilder_.clear();
      }
      playerId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (decreeChangeBuilder_ == null) {
        decreeChange_ = null;
      } else {
        decreeChangeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        tasksBuilder_.clear();
      }
      if (bagInfoBuilder_ == null) {
        bagInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        bagInfoBuilder_.clear();
      }
      if (serverInfoBuilder_ == null) {
        serverInfo_ = null;
      } else {
        serverInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        allianceMarksBuilder_.clear();
      }
      if (chatInfosBuilder_ == null) {
        chatInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
      } else {
        chatInfosBuilder_.clear();
      }
      newMailNum_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        redPointsBuilder_.clear();
      }
      if (barracksBuilder_ == null) {
        barracks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
      } else {
        barracksBuilder_.clear();
      }
      if (infoBuilder_ == null) {
        info_ = null;
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      if (buffsBuilder_ == null) {
        buffs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
      } else {
        buffsBuilder_.clear();
      }
      totalPower_ = 0L;
      bitField0_ = (bitField0_ & ~0x00010000);
      if (friendApplysBuilder_ == null) {
        friendApplys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
      } else {
        friendApplysBuilder_.clear();
      }
      strength_ = 0;
      bitField0_ = (bitField0_ & ~0x00040000);
      strengthTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00080000);
      nowInstanceId_ = 0;
      bitField0_ = (bitField0_ & ~0x00100000);
      newItem_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00200000);
      if (fogsBuilder_ == null) {
        fogs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
      } else {
        fogsBuilder_.clear();
      }
      if (enterTimeInfoBuilder_ == null) {
        enterTimeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
      } else {
        enterTimeInfoBuilder_.clear();
      }
      newPlayerActivity_ = 0;
      bitField0_ = (bitField0_ & ~0x01000000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_EnterGameRt_descriptor;
    }

    public pb4client.EnterGameRt getDefaultInstanceForType() {
      return pb4client.EnterGameRt.getDefaultInstance();
    }

    public pb4client.EnterGameRt build() {
      pb4client.EnterGameRt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.EnterGameRt buildPartial() {
      pb4client.EnterGameRt result = new pb4client.EnterGameRt(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.rt_ = rt_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.time_ = time_;
      if (cityInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cityInfo_ = java.util.Collections.unmodifiableList(cityInfo_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cityInfo_ = cityInfo_;
      } else {
        result.cityInfo_ = cityInfoBuilder_.build();
      }
      if (heroStateInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          heroStateInfo_ = java.util.Collections.unmodifiableList(heroStateInfo_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.heroStateInfo_ = heroStateInfo_;
      } else {
        result.heroStateInfo_ = heroStateInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000004;
      }
      result.playerId_ = playerId_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000008;
      }
      if (decreeChangeBuilder_ == null) {
        result.decreeChange_ = decreeChange_;
      } else {
        result.decreeChange_ = decreeChangeBuilder_.build();
      }
      if (tasksBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          tasks_ = java.util.Collections.unmodifiableList(tasks_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.tasks_ = tasks_;
      } else {
        result.tasks_ = tasksBuilder_.build();
      }
      if (bagInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          bagInfo_ = java.util.Collections.unmodifiableList(bagInfo_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.bagInfo_ = bagInfo_;
      } else {
        result.bagInfo_ = bagInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000010;
      }
      if (serverInfoBuilder_ == null) {
        result.serverInfo_ = serverInfo_;
      } else {
        result.serverInfo_ = serverInfoBuilder_.build();
      }
      if (allianceMarksBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.allianceMarks_ = allianceMarks_;
      } else {
        result.allianceMarks_ = allianceMarksBuilder_.build();
      }
      if (chatInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          chatInfos_ = java.util.Collections.unmodifiableList(chatInfos_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.chatInfos_ = chatInfos_;
      } else {
        result.chatInfos_ = chatInfosBuilder_.build();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        newMailNum_ = java.util.Collections.unmodifiableList(newMailNum_);
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.newMailNum_ = newMailNum_;
      if (redPointsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.redPoints_ = redPoints_;
      } else {
        result.redPoints_ = redPointsBuilder_.build();
      }
      if (barracksBuilder_ == null) {
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          barracks_ = java.util.Collections.unmodifiableList(barracks_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.barracks_ = barracks_;
      } else {
        result.barracks_ = barracksBuilder_.build();
      }
      if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
        to_bitField0_ |= 0x00000020;
      }
      if (infoBuilder_ == null) {
        result.info_ = info_;
      } else {
        result.info_ = infoBuilder_.build();
      }
      if (buffsBuilder_ == null) {
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          buffs_ = java.util.Collections.unmodifiableList(buffs_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.buffs_ = buffs_;
      } else {
        result.buffs_ = buffsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
        to_bitField0_ |= 0x00000040;
      }
      result.totalPower_ = totalPower_;
      if (friendApplysBuilder_ == null) {
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          friendApplys_ = java.util.Collections.unmodifiableList(friendApplys_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.friendApplys_ = friendApplys_;
      } else {
        result.friendApplys_ = friendApplysBuilder_.build();
      }
      if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
        to_bitField0_ |= 0x00000080;
      }
      result.strength_ = strength_;
      if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
        to_bitField0_ |= 0x00000100;
      }
      result.strengthTime_ = strengthTime_;
      if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
        to_bitField0_ |= 0x00000200;
      }
      result.nowInstanceId_ = nowInstanceId_;
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        newItem_ = java.util.Collections.unmodifiableList(newItem_);
        bitField0_ = (bitField0_ & ~0x00200000);
      }
      result.newItem_ = newItem_;
      if (fogsBuilder_ == null) {
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          fogs_ = java.util.Collections.unmodifiableList(fogs_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.fogs_ = fogs_;
      } else {
        result.fogs_ = fogsBuilder_.build();
      }
      if (enterTimeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          enterTimeInfo_ = java.util.Collections.unmodifiableList(enterTimeInfo_);
          bitField0_ = (bitField0_ & ~0x00800000);
        }
        result.enterTimeInfo_ = enterTimeInfo_;
      } else {
        result.enterTimeInfo_ = enterTimeInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
        to_bitField0_ |= 0x00000400;
      }
      result.newPlayerActivity_ = newPlayerActivity_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.EnterGameRt) {
        return mergeFrom((pb4client.EnterGameRt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.EnterGameRt other) {
      if (other == pb4client.EnterGameRt.getDefaultInstance()) return this;
      if (other.hasRt()) {
        setRt(other.getRt());
      }
      if (other.hasTime()) {
        setTime(other.getTime());
      }
      if (cityInfoBuilder_ == null) {
        if (!other.cityInfo_.isEmpty()) {
          if (cityInfo_.isEmpty()) {
            cityInfo_ = other.cityInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCityInfoIsMutable();
            cityInfo_.addAll(other.cityInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.cityInfo_.isEmpty()) {
          if (cityInfoBuilder_.isEmpty()) {
            cityInfoBuilder_.dispose();
            cityInfoBuilder_ = null;
            cityInfo_ = other.cityInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
            cityInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCityInfoFieldBuilder() : null;
          } else {
            cityInfoBuilder_.addAllMessages(other.cityInfo_);
          }
        }
      }
      if (heroStateInfoBuilder_ == null) {
        if (!other.heroStateInfo_.isEmpty()) {
          if (heroStateInfo_.isEmpty()) {
            heroStateInfo_ = other.heroStateInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHeroStateInfoIsMutable();
            heroStateInfo_.addAll(other.heroStateInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.heroStateInfo_.isEmpty()) {
          if (heroStateInfoBuilder_.isEmpty()) {
            heroStateInfoBuilder_.dispose();
            heroStateInfoBuilder_ = null;
            heroStateInfo_ = other.heroStateInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
            heroStateInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeroStateInfoFieldBuilder() : null;
          } else {
            heroStateInfoBuilder_.addAllMessages(other.heroStateInfo_);
          }
        }
      }
      if (other.hasPlayerId()) {
        setPlayerId(other.getPlayerId());
      }
      if (other.hasDecreeChange()) {
        mergeDecreeChange(other.getDecreeChange());
      }
      if (tasksBuilder_ == null) {
        if (!other.tasks_.isEmpty()) {
          if (tasks_.isEmpty()) {
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTasksIsMutable();
            tasks_.addAll(other.tasks_);
          }
          onChanged();
        }
      } else {
        if (!other.tasks_.isEmpty()) {
          if (tasksBuilder_.isEmpty()) {
            tasksBuilder_.dispose();
            tasksBuilder_ = null;
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00000040);
            tasksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTasksFieldBuilder() : null;
          } else {
            tasksBuilder_.addAllMessages(other.tasks_);
          }
        }
      }
      if (bagInfoBuilder_ == null) {
        if (!other.bagInfo_.isEmpty()) {
          if (bagInfo_.isEmpty()) {
            bagInfo_ = other.bagInfo_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureBagInfoIsMutable();
            bagInfo_.addAll(other.bagInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.bagInfo_.isEmpty()) {
          if (bagInfoBuilder_.isEmpty()) {
            bagInfoBuilder_.dispose();
            bagInfoBuilder_ = null;
            bagInfo_ = other.bagInfo_;
            bitField0_ = (bitField0_ & ~0x00000080);
            bagInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBagInfoFieldBuilder() : null;
          } else {
            bagInfoBuilder_.addAllMessages(other.bagInfo_);
          }
        }
      }
      if (other.hasServerInfo()) {
        mergeServerInfo(other.getServerInfo());
      }
      if (allianceMarksBuilder_ == null) {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarks_.isEmpty()) {
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureAllianceMarksIsMutable();
            allianceMarks_.addAll(other.allianceMarks_);
          }
          onChanged();
        }
      } else {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarksBuilder_.isEmpty()) {
            allianceMarksBuilder_.dispose();
            allianceMarksBuilder_ = null;
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00000200);
            allianceMarksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAllianceMarksFieldBuilder() : null;
          } else {
            allianceMarksBuilder_.addAllMessages(other.allianceMarks_);
          }
        }
      }
      if (chatInfosBuilder_ == null) {
        if (!other.chatInfos_.isEmpty()) {
          if (chatInfos_.isEmpty()) {
            chatInfos_ = other.chatInfos_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureChatInfosIsMutable();
            chatInfos_.addAll(other.chatInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.chatInfos_.isEmpty()) {
          if (chatInfosBuilder_.isEmpty()) {
            chatInfosBuilder_.dispose();
            chatInfosBuilder_ = null;
            chatInfos_ = other.chatInfos_;
            bitField0_ = (bitField0_ & ~0x00000400);
            chatInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChatInfosFieldBuilder() : null;
          } else {
            chatInfosBuilder_.addAllMessages(other.chatInfos_);
          }
        }
      }
      if (!other.newMailNum_.isEmpty()) {
        if (newMailNum_.isEmpty()) {
          newMailNum_ = other.newMailNum_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensureNewMailNumIsMutable();
          newMailNum_.addAll(other.newMailNum_);
        }
        onChanged();
      }
      if (redPointsBuilder_ == null) {
        if (!other.redPoints_.isEmpty()) {
          if (redPoints_.isEmpty()) {
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureRedPointsIsMutable();
            redPoints_.addAll(other.redPoints_);
          }
          onChanged();
        }
      } else {
        if (!other.redPoints_.isEmpty()) {
          if (redPointsBuilder_.isEmpty()) {
            redPointsBuilder_.dispose();
            redPointsBuilder_ = null;
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00001000);
            redPointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRedPointsFieldBuilder() : null;
          } else {
            redPointsBuilder_.addAllMessages(other.redPoints_);
          }
        }
      }
      if (barracksBuilder_ == null) {
        if (!other.barracks_.isEmpty()) {
          if (barracks_.isEmpty()) {
            barracks_ = other.barracks_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureBarracksIsMutable();
            barracks_.addAll(other.barracks_);
          }
          onChanged();
        }
      } else {
        if (!other.barracks_.isEmpty()) {
          if (barracksBuilder_.isEmpty()) {
            barracksBuilder_.dispose();
            barracksBuilder_ = null;
            barracks_ = other.barracks_;
            bitField0_ = (bitField0_ & ~0x00002000);
            barracksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBarracksFieldBuilder() : null;
          } else {
            barracksBuilder_.addAllMessages(other.barracks_);
          }
        }
      }
      if (other.hasInfo()) {
        mergeInfo(other.getInfo());
      }
      if (buffsBuilder_ == null) {
        if (!other.buffs_.isEmpty()) {
          if (buffs_.isEmpty()) {
            buffs_ = other.buffs_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureBuffsIsMutable();
            buffs_.addAll(other.buffs_);
          }
          onChanged();
        }
      } else {
        if (!other.buffs_.isEmpty()) {
          if (buffsBuilder_.isEmpty()) {
            buffsBuilder_.dispose();
            buffsBuilder_ = null;
            buffs_ = other.buffs_;
            bitField0_ = (bitField0_ & ~0x00008000);
            buffsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBuffsFieldBuilder() : null;
          } else {
            buffsBuilder_.addAllMessages(other.buffs_);
          }
        }
      }
      if (other.hasTotalPower()) {
        setTotalPower(other.getTotalPower());
      }
      if (friendApplysBuilder_ == null) {
        if (!other.friendApplys_.isEmpty()) {
          if (friendApplys_.isEmpty()) {
            friendApplys_ = other.friendApplys_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureFriendApplysIsMutable();
            friendApplys_.addAll(other.friendApplys_);
          }
          onChanged();
        }
      } else {
        if (!other.friendApplys_.isEmpty()) {
          if (friendApplysBuilder_.isEmpty()) {
            friendApplysBuilder_.dispose();
            friendApplysBuilder_ = null;
            friendApplys_ = other.friendApplys_;
            bitField0_ = (bitField0_ & ~0x00020000);
            friendApplysBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFriendApplysFieldBuilder() : null;
          } else {
            friendApplysBuilder_.addAllMessages(other.friendApplys_);
          }
        }
      }
      if (other.hasStrength()) {
        setStrength(other.getStrength());
      }
      if (other.hasStrengthTime()) {
        setStrengthTime(other.getStrengthTime());
      }
      if (other.hasNowInstanceId()) {
        setNowInstanceId(other.getNowInstanceId());
      }
      if (!other.newItem_.isEmpty()) {
        if (newItem_.isEmpty()) {
          newItem_ = other.newItem_;
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          ensureNewItemIsMutable();
          newItem_.addAll(other.newItem_);
        }
        onChanged();
      }
      if (fogsBuilder_ == null) {
        if (!other.fogs_.isEmpty()) {
          if (fogs_.isEmpty()) {
            fogs_ = other.fogs_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureFogsIsMutable();
            fogs_.addAll(other.fogs_);
          }
          onChanged();
        }
      } else {
        if (!other.fogs_.isEmpty()) {
          if (fogsBuilder_.isEmpty()) {
            fogsBuilder_.dispose();
            fogsBuilder_ = null;
            fogs_ = other.fogs_;
            bitField0_ = (bitField0_ & ~0x00400000);
            fogsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFogsFieldBuilder() : null;
          } else {
            fogsBuilder_.addAllMessages(other.fogs_);
          }
        }
      }
      if (enterTimeInfoBuilder_ == null) {
        if (!other.enterTimeInfo_.isEmpty()) {
          if (enterTimeInfo_.isEmpty()) {
            enterTimeInfo_ = other.enterTimeInfo_;
            bitField0_ = (bitField0_ & ~0x00800000);
          } else {
            ensureEnterTimeInfoIsMutable();
            enterTimeInfo_.addAll(other.enterTimeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.enterTimeInfo_.isEmpty()) {
          if (enterTimeInfoBuilder_.isEmpty()) {
            enterTimeInfoBuilder_.dispose();
            enterTimeInfoBuilder_ = null;
            enterTimeInfo_ = other.enterTimeInfo_;
            bitField0_ = (bitField0_ & ~0x00800000);
            enterTimeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEnterTimeInfoFieldBuilder() : null;
          } else {
            enterTimeInfoBuilder_.addAllMessages(other.enterTimeInfo_);
          }
        }
      }
      if (other.hasNewPlayerActivity()) {
        setNewPlayerActivity(other.getNewPlayerActivity());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRt()) {
        return false;
      }
      for (int i = 0; i < getCityInfoCount(); i++) {
        if (!getCityInfo(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getHeroStateInfoCount(); i++) {
        if (!getHeroStateInfo(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getTasksCount(); i++) {
        if (!getTasks(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getBagInfoCount(); i++) {
        if (!getBagInfo(i).isInitialized()) {
          return false;
        }
      }
      if (hasServerInfo()) {
        if (!getServerInfo().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getAllianceMarksCount(); i++) {
        if (!getAllianceMarks(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getChatInfosCount(); i++) {
        if (!getChatInfos(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getRedPointsCount(); i++) {
        if (!getRedPoints(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getBarracksCount(); i++) {
        if (!getBarracks(i).isInitialized()) {
          return false;
        }
      }
      if (hasInfo()) {
        if (!getInfo().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getBuffsCount(); i++) {
        if (!getBuffs(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getFriendApplysCount(); i++) {
        if (!getFriendApplys(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getFogsCount(); i++) {
        if (!getFogs(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getEnterTimeInfoCount(); i++) {
        if (!getEnterTimeInfo(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.EnterGameRt parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.EnterGameRt) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int rt_ ;
    /**
     * <code>required int32 rt = 1;</code>
     */
    public boolean hasRt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public int getRt() {
      return rt_;
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public Builder setRt(int value) {
      bitField0_ |= 0x00000001;
      rt_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 rt = 1;</code>
     */
    public Builder clearRt() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rt_ = 0;
      onChanged();
      return this;
    }

    private long time_ ;
    /**
     * <code>optional int64 time = 4;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 time = 4;</code>
     */
    public long getTime() {
      return time_;
    }
    /**
     * <code>optional int64 time = 4;</code>
     */
    public Builder setTime(long value) {
      bitField0_ |= 0x00000002;
      time_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 time = 4;</code>
     */
    public Builder clearTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      time_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.CityInfo> cityInfo_ =
      java.util.Collections.emptyList();
    private void ensureCityInfoIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        cityInfo_ = new java.util.ArrayList<pb4client.CityInfo>(cityInfo_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.CityInfo, pb4client.CityInfo.Builder, pb4client.CityInfoOrBuilder> cityInfoBuilder_;

    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public java.util.List<pb4client.CityInfo> getCityInfoList() {
      if (cityInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cityInfo_);
      } else {
        return cityInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public int getCityInfoCount() {
      if (cityInfoBuilder_ == null) {
        return cityInfo_.size();
      } else {
        return cityInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public pb4client.CityInfo getCityInfo(int index) {
      if (cityInfoBuilder_ == null) {
        return cityInfo_.get(index);
      } else {
        return cityInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder setCityInfo(
        int index, pb4client.CityInfo value) {
      if (cityInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityInfoIsMutable();
        cityInfo_.set(index, value);
        onChanged();
      } else {
        cityInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder setCityInfo(
        int index, pb4client.CityInfo.Builder builderForValue) {
      if (cityInfoBuilder_ == null) {
        ensureCityInfoIsMutable();
        cityInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        cityInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder addCityInfo(pb4client.CityInfo value) {
      if (cityInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityInfoIsMutable();
        cityInfo_.add(value);
        onChanged();
      } else {
        cityInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder addCityInfo(
        int index, pb4client.CityInfo value) {
      if (cityInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCityInfoIsMutable();
        cityInfo_.add(index, value);
        onChanged();
      } else {
        cityInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder addCityInfo(
        pb4client.CityInfo.Builder builderForValue) {
      if (cityInfoBuilder_ == null) {
        ensureCityInfoIsMutable();
        cityInfo_.add(builderForValue.build());
        onChanged();
      } else {
        cityInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder addCityInfo(
        int index, pb4client.CityInfo.Builder builderForValue) {
      if (cityInfoBuilder_ == null) {
        ensureCityInfoIsMutable();
        cityInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        cityInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder addAllCityInfo(
        java.lang.Iterable<? extends pb4client.CityInfo> values) {
      if (cityInfoBuilder_ == null) {
        ensureCityInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cityInfo_);
        onChanged();
      } else {
        cityInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder clearCityInfo() {
      if (cityInfoBuilder_ == null) {
        cityInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        cityInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public Builder removeCityInfo(int index) {
      if (cityInfoBuilder_ == null) {
        ensureCityInfoIsMutable();
        cityInfo_.remove(index);
        onChanged();
      } else {
        cityInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public pb4client.CityInfo.Builder getCityInfoBuilder(
        int index) {
      return getCityInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public pb4client.CityInfoOrBuilder getCityInfoOrBuilder(
        int index) {
      if (cityInfoBuilder_ == null) {
        return cityInfo_.get(index);  } else {
        return cityInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public java.util.List<? extends pb4client.CityInfoOrBuilder> 
         getCityInfoOrBuilderList() {
      if (cityInfoBuilder_ != null) {
        return cityInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cityInfo_);
      }
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public pb4client.CityInfo.Builder addCityInfoBuilder() {
      return getCityInfoFieldBuilder().addBuilder(
          pb4client.CityInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public pb4client.CityInfo.Builder addCityInfoBuilder(
        int index) {
      return getCityInfoFieldBuilder().addBuilder(
          index, pb4client.CityInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *城池信息
     * </pre>
     *
     * <code>repeated .client2server.CityInfo cityInfo = 7;</code>
     */
    public java.util.List<pb4client.CityInfo.Builder> 
         getCityInfoBuilderList() {
      return getCityInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.CityInfo, pb4client.CityInfo.Builder, pb4client.CityInfoOrBuilder> 
        getCityInfoFieldBuilder() {
      if (cityInfoBuilder_ == null) {
        cityInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.CityInfo, pb4client.CityInfo.Builder, pb4client.CityInfoOrBuilder>(
                cityInfo_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        cityInfo_ = null;
      }
      return cityInfoBuilder_;
    }

    private java.util.List<pb4client.HeroStateInFo> heroStateInfo_ =
      java.util.Collections.emptyList();
    private void ensureHeroStateInfoIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        heroStateInfo_ = new java.util.ArrayList<pb4client.HeroStateInFo>(heroStateInfo_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroStateInFo, pb4client.HeroStateInFo.Builder, pb4client.HeroStateInFoOrBuilder> heroStateInfoBuilder_;

    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public java.util.List<pb4client.HeroStateInFo> getHeroStateInfoList() {
      if (heroStateInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(heroStateInfo_);
      } else {
        return heroStateInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public int getHeroStateInfoCount() {
      if (heroStateInfoBuilder_ == null) {
        return heroStateInfo_.size();
      } else {
        return heroStateInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public pb4client.HeroStateInFo getHeroStateInfo(int index) {
      if (heroStateInfoBuilder_ == null) {
        return heroStateInfo_.get(index);
      } else {
        return heroStateInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder setHeroStateInfo(
        int index, pb4client.HeroStateInFo value) {
      if (heroStateInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.set(index, value);
        onChanged();
      } else {
        heroStateInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder setHeroStateInfo(
        int index, pb4client.HeroStateInFo.Builder builderForValue) {
      if (heroStateInfoBuilder_ == null) {
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        heroStateInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder addHeroStateInfo(pb4client.HeroStateInFo value) {
      if (heroStateInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.add(value);
        onChanged();
      } else {
        heroStateInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder addHeroStateInfo(
        int index, pb4client.HeroStateInFo value) {
      if (heroStateInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.add(index, value);
        onChanged();
      } else {
        heroStateInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder addHeroStateInfo(
        pb4client.HeroStateInFo.Builder builderForValue) {
      if (heroStateInfoBuilder_ == null) {
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.add(builderForValue.build());
        onChanged();
      } else {
        heroStateInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder addHeroStateInfo(
        int index, pb4client.HeroStateInFo.Builder builderForValue) {
      if (heroStateInfoBuilder_ == null) {
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        heroStateInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder addAllHeroStateInfo(
        java.lang.Iterable<? extends pb4client.HeroStateInFo> values) {
      if (heroStateInfoBuilder_ == null) {
        ensureHeroStateInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heroStateInfo_);
        onChanged();
      } else {
        heroStateInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder clearHeroStateInfo() {
      if (heroStateInfoBuilder_ == null) {
        heroStateInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        heroStateInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public Builder removeHeroStateInfo(int index) {
      if (heroStateInfoBuilder_ == null) {
        ensureHeroStateInfoIsMutable();
        heroStateInfo_.remove(index);
        onChanged();
      } else {
        heroStateInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public pb4client.HeroStateInFo.Builder getHeroStateInfoBuilder(
        int index) {
      return getHeroStateInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public pb4client.HeroStateInFoOrBuilder getHeroStateInfoOrBuilder(
        int index) {
      if (heroStateInfoBuilder_ == null) {
        return heroStateInfo_.get(index);  } else {
        return heroStateInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public java.util.List<? extends pb4client.HeroStateInFoOrBuilder> 
         getHeroStateInfoOrBuilderList() {
      if (heroStateInfoBuilder_ != null) {
        return heroStateInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(heroStateInfo_);
      }
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public pb4client.HeroStateInFo.Builder addHeroStateInfoBuilder() {
      return getHeroStateInfoFieldBuilder().addBuilder(
          pb4client.HeroStateInFo.getDefaultInstance());
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public pb4client.HeroStateInFo.Builder addHeroStateInfoBuilder(
        int index) {
      return getHeroStateInfoFieldBuilder().addBuilder(
          index, pb4client.HeroStateInFo.getDefaultInstance());
    }
    /**
     * <pre>
     *武将状态信息
     * </pre>
     *
     * <code>repeated .client2server.HeroStateInFo heroStateInfo = 8;</code>
     */
    public java.util.List<pb4client.HeroStateInFo.Builder> 
         getHeroStateInfoBuilderList() {
      return getHeroStateInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.HeroStateInFo, pb4client.HeroStateInFo.Builder, pb4client.HeroStateInFoOrBuilder> 
        getHeroStateInfoFieldBuilder() {
      if (heroStateInfoBuilder_ == null) {
        heroStateInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.HeroStateInFo, pb4client.HeroStateInFo.Builder, pb4client.HeroStateInFoOrBuilder>(
                heroStateInfo_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        heroStateInfo_ = null;
      }
      return heroStateInfoBuilder_;
    }

    private long playerId_ ;
    /**
     * <pre>
     *玩家Id
     * </pre>
     *
     * <code>optional int64 playerId = 12;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *玩家Id
     * </pre>
     *
     * <code>optional int64 playerId = 12;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }
    /**
     * <pre>
     *玩家Id
     * </pre>
     *
     * <code>optional int64 playerId = 12;</code>
     */
    public Builder setPlayerId(long value) {
      bitField0_ |= 0x00000010;
      playerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家Id
     * </pre>
     *
     * <code>optional int64 playerId = 12;</code>
     */
    public Builder clearPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000010);
      playerId_ = 0L;
      onChanged();
      return this;
    }

    private pb4client.DecreeChange decreeChange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.DecreeChange, pb4client.DecreeChange.Builder, pb4client.DecreeChangeOrBuilder> decreeChangeBuilder_;
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public boolean hasDecreeChange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public pb4client.DecreeChange getDecreeChange() {
      if (decreeChangeBuilder_ == null) {
        return decreeChange_ == null ? pb4client.DecreeChange.getDefaultInstance() : decreeChange_;
      } else {
        return decreeChangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public Builder setDecreeChange(pb4client.DecreeChange value) {
      if (decreeChangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        decreeChange_ = value;
        onChanged();
      } else {
        decreeChangeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public Builder setDecreeChange(
        pb4client.DecreeChange.Builder builderForValue) {
      if (decreeChangeBuilder_ == null) {
        decreeChange_ = builderForValue.build();
        onChanged();
      } else {
        decreeChangeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public Builder mergeDecreeChange(pb4client.DecreeChange value) {
      if (decreeChangeBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            decreeChange_ != null &&
            decreeChange_ != pb4client.DecreeChange.getDefaultInstance()) {
          decreeChange_ =
            pb4client.DecreeChange.newBuilder(decreeChange_).mergeFrom(value).buildPartial();
        } else {
          decreeChange_ = value;
        }
        onChanged();
      } else {
        decreeChangeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public Builder clearDecreeChange() {
      if (decreeChangeBuilder_ == null) {
        decreeChange_ = null;
        onChanged();
      } else {
        decreeChangeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public pb4client.DecreeChange.Builder getDecreeChangeBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getDecreeChangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    public pb4client.DecreeChangeOrBuilder getDecreeChangeOrBuilder() {
      if (decreeChangeBuilder_ != null) {
        return decreeChangeBuilder_.getMessageOrBuilder();
      } else {
        return decreeChange_ == null ?
            pb4client.DecreeChange.getDefaultInstance() : decreeChange_;
      }
    }
    /**
     * <pre>
     *当前政令数与时间与上限
     * </pre>
     *
     * <code>optional .client2server.DecreeChange decreeChange = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.DecreeChange, pb4client.DecreeChange.Builder, pb4client.DecreeChangeOrBuilder> 
        getDecreeChangeFieldBuilder() {
      if (decreeChangeBuilder_ == null) {
        decreeChangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.DecreeChange, pb4client.DecreeChange.Builder, pb4client.DecreeChangeOrBuilder>(
                getDecreeChange(),
                getParentForChildren(),
                isClean());
        decreeChange_ = null;
      }
      return decreeChangeBuilder_;
    }

    private java.util.List<pb4client.Task> tasks_ =
      java.util.Collections.emptyList();
    private void ensureTasksIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        tasks_ = new java.util.ArrayList<pb4client.Task>(tasks_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.Task, pb4client.Task.Builder, pb4client.TaskOrBuilder> tasksBuilder_;

    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public java.util.List<pb4client.Task> getTasksList() {
      if (tasksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tasks_);
      } else {
        return tasksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public int getTasksCount() {
      if (tasksBuilder_ == null) {
        return tasks_.size();
      } else {
        return tasksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public pb4client.Task getTasks(int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);
      } else {
        return tasksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder setTasks(
        int index, pb4client.Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.set(index, value);
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder setTasks(
        int index, pb4client.Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.set(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder addTasks(pb4client.Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder addTasks(
        int index, pb4client.Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(index, value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder addTasks(
        pb4client.Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder addTasks(
        int index, pb4client.Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder addAllTasks(
        java.lang.Iterable<? extends pb4client.Task> values) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tasks_);
        onChanged();
      } else {
        tasksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder clearTasks() {
      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        tasksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public Builder removeTasks(int index) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.remove(index);
        onChanged();
      } else {
        tasksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public pb4client.Task.Builder getTasksBuilder(
        int index) {
      return getTasksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public pb4client.TaskOrBuilder getTasksOrBuilder(
        int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);  } else {
        return tasksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public java.util.List<? extends pb4client.TaskOrBuilder> 
         getTasksOrBuilderList() {
      if (tasksBuilder_ != null) {
        return tasksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tasks_);
      }
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public pb4client.Task.Builder addTasksBuilder() {
      return getTasksFieldBuilder().addBuilder(
          pb4client.Task.getDefaultInstance());
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public pb4client.Task.Builder addTasksBuilder(
        int index) {
      return getTasksFieldBuilder().addBuilder(
          index, pb4client.Task.getDefaultInstance());
    }
    /**
     * <pre>
     *我身上当前的任务
     * </pre>
     *
     * <code>repeated .client2server.Task tasks = 20;</code>
     */
    public java.util.List<pb4client.Task.Builder> 
         getTasksBuilderList() {
      return getTasksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.Task, pb4client.Task.Builder, pb4client.TaskOrBuilder> 
        getTasksFieldBuilder() {
      if (tasksBuilder_ == null) {
        tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.Task, pb4client.Task.Builder, pb4client.TaskOrBuilder>(
                tasks_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        tasks_ = null;
      }
      return tasksBuilder_;
    }

    private java.util.List<pb4client.BagInfo> bagInfo_ =
      java.util.Collections.emptyList();
    private void ensureBagInfoIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        bagInfo_ = new java.util.ArrayList<pb4client.BagInfo>(bagInfo_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BagInfo, pb4client.BagInfo.Builder, pb4client.BagInfoOrBuilder> bagInfoBuilder_;

    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public java.util.List<pb4client.BagInfo> getBagInfoList() {
      if (bagInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bagInfo_);
      } else {
        return bagInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public int getBagInfoCount() {
      if (bagInfoBuilder_ == null) {
        return bagInfo_.size();
      } else {
        return bagInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public pb4client.BagInfo getBagInfo(int index) {
      if (bagInfoBuilder_ == null) {
        return bagInfo_.get(index);
      } else {
        return bagInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder setBagInfo(
        int index, pb4client.BagInfo value) {
      if (bagInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBagInfoIsMutable();
        bagInfo_.set(index, value);
        onChanged();
      } else {
        bagInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder setBagInfo(
        int index, pb4client.BagInfo.Builder builderForValue) {
      if (bagInfoBuilder_ == null) {
        ensureBagInfoIsMutable();
        bagInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        bagInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder addBagInfo(pb4client.BagInfo value) {
      if (bagInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBagInfoIsMutable();
        bagInfo_.add(value);
        onChanged();
      } else {
        bagInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder addBagInfo(
        int index, pb4client.BagInfo value) {
      if (bagInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBagInfoIsMutable();
        bagInfo_.add(index, value);
        onChanged();
      } else {
        bagInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder addBagInfo(
        pb4client.BagInfo.Builder builderForValue) {
      if (bagInfoBuilder_ == null) {
        ensureBagInfoIsMutable();
        bagInfo_.add(builderForValue.build());
        onChanged();
      } else {
        bagInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder addBagInfo(
        int index, pb4client.BagInfo.Builder builderForValue) {
      if (bagInfoBuilder_ == null) {
        ensureBagInfoIsMutable();
        bagInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        bagInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder addAllBagInfo(
        java.lang.Iterable<? extends pb4client.BagInfo> values) {
      if (bagInfoBuilder_ == null) {
        ensureBagInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bagInfo_);
        onChanged();
      } else {
        bagInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder clearBagInfo() {
      if (bagInfoBuilder_ == null) {
        bagInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        bagInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public Builder removeBagInfo(int index) {
      if (bagInfoBuilder_ == null) {
        ensureBagInfoIsMutable();
        bagInfo_.remove(index);
        onChanged();
      } else {
        bagInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public pb4client.BagInfo.Builder getBagInfoBuilder(
        int index) {
      return getBagInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public pb4client.BagInfoOrBuilder getBagInfoOrBuilder(
        int index) {
      if (bagInfoBuilder_ == null) {
        return bagInfo_.get(index);  } else {
        return bagInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public java.util.List<? extends pb4client.BagInfoOrBuilder> 
         getBagInfoOrBuilderList() {
      if (bagInfoBuilder_ != null) {
        return bagInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bagInfo_);
      }
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public pb4client.BagInfo.Builder addBagInfoBuilder() {
      return getBagInfoFieldBuilder().addBuilder(
          pb4client.BagInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public pb4client.BagInfo.Builder addBagInfoBuilder(
        int index) {
      return getBagInfoFieldBuilder().addBuilder(
          index, pb4client.BagInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *背包物品信息
     * </pre>
     *
     * <code>repeated .client2server.BagInfo bagInfo = 30;</code>
     */
    public java.util.List<pb4client.BagInfo.Builder> 
         getBagInfoBuilderList() {
      return getBagInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BagInfo, pb4client.BagInfo.Builder, pb4client.BagInfoOrBuilder> 
        getBagInfoFieldBuilder() {
      if (bagInfoBuilder_ == null) {
        bagInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.BagInfo, pb4client.BagInfo.Builder, pb4client.BagInfoOrBuilder>(
                bagInfo_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        bagInfo_ = null;
      }
      return bagInfoBuilder_;
    }

    private pb4client.ServerInfo serverInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ServerInfo, pb4client.ServerInfo.Builder, pb4client.ServerInfoOrBuilder> serverInfoBuilder_;
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public boolean hasServerInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public pb4client.ServerInfo getServerInfo() {
      if (serverInfoBuilder_ == null) {
        return serverInfo_ == null ? pb4client.ServerInfo.getDefaultInstance() : serverInfo_;
      } else {
        return serverInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public Builder setServerInfo(pb4client.ServerInfo value) {
      if (serverInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serverInfo_ = value;
        onChanged();
      } else {
        serverInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public Builder setServerInfo(
        pb4client.ServerInfo.Builder builderForValue) {
      if (serverInfoBuilder_ == null) {
        serverInfo_ = builderForValue.build();
        onChanged();
      } else {
        serverInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public Builder mergeServerInfo(pb4client.ServerInfo value) {
      if (serverInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            serverInfo_ != null &&
            serverInfo_ != pb4client.ServerInfo.getDefaultInstance()) {
          serverInfo_ =
            pb4client.ServerInfo.newBuilder(serverInfo_).mergeFrom(value).buildPartial();
        } else {
          serverInfo_ = value;
        }
        onChanged();
      } else {
        serverInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public Builder clearServerInfo() {
      if (serverInfoBuilder_ == null) {
        serverInfo_ = null;
        onChanged();
      } else {
        serverInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public pb4client.ServerInfo.Builder getServerInfoBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getServerInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    public pb4client.ServerInfoOrBuilder getServerInfoOrBuilder() {
      if (serverInfoBuilder_ != null) {
        return serverInfoBuilder_.getMessageOrBuilder();
      } else {
        return serverInfo_ == null ?
            pb4client.ServerInfo.getDefaultInstance() : serverInfo_;
      }
    }
    /**
     * <pre>
     *服务器相关信息
     * </pre>
     *
     * <code>optional .client2server.ServerInfo serverInfo = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ServerInfo, pb4client.ServerInfo.Builder, pb4client.ServerInfoOrBuilder> 
        getServerInfoFieldBuilder() {
      if (serverInfoBuilder_ == null) {
        serverInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.ServerInfo, pb4client.ServerInfo.Builder, pb4client.ServerInfoOrBuilder>(
                getServerInfo(),
                getParentForChildren(),
                isClean());
        serverInfo_ = null;
      }
      return serverInfoBuilder_;
    }

    private java.util.List<pb4client.AllianceMarkInfo> allianceMarks_ =
      java.util.Collections.emptyList();
    private void ensureAllianceMarksIsMutable() {
      if (!((bitField0_ & 0x00000200) == 0x00000200)) {
        allianceMarks_ = new java.util.ArrayList<pb4client.AllianceMarkInfo>(allianceMarks_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder> allianceMarksBuilder_;

    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public java.util.List<pb4client.AllianceMarkInfo> getAllianceMarksList() {
      if (allianceMarksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      } else {
        return allianceMarksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public int getAllianceMarksCount() {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.size();
      } else {
        return allianceMarksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public pb4client.AllianceMarkInfo getAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);
      } else {
        return allianceMarksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder addAllianceMarks(pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4client.AllianceMarkInfo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder addAllianceMarks(
        pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4client.AllianceMarkInfo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder addAllAllianceMarks(
        java.lang.Iterable<? extends pb4client.AllianceMarkInfo> values) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allianceMarks_);
        onChanged();
      } else {
        allianceMarksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder clearAllianceMarks() {
      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        allianceMarksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public Builder removeAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.remove(index);
        onChanged();
      } else {
        allianceMarksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public pb4client.AllianceMarkInfo.Builder getAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public pb4client.AllianceMarkInfoOrBuilder getAllianceMarksOrBuilder(
        int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);  } else {
        return allianceMarksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public java.util.List<? extends pb4client.AllianceMarkInfoOrBuilder> 
         getAllianceMarksOrBuilderList() {
      if (allianceMarksBuilder_ != null) {
        return allianceMarksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public pb4client.AllianceMarkInfo.Builder addAllianceMarksBuilder() {
      return getAllianceMarksFieldBuilder().addBuilder(
          pb4client.AllianceMarkInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public pb4client.AllianceMarkInfo.Builder addAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().addBuilder(
          index, pb4client.AllianceMarkInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .client2server.AllianceMarkInfo allianceMarks = 37;</code>
     */
    public java.util.List<pb4client.AllianceMarkInfo.Builder> 
         getAllianceMarksBuilderList() {
      return getAllianceMarksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder> 
        getAllianceMarksFieldBuilder() {
      if (allianceMarksBuilder_ == null) {
        allianceMarksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.AllianceMarkInfo, pb4client.AllianceMarkInfo.Builder, pb4client.AllianceMarkInfoOrBuilder>(
                allianceMarks_,
                ((bitField0_ & 0x00000200) == 0x00000200),
                getParentForChildren(),
                isClean());
        allianceMarks_ = null;
      }
      return allianceMarksBuilder_;
    }

    private java.util.List<pb4client.ChatInfo> chatInfos_ =
      java.util.Collections.emptyList();
    private void ensureChatInfosIsMutable() {
      if (!((bitField0_ & 0x00000400) == 0x00000400)) {
        chatInfos_ = new java.util.ArrayList<pb4client.ChatInfo>(chatInfos_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder> chatInfosBuilder_;

    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public java.util.List<pb4client.ChatInfo> getChatInfosList() {
      if (chatInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(chatInfos_);
      } else {
        return chatInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public int getChatInfosCount() {
      if (chatInfosBuilder_ == null) {
        return chatInfos_.size();
      } else {
        return chatInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public pb4client.ChatInfo getChatInfos(int index) {
      if (chatInfosBuilder_ == null) {
        return chatInfos_.get(index);
      } else {
        return chatInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder setChatInfos(
        int index, pb4client.ChatInfo value) {
      if (chatInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatInfosIsMutable();
        chatInfos_.set(index, value);
        onChanged();
      } else {
        chatInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder setChatInfos(
        int index, pb4client.ChatInfo.Builder builderForValue) {
      if (chatInfosBuilder_ == null) {
        ensureChatInfosIsMutable();
        chatInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        chatInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder addChatInfos(pb4client.ChatInfo value) {
      if (chatInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatInfosIsMutable();
        chatInfos_.add(value);
        onChanged();
      } else {
        chatInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder addChatInfos(
        int index, pb4client.ChatInfo value) {
      if (chatInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChatInfosIsMutable();
        chatInfos_.add(index, value);
        onChanged();
      } else {
        chatInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder addChatInfos(
        pb4client.ChatInfo.Builder builderForValue) {
      if (chatInfosBuilder_ == null) {
        ensureChatInfosIsMutable();
        chatInfos_.add(builderForValue.build());
        onChanged();
      } else {
        chatInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder addChatInfos(
        int index, pb4client.ChatInfo.Builder builderForValue) {
      if (chatInfosBuilder_ == null) {
        ensureChatInfosIsMutable();
        chatInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        chatInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder addAllChatInfos(
        java.lang.Iterable<? extends pb4client.ChatInfo> values) {
      if (chatInfosBuilder_ == null) {
        ensureChatInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, chatInfos_);
        onChanged();
      } else {
        chatInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder clearChatInfos() {
      if (chatInfosBuilder_ == null) {
        chatInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        chatInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public Builder removeChatInfos(int index) {
      if (chatInfosBuilder_ == null) {
        ensureChatInfosIsMutable();
        chatInfos_.remove(index);
        onChanged();
      } else {
        chatInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public pb4client.ChatInfo.Builder getChatInfosBuilder(
        int index) {
      return getChatInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public pb4client.ChatInfoOrBuilder getChatInfosOrBuilder(
        int index) {
      if (chatInfosBuilder_ == null) {
        return chatInfos_.get(index);  } else {
        return chatInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public java.util.List<? extends pb4client.ChatInfoOrBuilder> 
         getChatInfosOrBuilderList() {
      if (chatInfosBuilder_ != null) {
        return chatInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(chatInfos_);
      }
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public pb4client.ChatInfo.Builder addChatInfosBuilder() {
      return getChatInfosFieldBuilder().addBuilder(
          pb4client.ChatInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public pb4client.ChatInfo.Builder addChatInfosBuilder(
        int index) {
      return getChatInfosFieldBuilder().addBuilder(
          index, pb4client.ChatInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *聊天历史
     * </pre>
     *
     * <code>repeated .client2server.ChatInfo chatInfos = 48;</code>
     */
    public java.util.List<pb4client.ChatInfo.Builder> 
         getChatInfosBuilderList() {
      return getChatInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder> 
        getChatInfosFieldBuilder() {
      if (chatInfosBuilder_ == null) {
        chatInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.ChatInfo, pb4client.ChatInfo.Builder, pb4client.ChatInfoOrBuilder>(
                chatInfos_,
                ((bitField0_ & 0x00000400) == 0x00000400),
                getParentForChildren(),
                isClean());
        chatInfos_ = null;
      }
      return chatInfosBuilder_;
    }

    private java.util.List<java.lang.Integer> newMailNum_ = java.util.Collections.emptyList();
    private void ensureNewMailNumIsMutable() {
      if (!((bitField0_ & 0x00000800) == 0x00000800)) {
        newMailNum_ = new java.util.ArrayList<java.lang.Integer>(newMailNum_);
        bitField0_ |= 0x00000800;
       }
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public java.util.List<java.lang.Integer>
        getNewMailNumList() {
      return java.util.Collections.unmodifiableList(newMailNum_);
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public int getNewMailNumCount() {
      return newMailNum_.size();
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public int getNewMailNum(int index) {
      return newMailNum_.get(index);
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public Builder setNewMailNum(
        int index, int value) {
      ensureNewMailNumIsMutable();
      newMailNum_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public Builder addNewMailNum(int value) {
      ensureNewMailNumIsMutable();
      newMailNum_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public Builder addAllNewMailNum(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNewMailNumIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, newMailNum_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *新邮件数量 数组数据依次是：系统邮件、联盟邮件、收藏邮件
     * </pre>
     *
     * <code>repeated int32 newMailNum = 53;</code>
     */
    public Builder clearNewMailNum() {
      newMailNum_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }

    private java.util.List<pb4client.RedPoint> redPoints_ =
      java.util.Collections.emptyList();
    private void ensureRedPointsIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        redPoints_ = new java.util.ArrayList<pb4client.RedPoint>(redPoints_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder> redPointsBuilder_;

    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public java.util.List<pb4client.RedPoint> getRedPointsList() {
      if (redPointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(redPoints_);
      } else {
        return redPointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public int getRedPointsCount() {
      if (redPointsBuilder_ == null) {
        return redPoints_.size();
      } else {
        return redPointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public pb4client.RedPoint getRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);
      } else {
        return redPointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder setRedPoints(
        int index, pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.set(index, value);
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder setRedPoints(
        int index, pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder addRedPoints(pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder addRedPoints(
        int index, pb4client.RedPoint value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(index, value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder addRedPoints(
        pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder addRedPoints(
        int index, pb4client.RedPoint.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder addAllRedPoints(
        java.lang.Iterable<? extends pb4client.RedPoint> values) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, redPoints_);
        onChanged();
      } else {
        redPointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder clearRedPoints() {
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        redPointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public Builder removeRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.remove(index);
        onChanged();
      } else {
        redPointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public pb4client.RedPoint.Builder getRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public pb4client.RedPointOrBuilder getRedPointsOrBuilder(
        int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);  } else {
        return redPointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public java.util.List<? extends pb4client.RedPointOrBuilder> 
         getRedPointsOrBuilderList() {
      if (redPointsBuilder_ != null) {
        return redPointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(redPoints_);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public pb4client.RedPoint.Builder addRedPointsBuilder() {
      return getRedPointsFieldBuilder().addBuilder(
          pb4client.RedPoint.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public pb4client.RedPoint.Builder addRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().addBuilder(
          index, pb4client.RedPoint.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .client2server.RedPoint redPoints = 60;</code>
     */
    public java.util.List<pb4client.RedPoint.Builder> 
         getRedPointsBuilderList() {
      return getRedPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder> 
        getRedPointsFieldBuilder() {
      if (redPointsBuilder_ == null) {
        redPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.RedPoint, pb4client.RedPoint.Builder, pb4client.RedPointOrBuilder>(
                redPoints_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        redPoints_ = null;
      }
      return redPointsBuilder_;
    }

    private java.util.List<pb4client.BarracksInfo> barracks_ =
      java.util.Collections.emptyList();
    private void ensureBarracksIsMutable() {
      if (!((bitField0_ & 0x00002000) == 0x00002000)) {
        barracks_ = new java.util.ArrayList<pb4client.BarracksInfo>(barracks_);
        bitField0_ |= 0x00002000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BarracksInfo, pb4client.BarracksInfo.Builder, pb4client.BarracksInfoOrBuilder> barracksBuilder_;

    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public java.util.List<pb4client.BarracksInfo> getBarracksList() {
      if (barracksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(barracks_);
      } else {
        return barracksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public int getBarracksCount() {
      if (barracksBuilder_ == null) {
        return barracks_.size();
      } else {
        return barracksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public pb4client.BarracksInfo getBarracks(int index) {
      if (barracksBuilder_ == null) {
        return barracks_.get(index);
      } else {
        return barracksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder setBarracks(
        int index, pb4client.BarracksInfo value) {
      if (barracksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBarracksIsMutable();
        barracks_.set(index, value);
        onChanged();
      } else {
        barracksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder setBarracks(
        int index, pb4client.BarracksInfo.Builder builderForValue) {
      if (barracksBuilder_ == null) {
        ensureBarracksIsMutable();
        barracks_.set(index, builderForValue.build());
        onChanged();
      } else {
        barracksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder addBarracks(pb4client.BarracksInfo value) {
      if (barracksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBarracksIsMutable();
        barracks_.add(value);
        onChanged();
      } else {
        barracksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder addBarracks(
        int index, pb4client.BarracksInfo value) {
      if (barracksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBarracksIsMutable();
        barracks_.add(index, value);
        onChanged();
      } else {
        barracksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder addBarracks(
        pb4client.BarracksInfo.Builder builderForValue) {
      if (barracksBuilder_ == null) {
        ensureBarracksIsMutable();
        barracks_.add(builderForValue.build());
        onChanged();
      } else {
        barracksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder addBarracks(
        int index, pb4client.BarracksInfo.Builder builderForValue) {
      if (barracksBuilder_ == null) {
        ensureBarracksIsMutable();
        barracks_.add(index, builderForValue.build());
        onChanged();
      } else {
        barracksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder addAllBarracks(
        java.lang.Iterable<? extends pb4client.BarracksInfo> values) {
      if (barracksBuilder_ == null) {
        ensureBarracksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, barracks_);
        onChanged();
      } else {
        barracksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder clearBarracks() {
      if (barracksBuilder_ == null) {
        barracks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
      } else {
        barracksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public Builder removeBarracks(int index) {
      if (barracksBuilder_ == null) {
        ensureBarracksIsMutable();
        barracks_.remove(index);
        onChanged();
      } else {
        barracksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public pb4client.BarracksInfo.Builder getBarracksBuilder(
        int index) {
      return getBarracksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public pb4client.BarracksInfoOrBuilder getBarracksOrBuilder(
        int index) {
      if (barracksBuilder_ == null) {
        return barracks_.get(index);  } else {
        return barracksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public java.util.List<? extends pb4client.BarracksInfoOrBuilder> 
         getBarracksOrBuilderList() {
      if (barracksBuilder_ != null) {
        return barracksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(barracks_);
      }
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public pb4client.BarracksInfo.Builder addBarracksBuilder() {
      return getBarracksFieldBuilder().addBuilder(
          pb4client.BarracksInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public pb4client.BarracksInfo.Builder addBarracksBuilder(
        int index) {
      return getBarracksFieldBuilder().addBuilder(
          index, pb4client.BarracksInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 玩家的造兵信息(只有造兵数据)
     * </pre>
     *
     * <code>repeated .client2server.BarracksInfo barracks = 70;</code>
     */
    public java.util.List<pb4client.BarracksInfo.Builder> 
         getBarracksBuilderList() {
      return getBarracksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BarracksInfo, pb4client.BarracksInfo.Builder, pb4client.BarracksInfoOrBuilder> 
        getBarracksFieldBuilder() {
      if (barracksBuilder_ == null) {
        barracksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.BarracksInfo, pb4client.BarracksInfo.Builder, pb4client.BarracksInfoOrBuilder>(
                barracks_,
                ((bitField0_ & 0x00002000) == 0x00002000),
                getParentForChildren(),
                isClean());
        barracks_ = null;
      }
      return barracksBuilder_;
    }

    private pb4client.CaveInfo info_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CaveInfo, pb4client.CaveInfo.Builder, pb4client.CaveInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public pb4client.CaveInfo getInfo() {
      if (infoBuilder_ == null) {
        return info_ == null ? pb4client.CaveInfo.getDefaultInstance() : info_;
      } else {
        return infoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public Builder setInfo(pb4client.CaveInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public Builder setInfo(
        pb4client.CaveInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        info_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public Builder mergeInfo(pb4client.CaveInfo value) {
      if (infoBuilder_ == null) {
        if (((bitField0_ & 0x00004000) == 0x00004000) &&
            info_ != null &&
            info_ != pb4client.CaveInfo.getDefaultInstance()) {
          info_ =
            pb4client.CaveInfo.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }
        onChanged();
      } else {
        infoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        info_ = null;
        onChanged();
      } else {
        infoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      return this;
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public pb4client.CaveInfo.Builder getInfoBuilder() {
      bitField0_ |= 0x00004000;
      onChanged();
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    public pb4client.CaveInfoOrBuilder getInfoOrBuilder() {
      if (infoBuilder_ != null) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        return info_ == null ?
            pb4client.CaveInfo.getDefaultInstance() : info_;
      }
    }
    /**
     * <pre>
     * 当前藏兵信息
     * </pre>
     *
     * <code>optional .client2server.CaveInfo info = 92;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CaveInfo, pb4client.CaveInfo.Builder, pb4client.CaveInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.CaveInfo, pb4client.CaveInfo.Builder, pb4client.CaveInfoOrBuilder>(
                getInfo(),
                getParentForChildren(),
                isClean());
        info_ = null;
      }
      return infoBuilder_;
    }

    private java.util.List<pb4client.BuffVo> buffs_ =
      java.util.Collections.emptyList();
    private void ensureBuffsIsMutable() {
      if (!((bitField0_ & 0x00008000) == 0x00008000)) {
        buffs_ = new java.util.ArrayList<pb4client.BuffVo>(buffs_);
        bitField0_ |= 0x00008000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BuffVo, pb4client.BuffVo.Builder, pb4client.BuffVoOrBuilder> buffsBuilder_;

    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public java.util.List<pb4client.BuffVo> getBuffsList() {
      if (buffsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(buffs_);
      } else {
        return buffsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public int getBuffsCount() {
      if (buffsBuilder_ == null) {
        return buffs_.size();
      } else {
        return buffsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public pb4client.BuffVo getBuffs(int index) {
      if (buffsBuilder_ == null) {
        return buffs_.get(index);
      } else {
        return buffsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder setBuffs(
        int index, pb4client.BuffVo value) {
      if (buffsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuffsIsMutable();
        buffs_.set(index, value);
        onChanged();
      } else {
        buffsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder setBuffs(
        int index, pb4client.BuffVo.Builder builderForValue) {
      if (buffsBuilder_ == null) {
        ensureBuffsIsMutable();
        buffs_.set(index, builderForValue.build());
        onChanged();
      } else {
        buffsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder addBuffs(pb4client.BuffVo value) {
      if (buffsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuffsIsMutable();
        buffs_.add(value);
        onChanged();
      } else {
        buffsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder addBuffs(
        int index, pb4client.BuffVo value) {
      if (buffsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuffsIsMutable();
        buffs_.add(index, value);
        onChanged();
      } else {
        buffsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder addBuffs(
        pb4client.BuffVo.Builder builderForValue) {
      if (buffsBuilder_ == null) {
        ensureBuffsIsMutable();
        buffs_.add(builderForValue.build());
        onChanged();
      } else {
        buffsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder addBuffs(
        int index, pb4client.BuffVo.Builder builderForValue) {
      if (buffsBuilder_ == null) {
        ensureBuffsIsMutable();
        buffs_.add(index, builderForValue.build());
        onChanged();
      } else {
        buffsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder addAllBuffs(
        java.lang.Iterable<? extends pb4client.BuffVo> values) {
      if (buffsBuilder_ == null) {
        ensureBuffsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, buffs_);
        onChanged();
      } else {
        buffsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder clearBuffs() {
      if (buffsBuilder_ == null) {
        buffs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
      } else {
        buffsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public Builder removeBuffs(int index) {
      if (buffsBuilder_ == null) {
        ensureBuffsIsMutable();
        buffs_.remove(index);
        onChanged();
      } else {
        buffsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public pb4client.BuffVo.Builder getBuffsBuilder(
        int index) {
      return getBuffsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public pb4client.BuffVoOrBuilder getBuffsOrBuilder(
        int index) {
      if (buffsBuilder_ == null) {
        return buffs_.get(index);  } else {
        return buffsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public java.util.List<? extends pb4client.BuffVoOrBuilder> 
         getBuffsOrBuilderList() {
      if (buffsBuilder_ != null) {
        return buffsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(buffs_);
      }
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public pb4client.BuffVo.Builder addBuffsBuilder() {
      return getBuffsFieldBuilder().addBuilder(
          pb4client.BuffVo.getDefaultInstance());
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public pb4client.BuffVo.Builder addBuffsBuilder(
        int index) {
      return getBuffsFieldBuilder().addBuilder(
          index, pb4client.BuffVo.getDefaultInstance());
    }
    /**
     * <pre>
     * 玩家的buff集合
     * </pre>
     *
     * <code>repeated .client2server.BuffVo buffs = 97;</code>
     */
    public java.util.List<pb4client.BuffVo.Builder> 
         getBuffsBuilderList() {
      return getBuffsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.BuffVo, pb4client.BuffVo.Builder, pb4client.BuffVoOrBuilder> 
        getBuffsFieldBuilder() {
      if (buffsBuilder_ == null) {
        buffsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.BuffVo, pb4client.BuffVo.Builder, pb4client.BuffVoOrBuilder>(
                buffs_,
                ((bitField0_ & 0x00008000) == 0x00008000),
                getParentForChildren(),
                isClean());
        buffs_ = null;
      }
      return buffsBuilder_;
    }

    private long totalPower_ ;
    /**
     * <pre>
     *总实力
     * </pre>
     *
     * <code>optional int64 totalPower = 105;</code>
     */
    public boolean hasTotalPower() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *总实力
     * </pre>
     *
     * <code>optional int64 totalPower = 105;</code>
     */
    public long getTotalPower() {
      return totalPower_;
    }
    /**
     * <pre>
     *总实力
     * </pre>
     *
     * <code>optional int64 totalPower = 105;</code>
     */
    public Builder setTotalPower(long value) {
      bitField0_ |= 0x00010000;
      totalPower_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *总实力
     * </pre>
     *
     * <code>optional int64 totalPower = 105;</code>
     */
    public Builder clearTotalPower() {
      bitField0_ = (bitField0_ & ~0x00010000);
      totalPower_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.FriendApply> friendApplys_ =
      java.util.Collections.emptyList();
    private void ensureFriendApplysIsMutable() {
      if (!((bitField0_ & 0x00020000) == 0x00020000)) {
        friendApplys_ = new java.util.ArrayList<pb4client.FriendApply>(friendApplys_);
        bitField0_ |= 0x00020000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FriendApply, pb4client.FriendApply.Builder, pb4client.FriendApplyOrBuilder> friendApplysBuilder_;

    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public java.util.List<pb4client.FriendApply> getFriendApplysList() {
      if (friendApplysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(friendApplys_);
      } else {
        return friendApplysBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public int getFriendApplysCount() {
      if (friendApplysBuilder_ == null) {
        return friendApplys_.size();
      } else {
        return friendApplysBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public pb4client.FriendApply getFriendApplys(int index) {
      if (friendApplysBuilder_ == null) {
        return friendApplys_.get(index);
      } else {
        return friendApplysBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder setFriendApplys(
        int index, pb4client.FriendApply value) {
      if (friendApplysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendApplysIsMutable();
        friendApplys_.set(index, value);
        onChanged();
      } else {
        friendApplysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder setFriendApplys(
        int index, pb4client.FriendApply.Builder builderForValue) {
      if (friendApplysBuilder_ == null) {
        ensureFriendApplysIsMutable();
        friendApplys_.set(index, builderForValue.build());
        onChanged();
      } else {
        friendApplysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder addFriendApplys(pb4client.FriendApply value) {
      if (friendApplysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendApplysIsMutable();
        friendApplys_.add(value);
        onChanged();
      } else {
        friendApplysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder addFriendApplys(
        int index, pb4client.FriendApply value) {
      if (friendApplysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendApplysIsMutable();
        friendApplys_.add(index, value);
        onChanged();
      } else {
        friendApplysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder addFriendApplys(
        pb4client.FriendApply.Builder builderForValue) {
      if (friendApplysBuilder_ == null) {
        ensureFriendApplysIsMutable();
        friendApplys_.add(builderForValue.build());
        onChanged();
      } else {
        friendApplysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder addFriendApplys(
        int index, pb4client.FriendApply.Builder builderForValue) {
      if (friendApplysBuilder_ == null) {
        ensureFriendApplysIsMutable();
        friendApplys_.add(index, builderForValue.build());
        onChanged();
      } else {
        friendApplysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder addAllFriendApplys(
        java.lang.Iterable<? extends pb4client.FriendApply> values) {
      if (friendApplysBuilder_ == null) {
        ensureFriendApplysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, friendApplys_);
        onChanged();
      } else {
        friendApplysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder clearFriendApplys() {
      if (friendApplysBuilder_ == null) {
        friendApplys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
      } else {
        friendApplysBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public Builder removeFriendApplys(int index) {
      if (friendApplysBuilder_ == null) {
        ensureFriendApplysIsMutable();
        friendApplys_.remove(index);
        onChanged();
      } else {
        friendApplysBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public pb4client.FriendApply.Builder getFriendApplysBuilder(
        int index) {
      return getFriendApplysFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public pb4client.FriendApplyOrBuilder getFriendApplysOrBuilder(
        int index) {
      if (friendApplysBuilder_ == null) {
        return friendApplys_.get(index);  } else {
        return friendApplysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public java.util.List<? extends pb4client.FriendApplyOrBuilder> 
         getFriendApplysOrBuilderList() {
      if (friendApplysBuilder_ != null) {
        return friendApplysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(friendApplys_);
      }
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public pb4client.FriendApply.Builder addFriendApplysBuilder() {
      return getFriendApplysFieldBuilder().addBuilder(
          pb4client.FriendApply.getDefaultInstance());
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public pb4client.FriendApply.Builder addFriendApplysBuilder(
        int index) {
      return getFriendApplysFieldBuilder().addBuilder(
          index, pb4client.FriendApply.getDefaultInstance());
    }
    /**
     * <pre>
     * 加我为好友的人信息
     * </pre>
     *
     * <code>repeated .client2server.FriendApply friendApplys = 119;</code>
     */
    public java.util.List<pb4client.FriendApply.Builder> 
         getFriendApplysBuilderList() {
      return getFriendApplysFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FriendApply, pb4client.FriendApply.Builder, pb4client.FriendApplyOrBuilder> 
        getFriendApplysFieldBuilder() {
      if (friendApplysBuilder_ == null) {
        friendApplysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.FriendApply, pb4client.FriendApply.Builder, pb4client.FriendApplyOrBuilder>(
                friendApplys_,
                ((bitField0_ & 0x00020000) == 0x00020000),
                getParentForChildren(),
                isClean());
        friendApplys_ = null;
      }
      return friendApplysBuilder_;
    }

    private int strength_ ;
    /**
     * <pre>
     *体力值 
     * </pre>
     *
     * <code>optional int32 strength = 122;</code>
     */
    public boolean hasStrength() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *体力值 
     * </pre>
     *
     * <code>optional int32 strength = 122;</code>
     */
    public int getStrength() {
      return strength_;
    }
    /**
     * <pre>
     *体力值 
     * </pre>
     *
     * <code>optional int32 strength = 122;</code>
     */
    public Builder setStrength(int value) {
      bitField0_ |= 0x00040000;
      strength_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *体力值 
     * </pre>
     *
     * <code>optional int32 strength = 122;</code>
     */
    public Builder clearStrength() {
      bitField0_ = (bitField0_ & ~0x00040000);
      strength_ = 0;
      onChanged();
      return this;
    }

    private int strengthTime_ ;
    /**
     * <pre>
     *玩家是当前体力值的时间
     * </pre>
     *
     * <code>optional int32 strengthTime = 123;</code>
     */
    public boolean hasStrengthTime() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *玩家是当前体力值的时间
     * </pre>
     *
     * <code>optional int32 strengthTime = 123;</code>
     */
    public int getStrengthTime() {
      return strengthTime_;
    }
    /**
     * <pre>
     *玩家是当前体力值的时间
     * </pre>
     *
     * <code>optional int32 strengthTime = 123;</code>
     */
    public Builder setStrengthTime(int value) {
      bitField0_ |= 0x00080000;
      strengthTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家是当前体力值的时间
     * </pre>
     *
     * <code>optional int32 strengthTime = 123;</code>
     */
    public Builder clearStrengthTime() {
      bitField0_ = (bitField0_ & ~0x00080000);
      strengthTime_ = 0;
      onChanged();
      return this;
    }

    private int nowInstanceId_ ;
    /**
     * <pre>
     *当前推图关卡Id
     * </pre>
     *
     * <code>optional int32 nowInstanceId = 128;</code>
     */
    public boolean hasNowInstanceId() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *当前推图关卡Id
     * </pre>
     *
     * <code>optional int32 nowInstanceId = 128;</code>
     */
    public int getNowInstanceId() {
      return nowInstanceId_;
    }
    /**
     * <pre>
     *当前推图关卡Id
     * </pre>
     *
     * <code>optional int32 nowInstanceId = 128;</code>
     */
    public Builder setNowInstanceId(int value) {
      bitField0_ |= 0x00100000;
      nowInstanceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前推图关卡Id
     * </pre>
     *
     * <code>optional int32 nowInstanceId = 128;</code>
     */
    public Builder clearNowInstanceId() {
      bitField0_ = (bitField0_ & ~0x00100000);
      nowInstanceId_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> newItem_ = java.util.Collections.emptyList();
    private void ensureNewItemIsMutable() {
      if (!((bitField0_ & 0x00200000) == 0x00200000)) {
        newItem_ = new java.util.ArrayList<java.lang.Integer>(newItem_);
        bitField0_ |= 0x00200000;
       }
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public java.util.List<java.lang.Integer>
        getNewItemList() {
      return java.util.Collections.unmodifiableList(newItem_);
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public int getNewItemCount() {
      return newItem_.size();
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public int getNewItem(int index) {
      return newItem_.get(index);
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public Builder setNewItem(
        int index, int value) {
      ensureNewItemIsMutable();
      newItem_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public Builder addNewItem(int value) {
      ensureNewItemIsMutable();
      newItem_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public Builder addAllNewItem(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNewItemIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, newItem_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图书馆新图鉴  新图鉴 1-装备 2-道具 3-卡片 4-魔物 5-怪物
     * </pre>
     *
     * <code>repeated int32 newItem = 137;</code>
     */
    public Builder clearNewItem() {
      newItem_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00200000);
      onChanged();
      return this;
    }

    private java.util.List<pb4client.FogInfo> fogs_ =
      java.util.Collections.emptyList();
    private void ensureFogsIsMutable() {
      if (!((bitField0_ & 0x00400000) == 0x00400000)) {
        fogs_ = new java.util.ArrayList<pb4client.FogInfo>(fogs_);
        bitField0_ |= 0x00400000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FogInfo, pb4client.FogInfo.Builder, pb4client.FogInfoOrBuilder> fogsBuilder_;

    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public java.util.List<pb4client.FogInfo> getFogsList() {
      if (fogsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fogs_);
      } else {
        return fogsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public int getFogsCount() {
      if (fogsBuilder_ == null) {
        return fogs_.size();
      } else {
        return fogsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public pb4client.FogInfo getFogs(int index) {
      if (fogsBuilder_ == null) {
        return fogs_.get(index);
      } else {
        return fogsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder setFogs(
        int index, pb4client.FogInfo value) {
      if (fogsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFogsIsMutable();
        fogs_.set(index, value);
        onChanged();
      } else {
        fogsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder setFogs(
        int index, pb4client.FogInfo.Builder builderForValue) {
      if (fogsBuilder_ == null) {
        ensureFogsIsMutable();
        fogs_.set(index, builderForValue.build());
        onChanged();
      } else {
        fogsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder addFogs(pb4client.FogInfo value) {
      if (fogsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFogsIsMutable();
        fogs_.add(value);
        onChanged();
      } else {
        fogsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder addFogs(
        int index, pb4client.FogInfo value) {
      if (fogsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFogsIsMutable();
        fogs_.add(index, value);
        onChanged();
      } else {
        fogsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder addFogs(
        pb4client.FogInfo.Builder builderForValue) {
      if (fogsBuilder_ == null) {
        ensureFogsIsMutable();
        fogs_.add(builderForValue.build());
        onChanged();
      } else {
        fogsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder addFogs(
        int index, pb4client.FogInfo.Builder builderForValue) {
      if (fogsBuilder_ == null) {
        ensureFogsIsMutable();
        fogs_.add(index, builderForValue.build());
        onChanged();
      } else {
        fogsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder addAllFogs(
        java.lang.Iterable<? extends pb4client.FogInfo> values) {
      if (fogsBuilder_ == null) {
        ensureFogsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fogs_);
        onChanged();
      } else {
        fogsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder clearFogs() {
      if (fogsBuilder_ == null) {
        fogs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
      } else {
        fogsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public Builder removeFogs(int index) {
      if (fogsBuilder_ == null) {
        ensureFogsIsMutable();
        fogs_.remove(index);
        onChanged();
      } else {
        fogsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public pb4client.FogInfo.Builder getFogsBuilder(
        int index) {
      return getFogsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public pb4client.FogInfoOrBuilder getFogsOrBuilder(
        int index) {
      if (fogsBuilder_ == null) {
        return fogs_.get(index);  } else {
        return fogsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public java.util.List<? extends pb4client.FogInfoOrBuilder> 
         getFogsOrBuilderList() {
      if (fogsBuilder_ != null) {
        return fogsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fogs_);
      }
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public pb4client.FogInfo.Builder addFogsBuilder() {
      return getFogsFieldBuilder().addBuilder(
          pb4client.FogInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public pb4client.FogInfo.Builder addFogsBuilder(
        int index) {
      return getFogsFieldBuilder().addBuilder(
          index, pb4client.FogInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *迷雾信息
     * </pre>
     *
     * <code>repeated .client2server.FogInfo fogs = 140;</code>
     */
    public java.util.List<pb4client.FogInfo.Builder> 
         getFogsBuilderList() {
      return getFogsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.FogInfo, pb4client.FogInfo.Builder, pb4client.FogInfoOrBuilder> 
        getFogsFieldBuilder() {
      if (fogsBuilder_ == null) {
        fogsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.FogInfo, pb4client.FogInfo.Builder, pb4client.FogInfoOrBuilder>(
                fogs_,
                ((bitField0_ & 0x00400000) == 0x00400000),
                getParentForChildren(),
                isClean());
        fogs_ = null;
      }
      return fogsBuilder_;
    }

    private java.util.List<pb4client.ActivityEnterTimeInfo> enterTimeInfo_ =
      java.util.Collections.emptyList();
    private void ensureEnterTimeInfoIsMutable() {
      if (!((bitField0_ & 0x00800000) == 0x00800000)) {
        enterTimeInfo_ = new java.util.ArrayList<pb4client.ActivityEnterTimeInfo>(enterTimeInfo_);
        bitField0_ |= 0x00800000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ActivityEnterTimeInfo, pb4client.ActivityEnterTimeInfo.Builder, pb4client.ActivityEnterTimeInfoOrBuilder> enterTimeInfoBuilder_;

    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public java.util.List<pb4client.ActivityEnterTimeInfo> getEnterTimeInfoList() {
      if (enterTimeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(enterTimeInfo_);
      } else {
        return enterTimeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public int getEnterTimeInfoCount() {
      if (enterTimeInfoBuilder_ == null) {
        return enterTimeInfo_.size();
      } else {
        return enterTimeInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public pb4client.ActivityEnterTimeInfo getEnterTimeInfo(int index) {
      if (enterTimeInfoBuilder_ == null) {
        return enterTimeInfo_.get(index);
      } else {
        return enterTimeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder setEnterTimeInfo(
        int index, pb4client.ActivityEnterTimeInfo value) {
      if (enterTimeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.set(index, value);
        onChanged();
      } else {
        enterTimeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder setEnterTimeInfo(
        int index, pb4client.ActivityEnterTimeInfo.Builder builderForValue) {
      if (enterTimeInfoBuilder_ == null) {
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        enterTimeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder addEnterTimeInfo(pb4client.ActivityEnterTimeInfo value) {
      if (enterTimeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.add(value);
        onChanged();
      } else {
        enterTimeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder addEnterTimeInfo(
        int index, pb4client.ActivityEnterTimeInfo value) {
      if (enterTimeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.add(index, value);
        onChanged();
      } else {
        enterTimeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder addEnterTimeInfo(
        pb4client.ActivityEnterTimeInfo.Builder builderForValue) {
      if (enterTimeInfoBuilder_ == null) {
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        enterTimeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder addEnterTimeInfo(
        int index, pb4client.ActivityEnterTimeInfo.Builder builderForValue) {
      if (enterTimeInfoBuilder_ == null) {
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        enterTimeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder addAllEnterTimeInfo(
        java.lang.Iterable<? extends pb4client.ActivityEnterTimeInfo> values) {
      if (enterTimeInfoBuilder_ == null) {
        ensureEnterTimeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, enterTimeInfo_);
        onChanged();
      } else {
        enterTimeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder clearEnterTimeInfo() {
      if (enterTimeInfoBuilder_ == null) {
        enterTimeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
      } else {
        enterTimeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public Builder removeEnterTimeInfo(int index) {
      if (enterTimeInfoBuilder_ == null) {
        ensureEnterTimeInfoIsMutable();
        enterTimeInfo_.remove(index);
        onChanged();
      } else {
        enterTimeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public pb4client.ActivityEnterTimeInfo.Builder getEnterTimeInfoBuilder(
        int index) {
      return getEnterTimeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public pb4client.ActivityEnterTimeInfoOrBuilder getEnterTimeInfoOrBuilder(
        int index) {
      if (enterTimeInfoBuilder_ == null) {
        return enterTimeInfo_.get(index);  } else {
        return enterTimeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public java.util.List<? extends pb4client.ActivityEnterTimeInfoOrBuilder> 
         getEnterTimeInfoOrBuilderList() {
      if (enterTimeInfoBuilder_ != null) {
        return enterTimeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(enterTimeInfo_);
      }
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public pb4client.ActivityEnterTimeInfo.Builder addEnterTimeInfoBuilder() {
      return getEnterTimeInfoFieldBuilder().addBuilder(
          pb4client.ActivityEnterTimeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public pb4client.ActivityEnterTimeInfo.Builder addEnterTimeInfoBuilder(
        int index) {
      return getEnterTimeInfoFieldBuilder().addBuilder(
          index, pb4client.ActivityEnterTimeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * 活动开放时间
     * </pre>
     *
     * <code>repeated .client2server.ActivityEnterTimeInfo enterTimeInfo = 142;</code>
     */
    public java.util.List<pb4client.ActivityEnterTimeInfo.Builder> 
         getEnterTimeInfoBuilderList() {
      return getEnterTimeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.ActivityEnterTimeInfo, pb4client.ActivityEnterTimeInfo.Builder, pb4client.ActivityEnterTimeInfoOrBuilder> 
        getEnterTimeInfoFieldBuilder() {
      if (enterTimeInfoBuilder_ == null) {
        enterTimeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.ActivityEnterTimeInfo, pb4client.ActivityEnterTimeInfo.Builder, pb4client.ActivityEnterTimeInfoOrBuilder>(
                enterTimeInfo_,
                ((bitField0_ & 0x00800000) == 0x00800000),
                getParentForChildren(),
                isClean());
        enterTimeInfo_ = null;
      }
      return enterTimeInfoBuilder_;
    }

    private int newPlayerActivity_ ;
    /**
     * <pre>
     * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
     * </pre>
     *
     * <code>optional int32 newPlayerActivity = 144;</code>
     */
    public boolean hasNewPlayerActivity() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <pre>
     * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
     * </pre>
     *
     * <code>optional int32 newPlayerActivity = 144;</code>
     */
    public int getNewPlayerActivity() {
      return newPlayerActivity_;
    }
    /**
     * <pre>
     * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
     * </pre>
     *
     * <code>optional int32 newPlayerActivity = 144;</code>
     */
    public Builder setNewPlayerActivity(int value) {
      bitField0_ |= 0x01000000;
      newPlayerActivity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 新手挑战状态 0-新手挑战已完成 1-还未完成新手挑战
     * </pre>
     *
     * <code>optional int32 newPlayerActivity = 144;</code>
     */
    public Builder clearNewPlayerActivity() {
      bitField0_ = (bitField0_ & ~0x01000000);
      newPlayerActivity_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.EnterGameRt)
  }

  // @@protoc_insertion_point(class_scope:client2server.EnterGameRt)
  private static final pb4client.EnterGameRt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.EnterGameRt();
  }

  public static pb4client.EnterGameRt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EnterGameRt>
      PARSER = new com.google.protobuf.AbstractParser<EnterGameRt>() {
    public EnterGameRt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterGameRt(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EnterGameRt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EnterGameRt> getParserForType() {
    return PARSER;
  }

  public pb4client.EnterGameRt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

