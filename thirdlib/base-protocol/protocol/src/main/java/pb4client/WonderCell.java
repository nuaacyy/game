// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 *奇观信息
 * </pre>
 *
 * Protobuf type {@code client2server.WonderCell}
 */
public  final class WonderCell extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.WonderCell)
    WonderCellOrBuilder {
  // Use WonderCell.newBuilder() to construct.
  private WonderCell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WonderCell() {
    wonderId_ = 0;
    wonderStatus_ = 0;
    warStartTime_ = 0;
    warOverTime_ = 0;
    groupId_ = 0L;
    commandPlayerId_ = 0L;
    maxReinforceNum_ = 0;
    forces_ = java.util.Collections.emptyList();
    amnestyCount_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WonderCell(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            wonderId_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            wonderStatus_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            warStartTime_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            warOverTime_ = input.readInt32();
            break;
          }
          case 42: {
            pb4client.PlayerNameInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              subBuilder = belongInfo_.toBuilder();
            }
            belongInfo_ = input.readMessage(pb4client.PlayerNameInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(belongInfo_);
              belongInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000010;
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            groupId_ = input.readInt64();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            commandPlayerId_ = input.readInt64();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            maxReinforceNum_ = input.readInt32();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              forces_ = new java.util.ArrayList<pb4client.MassForce>();
              mutable_bitField0_ |= 0x00000100;
            }
            forces_.add(
                input.readMessage(pb4client.MassForce.PARSER, extensionRegistry));
            break;
          }
          case 96: {
            bitField0_ |= 0x00000100;
            amnestyCount_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        forces_ = java.util.Collections.unmodifiableList(forces_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_WonderCell_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_WonderCell_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.WonderCell.class, pb4client.WonderCell.Builder.class);
  }

  private int bitField0_;
  public static final int WONDERID_FIELD_NUMBER = 1;
  private int wonderId_;
  /**
   * <pre>
   *奇观配置Id
   * </pre>
   *
   * <code>required int32 wonderId = 1;</code>
   */
  public boolean hasWonderId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   *奇观配置Id
   * </pre>
   *
   * <code>required int32 wonderId = 1;</code>
   */
  public int getWonderId() {
    return wonderId_;
  }

  public static final int WONDERSTATUS_FIELD_NUMBER = 2;
  private int wonderStatus_;
  /**
   * <pre>
   * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
   * </pre>
   *
   * <code>required int32 wonderStatus = 2;</code>
   */
  public boolean hasWonderStatus() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
   * </pre>
   *
   * <code>required int32 wonderStatus = 2;</code>
   */
  public int getWonderStatus() {
    return wonderStatus_;
  }

  public static final int WARSTARTTIME_FIELD_NUMBER = 3;
  private int warStartTime_;
  /**
   * <pre>
   * 开始争夺时间，和平时期指示下次争夺时间
   * </pre>
   *
   * <code>required int32 warStartTime = 3;</code>
   */
  public boolean hasWarStartTime() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 开始争夺时间，和平时期指示下次争夺时间
   * </pre>
   *
   * <code>required int32 warStartTime = 3;</code>
   */
  public int getWarStartTime() {
    return warStartTime_;
  }

  public static final int WAROVERTIME_FIELD_NUMBER = 4;
  private int warOverTime_;
  /**
   * <pre>
   * 结束争夺时间，跟随部队占领
   * </pre>
   *
   * <code>optional int32 warOverTime = 4;</code>
   */
  public boolean hasWarOverTime() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 结束争夺时间，跟随部队占领
   * </pre>
   *
   * <code>optional int32 warOverTime = 4;</code>
   */
  public int getWarOverTime() {
    return warOverTime_;
  }

  public static final int BELONGINFO_FIELD_NUMBER = 5;
  private pb4client.PlayerNameInfo belongInfo_;
  /**
   * <pre>
   *奇观归属者信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
   */
  public boolean hasBelongInfo() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   *奇观归属者信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
   */
  public pb4client.PlayerNameInfo getBelongInfo() {
    return belongInfo_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : belongInfo_;
  }
  /**
   * <pre>
   *奇观归属者信息
   * </pre>
   *
   * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
   */
  public pb4client.PlayerNameInfoOrBuilder getBelongInfoOrBuilder() {
    return belongInfo_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : belongInfo_;
  }

  public static final int GROUPID_FIELD_NUMBER = 6;
  private long groupId_;
  /**
   * <pre>
   *占领的奇观行军组Id
   * </pre>
   *
   * <code>optional int64 groupId = 6;</code>
   */
  public boolean hasGroupId() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   *占领的奇观行军组Id
   * </pre>
   *
   * <code>optional int64 groupId = 6;</code>
   */
  public long getGroupId() {
    return groupId_;
  }

  public static final int COMMANDPLAYERID_FIELD_NUMBER = 7;
  private long commandPlayerId_;
  /**
   * <pre>
   *指挥官玩家Id
   * </pre>
   *
   * <code>optional int64 commandPlayerId = 7;</code>
   */
  public boolean hasCommandPlayerId() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *指挥官玩家Id
   * </pre>
   *
   * <code>optional int64 commandPlayerId = 7;</code>
   */
  public long getCommandPlayerId() {
    return commandPlayerId_;
  }

  public static final int MAXREINFORCENUM_FIELD_NUMBER = 8;
  private int maxReinforceNum_;
  /**
   * <pre>
   *最大集结数量
   * </pre>
   *
   * <code>optional int32 maxReinforceNum = 8;</code>
   */
  public boolean hasMaxReinforceNum() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *最大集结数量
   * </pre>
   *
   * <code>optional int32 maxReinforceNum = 8;</code>
   */
  public int getMaxReinforceNum() {
    return maxReinforceNum_;
  }

  public static final int FORCES_FIELD_NUMBER = 9;
  private java.util.List<pb4client.MassForce> forces_;
  /**
   * <pre>
   *同联盟玩家，可查询到集结部队信息
   * </pre>
   *
   * <code>repeated .client2server.MassForce forces = 9;</code>
   */
  public java.util.List<pb4client.MassForce> getForcesList() {
    return forces_;
  }
  /**
   * <pre>
   *同联盟玩家，可查询到集结部队信息
   * </pre>
   *
   * <code>repeated .client2server.MassForce forces = 9;</code>
   */
  public java.util.List<? extends pb4client.MassForceOrBuilder> 
      getForcesOrBuilderList() {
    return forces_;
  }
  /**
   * <pre>
   *同联盟玩家，可查询到集结部队信息
   * </pre>
   *
   * <code>repeated .client2server.MassForce forces = 9;</code>
   */
  public int getForcesCount() {
    return forces_.size();
  }
  /**
   * <pre>
   *同联盟玩家，可查询到集结部队信息
   * </pre>
   *
   * <code>repeated .client2server.MassForce forces = 9;</code>
   */
  public pb4client.MassForce getForces(int index) {
    return forces_.get(index);
  }
  /**
   * <pre>
   *同联盟玩家，可查询到集结部队信息
   * </pre>
   *
   * <code>repeated .client2server.MassForce forces = 9;</code>
   */
  public pb4client.MassForceOrBuilder getForcesOrBuilder(
      int index) {
    return forces_.get(index);
  }

  public static final int AMNESTYCOUNT_FIELD_NUMBER = 12;
  private int amnestyCount_;
  /**
   * <pre>
   *剩余天下大赦次数
   * </pre>
   *
   * <code>optional int32 amnestyCount = 12;</code>
   */
  public boolean hasAmnestyCount() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *剩余天下大赦次数
   * </pre>
   *
   * <code>optional int32 amnestyCount = 12;</code>
   */
  public int getAmnestyCount() {
    return amnestyCount_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasWonderId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWonderStatus()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasWarStartTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasBelongInfo()) {
      if (!getBelongInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getForcesCount(); i++) {
      if (!getForces(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, wonderId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, wonderStatus_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, warStartTime_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, warOverTime_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, getBelongInfo());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt64(6, groupId_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(7, commandPlayerId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, maxReinforceNum_);
    }
    for (int i = 0; i < forces_.size(); i++) {
      output.writeMessage(9, forces_.get(i));
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(12, amnestyCount_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, wonderId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, wonderStatus_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, warStartTime_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, warOverTime_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getBelongInfo());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, groupId_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, commandPlayerId_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, maxReinforceNum_);
    }
    for (int i = 0; i < forces_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, forces_.get(i));
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, amnestyCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.WonderCell)) {
      return super.equals(obj);
    }
    pb4client.WonderCell other = (pb4client.WonderCell) obj;

    boolean result = true;
    result = result && (hasWonderId() == other.hasWonderId());
    if (hasWonderId()) {
      result = result && (getWonderId()
          == other.getWonderId());
    }
    result = result && (hasWonderStatus() == other.hasWonderStatus());
    if (hasWonderStatus()) {
      result = result && (getWonderStatus()
          == other.getWonderStatus());
    }
    result = result && (hasWarStartTime() == other.hasWarStartTime());
    if (hasWarStartTime()) {
      result = result && (getWarStartTime()
          == other.getWarStartTime());
    }
    result = result && (hasWarOverTime() == other.hasWarOverTime());
    if (hasWarOverTime()) {
      result = result && (getWarOverTime()
          == other.getWarOverTime());
    }
    result = result && (hasBelongInfo() == other.hasBelongInfo());
    if (hasBelongInfo()) {
      result = result && getBelongInfo()
          .equals(other.getBelongInfo());
    }
    result = result && (hasGroupId() == other.hasGroupId());
    if (hasGroupId()) {
      result = result && (getGroupId()
          == other.getGroupId());
    }
    result = result && (hasCommandPlayerId() == other.hasCommandPlayerId());
    if (hasCommandPlayerId()) {
      result = result && (getCommandPlayerId()
          == other.getCommandPlayerId());
    }
    result = result && (hasMaxReinforceNum() == other.hasMaxReinforceNum());
    if (hasMaxReinforceNum()) {
      result = result && (getMaxReinforceNum()
          == other.getMaxReinforceNum());
    }
    result = result && getForcesList()
        .equals(other.getForcesList());
    result = result && (hasAmnestyCount() == other.hasAmnestyCount());
    if (hasAmnestyCount()) {
      result = result && (getAmnestyCount()
          == other.getAmnestyCount());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasWonderId()) {
      hash = (37 * hash) + WONDERID_FIELD_NUMBER;
      hash = (53 * hash) + getWonderId();
    }
    if (hasWonderStatus()) {
      hash = (37 * hash) + WONDERSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getWonderStatus();
    }
    if (hasWarStartTime()) {
      hash = (37 * hash) + WARSTARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWarStartTime();
    }
    if (hasWarOverTime()) {
      hash = (37 * hash) + WAROVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + getWarOverTime();
    }
    if (hasBelongInfo()) {
      hash = (37 * hash) + BELONGINFO_FIELD_NUMBER;
      hash = (53 * hash) + getBelongInfo().hashCode();
    }
    if (hasGroupId()) {
      hash = (37 * hash) + GROUPID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGroupId());
    }
    if (hasCommandPlayerId()) {
      hash = (37 * hash) + COMMANDPLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCommandPlayerId());
    }
    if (hasMaxReinforceNum()) {
      hash = (37 * hash) + MAXREINFORCENUM_FIELD_NUMBER;
      hash = (53 * hash) + getMaxReinforceNum();
    }
    if (getForcesCount() > 0) {
      hash = (37 * hash) + FORCES_FIELD_NUMBER;
      hash = (53 * hash) + getForcesList().hashCode();
    }
    if (hasAmnestyCount()) {
      hash = (37 * hash) + AMNESTYCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmnestyCount();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.WonderCell parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WonderCell parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WonderCell parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WonderCell parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WonderCell parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.WonderCell parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.WonderCell parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.WonderCell parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.WonderCell parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.WonderCell parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.WonderCell parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.WonderCell parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.WonderCell prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *奇观信息
   * </pre>
   *
   * Protobuf type {@code client2server.WonderCell}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.WonderCell)
      pb4client.WonderCellOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_WonderCell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_WonderCell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.WonderCell.class, pb4client.WonderCell.Builder.class);
    }

    // Construct using pb4client.WonderCell.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBelongInfoFieldBuilder();
        getForcesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      wonderId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      wonderStatus_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      warStartTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      warOverTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (belongInfoBuilder_ == null) {
        belongInfo_ = null;
      } else {
        belongInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      groupId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      commandPlayerId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      maxReinforceNum_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      if (forcesBuilder_ == null) {
        forces_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        forcesBuilder_.clear();
      }
      amnestyCount_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_WonderCell_descriptor;
    }

    public pb4client.WonderCell getDefaultInstanceForType() {
      return pb4client.WonderCell.getDefaultInstance();
    }

    public pb4client.WonderCell build() {
      pb4client.WonderCell result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.WonderCell buildPartial() {
      pb4client.WonderCell result = new pb4client.WonderCell(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.wonderId_ = wonderId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.wonderStatus_ = wonderStatus_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.warStartTime_ = warStartTime_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.warOverTime_ = warOverTime_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      if (belongInfoBuilder_ == null) {
        result.belongInfo_ = belongInfo_;
      } else {
        result.belongInfo_ = belongInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.groupId_ = groupId_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.commandPlayerId_ = commandPlayerId_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.maxReinforceNum_ = maxReinforceNum_;
      if (forcesBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          forces_ = java.util.Collections.unmodifiableList(forces_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.forces_ = forces_;
      } else {
        result.forces_ = forcesBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000100;
      }
      result.amnestyCount_ = amnestyCount_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.WonderCell) {
        return mergeFrom((pb4client.WonderCell)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.WonderCell other) {
      if (other == pb4client.WonderCell.getDefaultInstance()) return this;
      if (other.hasWonderId()) {
        setWonderId(other.getWonderId());
      }
      if (other.hasWonderStatus()) {
        setWonderStatus(other.getWonderStatus());
      }
      if (other.hasWarStartTime()) {
        setWarStartTime(other.getWarStartTime());
      }
      if (other.hasWarOverTime()) {
        setWarOverTime(other.getWarOverTime());
      }
      if (other.hasBelongInfo()) {
        mergeBelongInfo(other.getBelongInfo());
      }
      if (other.hasGroupId()) {
        setGroupId(other.getGroupId());
      }
      if (other.hasCommandPlayerId()) {
        setCommandPlayerId(other.getCommandPlayerId());
      }
      if (other.hasMaxReinforceNum()) {
        setMaxReinforceNum(other.getMaxReinforceNum());
      }
      if (forcesBuilder_ == null) {
        if (!other.forces_.isEmpty()) {
          if (forces_.isEmpty()) {
            forces_ = other.forces_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureForcesIsMutable();
            forces_.addAll(other.forces_);
          }
          onChanged();
        }
      } else {
        if (!other.forces_.isEmpty()) {
          if (forcesBuilder_.isEmpty()) {
            forcesBuilder_.dispose();
            forcesBuilder_ = null;
            forces_ = other.forces_;
            bitField0_ = (bitField0_ & ~0x00000100);
            forcesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getForcesFieldBuilder() : null;
          } else {
            forcesBuilder_.addAllMessages(other.forces_);
          }
        }
      }
      if (other.hasAmnestyCount()) {
        setAmnestyCount(other.getAmnestyCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasWonderId()) {
        return false;
      }
      if (!hasWonderStatus()) {
        return false;
      }
      if (!hasWarStartTime()) {
        return false;
      }
      if (hasBelongInfo()) {
        if (!getBelongInfo().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getForcesCount(); i++) {
        if (!getForces(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.WonderCell parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.WonderCell) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int wonderId_ ;
    /**
     * <pre>
     *奇观配置Id
     * </pre>
     *
     * <code>required int32 wonderId = 1;</code>
     */
    public boolean hasWonderId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *奇观配置Id
     * </pre>
     *
     * <code>required int32 wonderId = 1;</code>
     */
    public int getWonderId() {
      return wonderId_;
    }
    /**
     * <pre>
     *奇观配置Id
     * </pre>
     *
     * <code>required int32 wonderId = 1;</code>
     */
    public Builder setWonderId(int value) {
      bitField0_ |= 0x00000001;
      wonderId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *奇观配置Id
     * </pre>
     *
     * <code>required int32 wonderId = 1;</code>
     */
    public Builder clearWonderId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wonderId_ = 0;
      onChanged();
      return this;
    }

    private int wonderStatus_ ;
    /**
     * <pre>
     * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
     * </pre>
     *
     * <code>required int32 wonderStatus = 2;</code>
     */
    public boolean hasWonderStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
     * </pre>
     *
     * <code>required int32 wonderStatus = 2;</code>
     */
    public int getWonderStatus() {
      return wonderStatus_;
    }
    /**
     * <pre>
     * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
     * </pre>
     *
     * <code>required int32 wonderStatus = 2;</code>
     */
    public Builder setWonderStatus(int value) {
      bitField0_ |= 0x00000002;
      wonderStatus_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 奇观状态 1、和平 2、争夺 3、冒烟 4、冒火
     * </pre>
     *
     * <code>required int32 wonderStatus = 2;</code>
     */
    public Builder clearWonderStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      wonderStatus_ = 0;
      onChanged();
      return this;
    }

    private int warStartTime_ ;
    /**
     * <pre>
     * 开始争夺时间，和平时期指示下次争夺时间
     * </pre>
     *
     * <code>required int32 warStartTime = 3;</code>
     */
    public boolean hasWarStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 开始争夺时间，和平时期指示下次争夺时间
     * </pre>
     *
     * <code>required int32 warStartTime = 3;</code>
     */
    public int getWarStartTime() {
      return warStartTime_;
    }
    /**
     * <pre>
     * 开始争夺时间，和平时期指示下次争夺时间
     * </pre>
     *
     * <code>required int32 warStartTime = 3;</code>
     */
    public Builder setWarStartTime(int value) {
      bitField0_ |= 0x00000004;
      warStartTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 开始争夺时间，和平时期指示下次争夺时间
     * </pre>
     *
     * <code>required int32 warStartTime = 3;</code>
     */
    public Builder clearWarStartTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      warStartTime_ = 0;
      onChanged();
      return this;
    }

    private int warOverTime_ ;
    /**
     * <pre>
     * 结束争夺时间，跟随部队占领
     * </pre>
     *
     * <code>optional int32 warOverTime = 4;</code>
     */
    public boolean hasWarOverTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 结束争夺时间，跟随部队占领
     * </pre>
     *
     * <code>optional int32 warOverTime = 4;</code>
     */
    public int getWarOverTime() {
      return warOverTime_;
    }
    /**
     * <pre>
     * 结束争夺时间，跟随部队占领
     * </pre>
     *
     * <code>optional int32 warOverTime = 4;</code>
     */
    public Builder setWarOverTime(int value) {
      bitField0_ |= 0x00000008;
      warOverTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 结束争夺时间，跟随部队占领
     * </pre>
     *
     * <code>optional int32 warOverTime = 4;</code>
     */
    public Builder clearWarOverTime() {
      bitField0_ = (bitField0_ & ~0x00000008);
      warOverTime_ = 0;
      onChanged();
      return this;
    }

    private pb4client.PlayerNameInfo belongInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> belongInfoBuilder_;
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public boolean hasBelongInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public pb4client.PlayerNameInfo getBelongInfo() {
      if (belongInfoBuilder_ == null) {
        return belongInfo_ == null ? pb4client.PlayerNameInfo.getDefaultInstance() : belongInfo_;
      } else {
        return belongInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public Builder setBelongInfo(pb4client.PlayerNameInfo value) {
      if (belongInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        belongInfo_ = value;
        onChanged();
      } else {
        belongInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public Builder setBelongInfo(
        pb4client.PlayerNameInfo.Builder builderForValue) {
      if (belongInfoBuilder_ == null) {
        belongInfo_ = builderForValue.build();
        onChanged();
      } else {
        belongInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public Builder mergeBelongInfo(pb4client.PlayerNameInfo value) {
      if (belongInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            belongInfo_ != null &&
            belongInfo_ != pb4client.PlayerNameInfo.getDefaultInstance()) {
          belongInfo_ =
            pb4client.PlayerNameInfo.newBuilder(belongInfo_).mergeFrom(value).buildPartial();
        } else {
          belongInfo_ = value;
        }
        onChanged();
      } else {
        belongInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public Builder clearBelongInfo() {
      if (belongInfoBuilder_ == null) {
        belongInfo_ = null;
        onChanged();
      } else {
        belongInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public pb4client.PlayerNameInfo.Builder getBelongInfoBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getBelongInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    public pb4client.PlayerNameInfoOrBuilder getBelongInfoOrBuilder() {
      if (belongInfoBuilder_ != null) {
        return belongInfoBuilder_.getMessageOrBuilder();
      } else {
        return belongInfo_ == null ?
            pb4client.PlayerNameInfo.getDefaultInstance() : belongInfo_;
      }
    }
    /**
     * <pre>
     *奇观归属者信息
     * </pre>
     *
     * <code>optional .client2server.PlayerNameInfo belongInfo = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder> 
        getBelongInfoFieldBuilder() {
      if (belongInfoBuilder_ == null) {
        belongInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.PlayerNameInfo, pb4client.PlayerNameInfo.Builder, pb4client.PlayerNameInfoOrBuilder>(
                getBelongInfo(),
                getParentForChildren(),
                isClean());
        belongInfo_ = null;
      }
      return belongInfoBuilder_;
    }

    private long groupId_ ;
    /**
     * <pre>
     *占领的奇观行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 6;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *占领的奇观行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 6;</code>
     */
    public long getGroupId() {
      return groupId_;
    }
    /**
     * <pre>
     *占领的奇观行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 6;</code>
     */
    public Builder setGroupId(long value) {
      bitField0_ |= 0x00000020;
      groupId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *占领的奇观行军组Id
     * </pre>
     *
     * <code>optional int64 groupId = 6;</code>
     */
    public Builder clearGroupId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      groupId_ = 0L;
      onChanged();
      return this;
    }

    private long commandPlayerId_ ;
    /**
     * <pre>
     *指挥官玩家Id
     * </pre>
     *
     * <code>optional int64 commandPlayerId = 7;</code>
     */
    public boolean hasCommandPlayerId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *指挥官玩家Id
     * </pre>
     *
     * <code>optional int64 commandPlayerId = 7;</code>
     */
    public long getCommandPlayerId() {
      return commandPlayerId_;
    }
    /**
     * <pre>
     *指挥官玩家Id
     * </pre>
     *
     * <code>optional int64 commandPlayerId = 7;</code>
     */
    public Builder setCommandPlayerId(long value) {
      bitField0_ |= 0x00000040;
      commandPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *指挥官玩家Id
     * </pre>
     *
     * <code>optional int64 commandPlayerId = 7;</code>
     */
    public Builder clearCommandPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000040);
      commandPlayerId_ = 0L;
      onChanged();
      return this;
    }

    private int maxReinforceNum_ ;
    /**
     * <pre>
     *最大集结数量
     * </pre>
     *
     * <code>optional int32 maxReinforceNum = 8;</code>
     */
    public boolean hasMaxReinforceNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *最大集结数量
     * </pre>
     *
     * <code>optional int32 maxReinforceNum = 8;</code>
     */
    public int getMaxReinforceNum() {
      return maxReinforceNum_;
    }
    /**
     * <pre>
     *最大集结数量
     * </pre>
     *
     * <code>optional int32 maxReinforceNum = 8;</code>
     */
    public Builder setMaxReinforceNum(int value) {
      bitField0_ |= 0x00000080;
      maxReinforceNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *最大集结数量
     * </pre>
     *
     * <code>optional int32 maxReinforceNum = 8;</code>
     */
    public Builder clearMaxReinforceNum() {
      bitField0_ = (bitField0_ & ~0x00000080);
      maxReinforceNum_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4client.MassForce> forces_ =
      java.util.Collections.emptyList();
    private void ensureForcesIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        forces_ = new java.util.ArrayList<pb4client.MassForce>(forces_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.MassForce, pb4client.MassForce.Builder, pb4client.MassForceOrBuilder> forcesBuilder_;

    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public java.util.List<pb4client.MassForce> getForcesList() {
      if (forcesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(forces_);
      } else {
        return forcesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public int getForcesCount() {
      if (forcesBuilder_ == null) {
        return forces_.size();
      } else {
        return forcesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public pb4client.MassForce getForces(int index) {
      if (forcesBuilder_ == null) {
        return forces_.get(index);
      } else {
        return forcesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder setForces(
        int index, pb4client.MassForce value) {
      if (forcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureForcesIsMutable();
        forces_.set(index, value);
        onChanged();
      } else {
        forcesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder setForces(
        int index, pb4client.MassForce.Builder builderForValue) {
      if (forcesBuilder_ == null) {
        ensureForcesIsMutable();
        forces_.set(index, builderForValue.build());
        onChanged();
      } else {
        forcesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder addForces(pb4client.MassForce value) {
      if (forcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureForcesIsMutable();
        forces_.add(value);
        onChanged();
      } else {
        forcesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder addForces(
        int index, pb4client.MassForce value) {
      if (forcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureForcesIsMutable();
        forces_.add(index, value);
        onChanged();
      } else {
        forcesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder addForces(
        pb4client.MassForce.Builder builderForValue) {
      if (forcesBuilder_ == null) {
        ensureForcesIsMutable();
        forces_.add(builderForValue.build());
        onChanged();
      } else {
        forcesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder addForces(
        int index, pb4client.MassForce.Builder builderForValue) {
      if (forcesBuilder_ == null) {
        ensureForcesIsMutable();
        forces_.add(index, builderForValue.build());
        onChanged();
      } else {
        forcesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder addAllForces(
        java.lang.Iterable<? extends pb4client.MassForce> values) {
      if (forcesBuilder_ == null) {
        ensureForcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, forces_);
        onChanged();
      } else {
        forcesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder clearForces() {
      if (forcesBuilder_ == null) {
        forces_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        forcesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public Builder removeForces(int index) {
      if (forcesBuilder_ == null) {
        ensureForcesIsMutable();
        forces_.remove(index);
        onChanged();
      } else {
        forcesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public pb4client.MassForce.Builder getForcesBuilder(
        int index) {
      return getForcesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public pb4client.MassForceOrBuilder getForcesOrBuilder(
        int index) {
      if (forcesBuilder_ == null) {
        return forces_.get(index);  } else {
        return forcesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public java.util.List<? extends pb4client.MassForceOrBuilder> 
         getForcesOrBuilderList() {
      if (forcesBuilder_ != null) {
        return forcesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(forces_);
      }
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public pb4client.MassForce.Builder addForcesBuilder() {
      return getForcesFieldBuilder().addBuilder(
          pb4client.MassForce.getDefaultInstance());
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public pb4client.MassForce.Builder addForcesBuilder(
        int index) {
      return getForcesFieldBuilder().addBuilder(
          index, pb4client.MassForce.getDefaultInstance());
    }
    /**
     * <pre>
     *同联盟玩家，可查询到集结部队信息
     * </pre>
     *
     * <code>repeated .client2server.MassForce forces = 9;</code>
     */
    public java.util.List<pb4client.MassForce.Builder> 
         getForcesBuilderList() {
      return getForcesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4client.MassForce, pb4client.MassForce.Builder, pb4client.MassForceOrBuilder> 
        getForcesFieldBuilder() {
      if (forcesBuilder_ == null) {
        forcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4client.MassForce, pb4client.MassForce.Builder, pb4client.MassForceOrBuilder>(
                forces_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        forces_ = null;
      }
      return forcesBuilder_;
    }

    private int amnestyCount_ ;
    /**
     * <pre>
     *剩余天下大赦次数
     * </pre>
     *
     * <code>optional int32 amnestyCount = 12;</code>
     */
    public boolean hasAmnestyCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *剩余天下大赦次数
     * </pre>
     *
     * <code>optional int32 amnestyCount = 12;</code>
     */
    public int getAmnestyCount() {
      return amnestyCount_;
    }
    /**
     * <pre>
     *剩余天下大赦次数
     * </pre>
     *
     * <code>optional int32 amnestyCount = 12;</code>
     */
    public Builder setAmnestyCount(int value) {
      bitField0_ |= 0x00000200;
      amnestyCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *剩余天下大赦次数
     * </pre>
     *
     * <code>optional int32 amnestyCount = 12;</code>
     */
    public Builder clearAmnestyCount() {
      bitField0_ = (bitField0_ & ~0x00000200);
      amnestyCount_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.WonderCell)
  }

  // @@protoc_insertion_point(class_scope:client2server.WonderCell)
  private static final pb4client.WonderCell DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.WonderCell();
  }

  public static pb4client.WonderCell getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<WonderCell>
      PARSER = new com.google.protobuf.AbstractParser<WonderCell>() {
    public WonderCell parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new WonderCell(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WonderCell> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WonderCell> getParserForType() {
    return PARSER;
  }

  public pb4client.WonderCell getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

