// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.NewEveryLandInfo}
 */
public  final class NewEveryLandInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.NewEveryLandInfo)
    NewEveryLandInfoOrBuilder {
  // Use NewEveryLandInfo.newBuilder() to construct.
  private NewEveryLandInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NewEveryLandInfo() {
    x_ = 0;
    y_ = 0;
    gridX_ = 0;
    gridY_ = 0;
    cellType_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NewEveryLandInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            x_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            y_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            gridX_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            gridY_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            cellType_ = input.readInt32();
            break;
          }
          case 50: {
            pb4client.ResLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              subBuilder = resInfo_.toBuilder();
            }
            resInfo_ = input.readMessage(pb4client.ResLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resInfo_);
              resInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000020;
            break;
          }
          case 58: {
            pb4client.BossLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              subBuilder = bossLandInfo_.toBuilder();
            }
            bossLandInfo_ = input.readMessage(pb4client.BossLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(bossLandInfo_);
              bossLandInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000040;
            break;
          }
          case 74: {
            pb4client.RelicLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              subBuilder = relicInfo_.toBuilder();
            }
            relicInfo_ = input.readMessage(pb4client.RelicLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(relicInfo_);
              relicInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000080;
            break;
          }
          case 82: {
            pb4client.CastleLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              subBuilder = castleInfo_.toBuilder();
            }
            castleInfo_ = input.readMessage(pb4client.CastleLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(castleInfo_);
              castleInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000100;
            break;
          }
          case 90: {
            pb4client.WonderLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              subBuilder = wonderInfo_.toBuilder();
            }
            wonderInfo_ = input.readMessage(pb4client.WonderLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(wonderInfo_);
              wonderInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 98: {
            pb4client.BelongLandInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              subBuilder = belongInfo_.toBuilder();
            }
            belongInfo_ = input.readMessage(pb4client.BelongLandInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(belongInfo_);
              belongInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000400;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_NewEveryLandInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_NewEveryLandInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.NewEveryLandInfo.class, pb4client.NewEveryLandInfo.Builder.class);
  }

  private int bitField0_;
  public static final int X_FIELD_NUMBER = 1;
  private int x_;
  /**
   * <code>required int32 x = 1;</code>
   */
  public boolean hasX() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int32 x = 1;</code>
   */
  public int getX() {
    return x_;
  }

  public static final int Y_FIELD_NUMBER = 2;
  private int y_;
  /**
   * <code>required int32 y = 2;</code>
   */
  public boolean hasY() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int32 y = 2;</code>
   */
  public int getY() {
    return y_;
  }

  public static final int GRIDX_FIELD_NUMBER = 3;
  private int gridX_;
  /**
   * <code>required int32 gridX = 3;</code>
   */
  public boolean hasGridX() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required int32 gridX = 3;</code>
   */
  public int getGridX() {
    return gridX_;
  }

  public static final int GRIDY_FIELD_NUMBER = 4;
  private int gridY_;
  /**
   * <code>required int32 gridY = 4;</code>
   */
  public boolean hasGridY() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>required int32 gridY = 4;</code>
   */
  public int getGridY() {
    return gridY_;
  }

  public static final int CELLTYPE_FIELD_NUMBER = 5;
  private int cellType_;
  /**
   * <pre>
   * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
   * </pre>
   *
   * <code>optional int32 cellType = 5;</code>
   */
  public boolean hasCellType() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
   * </pre>
   *
   * <code>optional int32 cellType = 5;</code>
   */
  public int getCellType() {
    return cellType_;
  }

  public static final int RESINFO_FIELD_NUMBER = 6;
  private pb4client.ResLandInfo resInfo_;
  /**
   * <pre>
   * 资源地块信息
   * </pre>
   *
   * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
   */
  public boolean hasResInfo() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 资源地块信息
   * </pre>
   *
   * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
   */
  public pb4client.ResLandInfo getResInfo() {
    return resInfo_ == null ? pb4client.ResLandInfo.getDefaultInstance() : resInfo_;
  }
  /**
   * <pre>
   * 资源地块信息
   * </pre>
   *
   * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
   */
  public pb4client.ResLandInfoOrBuilder getResInfoOrBuilder() {
    return resInfo_ == null ? pb4client.ResLandInfo.getDefaultInstance() : resInfo_;
  }

  public static final int BOSSLANDINFO_FIELD_NUMBER = 7;
  private pb4client.BossLandInfo bossLandInfo_;
  /**
   * <pre>
   *魔物地块信息
   * </pre>
   *
   * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
   */
  public boolean hasBossLandInfo() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   *魔物地块信息
   * </pre>
   *
   * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
   */
  public pb4client.BossLandInfo getBossLandInfo() {
    return bossLandInfo_ == null ? pb4client.BossLandInfo.getDefaultInstance() : bossLandInfo_;
  }
  /**
   * <pre>
   *魔物地块信息
   * </pre>
   *
   * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
   */
  public pb4client.BossLandInfoOrBuilder getBossLandInfoOrBuilder() {
    return bossLandInfo_ == null ? pb4client.BossLandInfo.getDefaultInstance() : bossLandInfo_;
  }

  public static final int RELICINFO_FIELD_NUMBER = 9;
  private pb4client.RelicLandInfo relicInfo_;
  /**
   * <pre>
   *遗迹地块信息
   * </pre>
   *
   * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
   */
  public boolean hasRelicInfo() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   *遗迹地块信息
   * </pre>
   *
   * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
   */
  public pb4client.RelicLandInfo getRelicInfo() {
    return relicInfo_ == null ? pb4client.RelicLandInfo.getDefaultInstance() : relicInfo_;
  }
  /**
   * <pre>
   *遗迹地块信息
   * </pre>
   *
   * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
   */
  public pb4client.RelicLandInfoOrBuilder getRelicInfoOrBuilder() {
    return relicInfo_ == null ? pb4client.RelicLandInfo.getDefaultInstance() : relicInfo_;
  }

  public static final int CASTLEINFO_FIELD_NUMBER = 10;
  private pb4client.CastleLandInfo castleInfo_;
  /**
   * <pre>
   *城池地块信息
   * </pre>
   *
   * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
   */
  public boolean hasCastleInfo() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *城池地块信息
   * </pre>
   *
   * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
   */
  public pb4client.CastleLandInfo getCastleInfo() {
    return castleInfo_ == null ? pb4client.CastleLandInfo.getDefaultInstance() : castleInfo_;
  }
  /**
   * <pre>
   *城池地块信息
   * </pre>
   *
   * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
   */
  public pb4client.CastleLandInfoOrBuilder getCastleInfoOrBuilder() {
    return castleInfo_ == null ? pb4client.CastleLandInfo.getDefaultInstance() : castleInfo_;
  }

  public static final int WONDERINFO_FIELD_NUMBER = 11;
  private pb4client.WonderLandInfo wonderInfo_;
  /**
   * <pre>
   *奇观地块信息
   * </pre>
   *
   * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
   */
  public boolean hasWonderInfo() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *奇观地块信息
   * </pre>
   *
   * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
   */
  public pb4client.WonderLandInfo getWonderInfo() {
    return wonderInfo_ == null ? pb4client.WonderLandInfo.getDefaultInstance() : wonderInfo_;
  }
  /**
   * <pre>
   *奇观地块信息
   * </pre>
   *
   * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
   */
  public pb4client.WonderLandInfoOrBuilder getWonderInfoOrBuilder() {
    return wonderInfo_ == null ? pb4client.WonderLandInfo.getDefaultInstance() : wonderInfo_;
  }

  public static final int BELONGINFO_FIELD_NUMBER = 12;
  private pb4client.BelongLandInfo belongInfo_;
  /**
   * <pre>
   *归属地块信息
   * </pre>
   *
   * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
   */
  public boolean hasBelongInfo() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   *归属地块信息
   * </pre>
   *
   * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
   */
  public pb4client.BelongLandInfo getBelongInfo() {
    return belongInfo_ == null ? pb4client.BelongLandInfo.getDefaultInstance() : belongInfo_;
  }
  /**
   * <pre>
   *归属地块信息
   * </pre>
   *
   * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
   */
  public pb4client.BelongLandInfoOrBuilder getBelongInfoOrBuilder() {
    return belongInfo_ == null ? pb4client.BelongLandInfo.getDefaultInstance() : belongInfo_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasGridX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasGridY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasResInfo()) {
      if (!getResInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasBossLandInfo()) {
      if (!getBossLandInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasCastleInfo()) {
      if (!getCastleInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasBelongInfo()) {
      if (!getBelongInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, x_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, y_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, gridX_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, gridY_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, cellType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(6, getResInfo());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeMessage(7, getBossLandInfo());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeMessage(9, getRelicInfo());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(10, getCastleInfo());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(11, getWonderInfo());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeMessage(12, getBelongInfo());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, x_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, y_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, gridX_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, gridY_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, cellType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getResInfo());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getBossLandInfo());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getRelicInfo());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getCastleInfo());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getWonderInfo());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getBelongInfo());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.NewEveryLandInfo)) {
      return super.equals(obj);
    }
    pb4client.NewEveryLandInfo other = (pb4client.NewEveryLandInfo) obj;

    boolean result = true;
    result = result && (hasX() == other.hasX());
    if (hasX()) {
      result = result && (getX()
          == other.getX());
    }
    result = result && (hasY() == other.hasY());
    if (hasY()) {
      result = result && (getY()
          == other.getY());
    }
    result = result && (hasGridX() == other.hasGridX());
    if (hasGridX()) {
      result = result && (getGridX()
          == other.getGridX());
    }
    result = result && (hasGridY() == other.hasGridY());
    if (hasGridY()) {
      result = result && (getGridY()
          == other.getGridY());
    }
    result = result && (hasCellType() == other.hasCellType());
    if (hasCellType()) {
      result = result && (getCellType()
          == other.getCellType());
    }
    result = result && (hasResInfo() == other.hasResInfo());
    if (hasResInfo()) {
      result = result && getResInfo()
          .equals(other.getResInfo());
    }
    result = result && (hasBossLandInfo() == other.hasBossLandInfo());
    if (hasBossLandInfo()) {
      result = result && getBossLandInfo()
          .equals(other.getBossLandInfo());
    }
    result = result && (hasRelicInfo() == other.hasRelicInfo());
    if (hasRelicInfo()) {
      result = result && getRelicInfo()
          .equals(other.getRelicInfo());
    }
    result = result && (hasCastleInfo() == other.hasCastleInfo());
    if (hasCastleInfo()) {
      result = result && getCastleInfo()
          .equals(other.getCastleInfo());
    }
    result = result && (hasWonderInfo() == other.hasWonderInfo());
    if (hasWonderInfo()) {
      result = result && getWonderInfo()
          .equals(other.getWonderInfo());
    }
    result = result && (hasBelongInfo() == other.hasBelongInfo());
    if (hasBelongInfo()) {
      result = result && getBelongInfo()
          .equals(other.getBelongInfo());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasX()) {
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
    }
    if (hasY()) {
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
    }
    if (hasGridX()) {
      hash = (37 * hash) + GRIDX_FIELD_NUMBER;
      hash = (53 * hash) + getGridX();
    }
    if (hasGridY()) {
      hash = (37 * hash) + GRIDY_FIELD_NUMBER;
      hash = (53 * hash) + getGridY();
    }
    if (hasCellType()) {
      hash = (37 * hash) + CELLTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCellType();
    }
    if (hasResInfo()) {
      hash = (37 * hash) + RESINFO_FIELD_NUMBER;
      hash = (53 * hash) + getResInfo().hashCode();
    }
    if (hasBossLandInfo()) {
      hash = (37 * hash) + BOSSLANDINFO_FIELD_NUMBER;
      hash = (53 * hash) + getBossLandInfo().hashCode();
    }
    if (hasRelicInfo()) {
      hash = (37 * hash) + RELICINFO_FIELD_NUMBER;
      hash = (53 * hash) + getRelicInfo().hashCode();
    }
    if (hasCastleInfo()) {
      hash = (37 * hash) + CASTLEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getCastleInfo().hashCode();
    }
    if (hasWonderInfo()) {
      hash = (37 * hash) + WONDERINFO_FIELD_NUMBER;
      hash = (53 * hash) + getWonderInfo().hashCode();
    }
    if (hasBelongInfo()) {
      hash = (37 * hash) + BELONGINFO_FIELD_NUMBER;
      hash = (53 * hash) + getBelongInfo().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.NewEveryLandInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewEveryLandInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.NewEveryLandInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.NewEveryLandInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.NewEveryLandInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.NewEveryLandInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.NewEveryLandInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.NewEveryLandInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.NewEveryLandInfo)
      pb4client.NewEveryLandInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_NewEveryLandInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_NewEveryLandInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.NewEveryLandInfo.class, pb4client.NewEveryLandInfo.Builder.class);
    }

    // Construct using pb4client.NewEveryLandInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getResInfoFieldBuilder();
        getBossLandInfoFieldBuilder();
        getRelicInfoFieldBuilder();
        getCastleInfoFieldBuilder();
        getWonderInfoFieldBuilder();
        getBelongInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      x_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      y_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      gridX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      gridY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      cellType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (resInfoBuilder_ == null) {
        resInfo_ = null;
      } else {
        resInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (bossLandInfoBuilder_ == null) {
        bossLandInfo_ = null;
      } else {
        bossLandInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (relicInfoBuilder_ == null) {
        relicInfo_ = null;
      } else {
        relicInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (castleInfoBuilder_ == null) {
        castleInfo_ = null;
      } else {
        castleInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (wonderInfoBuilder_ == null) {
        wonderInfo_ = null;
      } else {
        wonderInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (belongInfoBuilder_ == null) {
        belongInfo_ = null;
      } else {
        belongInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_NewEveryLandInfo_descriptor;
    }

    public pb4client.NewEveryLandInfo getDefaultInstanceForType() {
      return pb4client.NewEveryLandInfo.getDefaultInstance();
    }

    public pb4client.NewEveryLandInfo build() {
      pb4client.NewEveryLandInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.NewEveryLandInfo buildPartial() {
      pb4client.NewEveryLandInfo result = new pb4client.NewEveryLandInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.x_ = x_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.y_ = y_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.gridX_ = gridX_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.gridY_ = gridY_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.cellType_ = cellType_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      if (resInfoBuilder_ == null) {
        result.resInfo_ = resInfo_;
      } else {
        result.resInfo_ = resInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      if (bossLandInfoBuilder_ == null) {
        result.bossLandInfo_ = bossLandInfo_;
      } else {
        result.bossLandInfo_ = bossLandInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      if (relicInfoBuilder_ == null) {
        result.relicInfo_ = relicInfo_;
      } else {
        result.relicInfo_ = relicInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      if (castleInfoBuilder_ == null) {
        result.castleInfo_ = castleInfo_;
      } else {
        result.castleInfo_ = castleInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      if (wonderInfoBuilder_ == null) {
        result.wonderInfo_ = wonderInfo_;
      } else {
        result.wonderInfo_ = wonderInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      if (belongInfoBuilder_ == null) {
        result.belongInfo_ = belongInfo_;
      } else {
        result.belongInfo_ = belongInfoBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.NewEveryLandInfo) {
        return mergeFrom((pb4client.NewEveryLandInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.NewEveryLandInfo other) {
      if (other == pb4client.NewEveryLandInfo.getDefaultInstance()) return this;
      if (other.hasX()) {
        setX(other.getX());
      }
      if (other.hasY()) {
        setY(other.getY());
      }
      if (other.hasGridX()) {
        setGridX(other.getGridX());
      }
      if (other.hasGridY()) {
        setGridY(other.getGridY());
      }
      if (other.hasCellType()) {
        setCellType(other.getCellType());
      }
      if (other.hasResInfo()) {
        mergeResInfo(other.getResInfo());
      }
      if (other.hasBossLandInfo()) {
        mergeBossLandInfo(other.getBossLandInfo());
      }
      if (other.hasRelicInfo()) {
        mergeRelicInfo(other.getRelicInfo());
      }
      if (other.hasCastleInfo()) {
        mergeCastleInfo(other.getCastleInfo());
      }
      if (other.hasWonderInfo()) {
        mergeWonderInfo(other.getWonderInfo());
      }
      if (other.hasBelongInfo()) {
        mergeBelongInfo(other.getBelongInfo());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasX()) {
        return false;
      }
      if (!hasY()) {
        return false;
      }
      if (!hasGridX()) {
        return false;
      }
      if (!hasGridY()) {
        return false;
      }
      if (hasResInfo()) {
        if (!getResInfo().isInitialized()) {
          return false;
        }
      }
      if (hasBossLandInfo()) {
        if (!getBossLandInfo().isInitialized()) {
          return false;
        }
      }
      if (hasCastleInfo()) {
        if (!getCastleInfo().isInitialized()) {
          return false;
        }
      }
      if (hasBelongInfo()) {
        if (!getBelongInfo().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.NewEveryLandInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.NewEveryLandInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int x_ ;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public Builder setX(int value) {
      bitField0_ |= 0x00000001;
      x_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public Builder clearX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      x_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <code>required int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public Builder setY(int value) {
      bitField0_ |= 0x00000002;
      y_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      y_ = 0;
      onChanged();
      return this;
    }

    private int gridX_ ;
    /**
     * <code>required int32 gridX = 3;</code>
     */
    public boolean hasGridX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 gridX = 3;</code>
     */
    public int getGridX() {
      return gridX_;
    }
    /**
     * <code>required int32 gridX = 3;</code>
     */
    public Builder setGridX(int value) {
      bitField0_ |= 0x00000004;
      gridX_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 gridX = 3;</code>
     */
    public Builder clearGridX() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gridX_ = 0;
      onChanged();
      return this;
    }

    private int gridY_ ;
    /**
     * <code>required int32 gridY = 4;</code>
     */
    public boolean hasGridY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 gridY = 4;</code>
     */
    public int getGridY() {
      return gridY_;
    }
    /**
     * <code>required int32 gridY = 4;</code>
     */
    public Builder setGridY(int value) {
      bitField0_ |= 0x00000008;
      gridY_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 gridY = 4;</code>
     */
    public Builder clearGridY() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gridY_ = 0;
      onChanged();
      return this;
    }

    private int cellType_ ;
    /**
     * <pre>
     * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
     * </pre>
     *
     * <code>optional int32 cellType = 5;</code>
     */
    public boolean hasCellType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
     * </pre>
     *
     * <code>optional int32 cellType = 5;</code>
     */
    public int getCellType() {
      return cellType_;
    }
    /**
     * <pre>
     * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
     * </pre>
     *
     * <code>optional int32 cellType = 5;</code>
     */
    public Builder setCellType(int value) {
      bitField0_ |= 0x00000010;
      cellType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 土地上的元素类型 1-资源点 2-魔物 3-遗迹 4- 玩家城池 5-奇观 11-召唤boss 12-尸体资源地 13-活动boss 14-属地
     * </pre>
     *
     * <code>optional int32 cellType = 5;</code>
     */
    public Builder clearCellType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      cellType_ = 0;
      onChanged();
      return this;
    }

    private pb4client.ResLandInfo resInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ResLandInfo, pb4client.ResLandInfo.Builder, pb4client.ResLandInfoOrBuilder> resInfoBuilder_;
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public boolean hasResInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public pb4client.ResLandInfo getResInfo() {
      if (resInfoBuilder_ == null) {
        return resInfo_ == null ? pb4client.ResLandInfo.getDefaultInstance() : resInfo_;
      } else {
        return resInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public Builder setResInfo(pb4client.ResLandInfo value) {
      if (resInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resInfo_ = value;
        onChanged();
      } else {
        resInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public Builder setResInfo(
        pb4client.ResLandInfo.Builder builderForValue) {
      if (resInfoBuilder_ == null) {
        resInfo_ = builderForValue.build();
        onChanged();
      } else {
        resInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public Builder mergeResInfo(pb4client.ResLandInfo value) {
      if (resInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            resInfo_ != null &&
            resInfo_ != pb4client.ResLandInfo.getDefaultInstance()) {
          resInfo_ =
            pb4client.ResLandInfo.newBuilder(resInfo_).mergeFrom(value).buildPartial();
        } else {
          resInfo_ = value;
        }
        onChanged();
      } else {
        resInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public Builder clearResInfo() {
      if (resInfoBuilder_ == null) {
        resInfo_ = null;
        onChanged();
      } else {
        resInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public pb4client.ResLandInfo.Builder getResInfoBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getResInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    public pb4client.ResLandInfoOrBuilder getResInfoOrBuilder() {
      if (resInfoBuilder_ != null) {
        return resInfoBuilder_.getMessageOrBuilder();
      } else {
        return resInfo_ == null ?
            pb4client.ResLandInfo.getDefaultInstance() : resInfo_;
      }
    }
    /**
     * <pre>
     * 资源地块信息
     * </pre>
     *
     * <code>optional .client2server.ResLandInfo resInfo = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ResLandInfo, pb4client.ResLandInfo.Builder, pb4client.ResLandInfoOrBuilder> 
        getResInfoFieldBuilder() {
      if (resInfoBuilder_ == null) {
        resInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.ResLandInfo, pb4client.ResLandInfo.Builder, pb4client.ResLandInfoOrBuilder>(
                getResInfo(),
                getParentForChildren(),
                isClean());
        resInfo_ = null;
      }
      return resInfoBuilder_;
    }

    private pb4client.BossLandInfo bossLandInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BossLandInfo, pb4client.BossLandInfo.Builder, pb4client.BossLandInfoOrBuilder> bossLandInfoBuilder_;
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public boolean hasBossLandInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public pb4client.BossLandInfo getBossLandInfo() {
      if (bossLandInfoBuilder_ == null) {
        return bossLandInfo_ == null ? pb4client.BossLandInfo.getDefaultInstance() : bossLandInfo_;
      } else {
        return bossLandInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public Builder setBossLandInfo(pb4client.BossLandInfo value) {
      if (bossLandInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bossLandInfo_ = value;
        onChanged();
      } else {
        bossLandInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public Builder setBossLandInfo(
        pb4client.BossLandInfo.Builder builderForValue) {
      if (bossLandInfoBuilder_ == null) {
        bossLandInfo_ = builderForValue.build();
        onChanged();
      } else {
        bossLandInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public Builder mergeBossLandInfo(pb4client.BossLandInfo value) {
      if (bossLandInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            bossLandInfo_ != null &&
            bossLandInfo_ != pb4client.BossLandInfo.getDefaultInstance()) {
          bossLandInfo_ =
            pb4client.BossLandInfo.newBuilder(bossLandInfo_).mergeFrom(value).buildPartial();
        } else {
          bossLandInfo_ = value;
        }
        onChanged();
      } else {
        bossLandInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      return this;
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public Builder clearBossLandInfo() {
      if (bossLandInfoBuilder_ == null) {
        bossLandInfo_ = null;
        onChanged();
      } else {
        bossLandInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public pb4client.BossLandInfo.Builder getBossLandInfoBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getBossLandInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    public pb4client.BossLandInfoOrBuilder getBossLandInfoOrBuilder() {
      if (bossLandInfoBuilder_ != null) {
        return bossLandInfoBuilder_.getMessageOrBuilder();
      } else {
        return bossLandInfo_ == null ?
            pb4client.BossLandInfo.getDefaultInstance() : bossLandInfo_;
      }
    }
    /**
     * <pre>
     *魔物地块信息
     * </pre>
     *
     * <code>optional .client2server.BossLandInfo bossLandInfo = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BossLandInfo, pb4client.BossLandInfo.Builder, pb4client.BossLandInfoOrBuilder> 
        getBossLandInfoFieldBuilder() {
      if (bossLandInfoBuilder_ == null) {
        bossLandInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.BossLandInfo, pb4client.BossLandInfo.Builder, pb4client.BossLandInfoOrBuilder>(
                getBossLandInfo(),
                getParentForChildren(),
                isClean());
        bossLandInfo_ = null;
      }
      return bossLandInfoBuilder_;
    }

    private pb4client.RelicLandInfo relicInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.RelicLandInfo, pb4client.RelicLandInfo.Builder, pb4client.RelicLandInfoOrBuilder> relicInfoBuilder_;
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public boolean hasRelicInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public pb4client.RelicLandInfo getRelicInfo() {
      if (relicInfoBuilder_ == null) {
        return relicInfo_ == null ? pb4client.RelicLandInfo.getDefaultInstance() : relicInfo_;
      } else {
        return relicInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public Builder setRelicInfo(pb4client.RelicLandInfo value) {
      if (relicInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        relicInfo_ = value;
        onChanged();
      } else {
        relicInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public Builder setRelicInfo(
        pb4client.RelicLandInfo.Builder builderForValue) {
      if (relicInfoBuilder_ == null) {
        relicInfo_ = builderForValue.build();
        onChanged();
      } else {
        relicInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public Builder mergeRelicInfo(pb4client.RelicLandInfo value) {
      if (relicInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            relicInfo_ != null &&
            relicInfo_ != pb4client.RelicLandInfo.getDefaultInstance()) {
          relicInfo_ =
            pb4client.RelicLandInfo.newBuilder(relicInfo_).mergeFrom(value).buildPartial();
        } else {
          relicInfo_ = value;
        }
        onChanged();
      } else {
        relicInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public Builder clearRelicInfo() {
      if (relicInfoBuilder_ == null) {
        relicInfo_ = null;
        onChanged();
      } else {
        relicInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public pb4client.RelicLandInfo.Builder getRelicInfoBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getRelicInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    public pb4client.RelicLandInfoOrBuilder getRelicInfoOrBuilder() {
      if (relicInfoBuilder_ != null) {
        return relicInfoBuilder_.getMessageOrBuilder();
      } else {
        return relicInfo_ == null ?
            pb4client.RelicLandInfo.getDefaultInstance() : relicInfo_;
      }
    }
    /**
     * <pre>
     *遗迹地块信息
     * </pre>
     *
     * <code>optional .client2server.RelicLandInfo relicInfo = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.RelicLandInfo, pb4client.RelicLandInfo.Builder, pb4client.RelicLandInfoOrBuilder> 
        getRelicInfoFieldBuilder() {
      if (relicInfoBuilder_ == null) {
        relicInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.RelicLandInfo, pb4client.RelicLandInfo.Builder, pb4client.RelicLandInfoOrBuilder>(
                getRelicInfo(),
                getParentForChildren(),
                isClean());
        relicInfo_ = null;
      }
      return relicInfoBuilder_;
    }

    private pb4client.CastleLandInfo castleInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CastleLandInfo, pb4client.CastleLandInfo.Builder, pb4client.CastleLandInfoOrBuilder> castleInfoBuilder_;
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public boolean hasCastleInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public pb4client.CastleLandInfo getCastleInfo() {
      if (castleInfoBuilder_ == null) {
        return castleInfo_ == null ? pb4client.CastleLandInfo.getDefaultInstance() : castleInfo_;
      } else {
        return castleInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public Builder setCastleInfo(pb4client.CastleLandInfo value) {
      if (castleInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        castleInfo_ = value;
        onChanged();
      } else {
        castleInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public Builder setCastleInfo(
        pb4client.CastleLandInfo.Builder builderForValue) {
      if (castleInfoBuilder_ == null) {
        castleInfo_ = builderForValue.build();
        onChanged();
      } else {
        castleInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public Builder mergeCastleInfo(pb4client.CastleLandInfo value) {
      if (castleInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            castleInfo_ != null &&
            castleInfo_ != pb4client.CastleLandInfo.getDefaultInstance()) {
          castleInfo_ =
            pb4client.CastleLandInfo.newBuilder(castleInfo_).mergeFrom(value).buildPartial();
        } else {
          castleInfo_ = value;
        }
        onChanged();
      } else {
        castleInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public Builder clearCastleInfo() {
      if (castleInfoBuilder_ == null) {
        castleInfo_ = null;
        onChanged();
      } else {
        castleInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public pb4client.CastleLandInfo.Builder getCastleInfoBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getCastleInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    public pb4client.CastleLandInfoOrBuilder getCastleInfoOrBuilder() {
      if (castleInfoBuilder_ != null) {
        return castleInfoBuilder_.getMessageOrBuilder();
      } else {
        return castleInfo_ == null ?
            pb4client.CastleLandInfo.getDefaultInstance() : castleInfo_;
      }
    }
    /**
     * <pre>
     *城池地块信息
     * </pre>
     *
     * <code>optional .client2server.CastleLandInfo castleInfo = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CastleLandInfo, pb4client.CastleLandInfo.Builder, pb4client.CastleLandInfoOrBuilder> 
        getCastleInfoFieldBuilder() {
      if (castleInfoBuilder_ == null) {
        castleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.CastleLandInfo, pb4client.CastleLandInfo.Builder, pb4client.CastleLandInfoOrBuilder>(
                getCastleInfo(),
                getParentForChildren(),
                isClean());
        castleInfo_ = null;
      }
      return castleInfoBuilder_;
    }

    private pb4client.WonderLandInfo wonderInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.WonderLandInfo, pb4client.WonderLandInfo.Builder, pb4client.WonderLandInfoOrBuilder> wonderInfoBuilder_;
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public boolean hasWonderInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public pb4client.WonderLandInfo getWonderInfo() {
      if (wonderInfoBuilder_ == null) {
        return wonderInfo_ == null ? pb4client.WonderLandInfo.getDefaultInstance() : wonderInfo_;
      } else {
        return wonderInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public Builder setWonderInfo(pb4client.WonderLandInfo value) {
      if (wonderInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        wonderInfo_ = value;
        onChanged();
      } else {
        wonderInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public Builder setWonderInfo(
        pb4client.WonderLandInfo.Builder builderForValue) {
      if (wonderInfoBuilder_ == null) {
        wonderInfo_ = builderForValue.build();
        onChanged();
      } else {
        wonderInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public Builder mergeWonderInfo(pb4client.WonderLandInfo value) {
      if (wonderInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            wonderInfo_ != null &&
            wonderInfo_ != pb4client.WonderLandInfo.getDefaultInstance()) {
          wonderInfo_ =
            pb4client.WonderLandInfo.newBuilder(wonderInfo_).mergeFrom(value).buildPartial();
        } else {
          wonderInfo_ = value;
        }
        onChanged();
      } else {
        wonderInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public Builder clearWonderInfo() {
      if (wonderInfoBuilder_ == null) {
        wonderInfo_ = null;
        onChanged();
      } else {
        wonderInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public pb4client.WonderLandInfo.Builder getWonderInfoBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getWonderInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    public pb4client.WonderLandInfoOrBuilder getWonderInfoOrBuilder() {
      if (wonderInfoBuilder_ != null) {
        return wonderInfoBuilder_.getMessageOrBuilder();
      } else {
        return wonderInfo_ == null ?
            pb4client.WonderLandInfo.getDefaultInstance() : wonderInfo_;
      }
    }
    /**
     * <pre>
     *奇观地块信息
     * </pre>
     *
     * <code>optional .client2server.WonderLandInfo wonderInfo = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.WonderLandInfo, pb4client.WonderLandInfo.Builder, pb4client.WonderLandInfoOrBuilder> 
        getWonderInfoFieldBuilder() {
      if (wonderInfoBuilder_ == null) {
        wonderInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.WonderLandInfo, pb4client.WonderLandInfo.Builder, pb4client.WonderLandInfoOrBuilder>(
                getWonderInfo(),
                getParentForChildren(),
                isClean());
        wonderInfo_ = null;
      }
      return wonderInfoBuilder_;
    }

    private pb4client.BelongLandInfo belongInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BelongLandInfo, pb4client.BelongLandInfo.Builder, pb4client.BelongLandInfoOrBuilder> belongInfoBuilder_;
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public boolean hasBelongInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public pb4client.BelongLandInfo getBelongInfo() {
      if (belongInfoBuilder_ == null) {
        return belongInfo_ == null ? pb4client.BelongLandInfo.getDefaultInstance() : belongInfo_;
      } else {
        return belongInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public Builder setBelongInfo(pb4client.BelongLandInfo value) {
      if (belongInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        belongInfo_ = value;
        onChanged();
      } else {
        belongInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public Builder setBelongInfo(
        pb4client.BelongLandInfo.Builder builderForValue) {
      if (belongInfoBuilder_ == null) {
        belongInfo_ = builderForValue.build();
        onChanged();
      } else {
        belongInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public Builder mergeBelongInfo(pb4client.BelongLandInfo value) {
      if (belongInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            belongInfo_ != null &&
            belongInfo_ != pb4client.BelongLandInfo.getDefaultInstance()) {
          belongInfo_ =
            pb4client.BelongLandInfo.newBuilder(belongInfo_).mergeFrom(value).buildPartial();
        } else {
          belongInfo_ = value;
        }
        onChanged();
      } else {
        belongInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public Builder clearBelongInfo() {
      if (belongInfoBuilder_ == null) {
        belongInfo_ = null;
        onChanged();
      } else {
        belongInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public pb4client.BelongLandInfo.Builder getBelongInfoBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getBelongInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    public pb4client.BelongLandInfoOrBuilder getBelongInfoOrBuilder() {
      if (belongInfoBuilder_ != null) {
        return belongInfoBuilder_.getMessageOrBuilder();
      } else {
        return belongInfo_ == null ?
            pb4client.BelongLandInfo.getDefaultInstance() : belongInfo_;
      }
    }
    /**
     * <pre>
     *归属地块信息
     * </pre>
     *
     * <code>optional .client2server.BelongLandInfo belongInfo = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BelongLandInfo, pb4client.BelongLandInfo.Builder, pb4client.BelongLandInfoOrBuilder> 
        getBelongInfoFieldBuilder() {
      if (belongInfoBuilder_ == null) {
        belongInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.BelongLandInfo, pb4client.BelongLandInfo.Builder, pb4client.BelongLandInfoOrBuilder>(
                getBelongInfo(),
                getParentForChildren(),
                isClean());
        belongInfo_ = null;
      }
      return belongInfoBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.NewEveryLandInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.NewEveryLandInfo)
  private static final pb4client.NewEveryLandInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.NewEveryLandInfo();
  }

  public static pb4client.NewEveryLandInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<NewEveryLandInfo>
      PARSER = new com.google.protobuf.AbstractParser<NewEveryLandInfo>() {
    public NewEveryLandInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewEveryLandInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NewEveryLandInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NewEveryLandInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.NewEveryLandInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

