// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

public interface QueryAlliacneRankInfoRtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:client2server.QueryAlliacneRankInfoRt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *排名
   * </pre>
   *
   * <code>optional int32 rank = 1;</code>
   */
  boolean hasRank();
  /**
   * <pre>
   *排名
   * </pre>
   *
   * <code>optional int32 rank = 1;</code>
   */
  int getRank();

  /**
   * <pre>
   *名称
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  boolean hasName();
  /**
   * <pre>
   *名称
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   *名称
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   *简称
   * </pre>
   *
   * <code>optional string shortName = 3;</code>
   */
  boolean hasShortName();
  /**
   * <pre>
   *简称
   * </pre>
   *
   * <code>optional string shortName = 3;</code>
   */
  java.lang.String getShortName();
  /**
   * <pre>
   *简称
   * </pre>
   *
   * <code>optional string shortName = 3;</code>
   */
  com.google.protobuf.ByteString
      getShortNameBytes();

  /**
   * <pre>
   *所属州
   * </pre>
   *
   * <code>optional int32 state = 5;</code>
   */
  boolean hasState();
  /**
   * <pre>
   *所属州
   * </pre>
   *
   * <code>optional int32 state = 5;</code>
   */
  int getState();

  /**
   * <pre>
   *成员数
   * </pre>
   *
   * <code>optional int32 memberNum = 6;</code>
   */
  boolean hasMemberNum();
  /**
   * <pre>
   *成员数
   * </pre>
   *
   * <code>optional int32 memberNum = 6;</code>
   */
  int getMemberNum();

  /**
   * <pre>
   *城池数
   * </pre>
   *
   * <code>optional int32 cityNum = 7;</code>
   */
  boolean hasCityNum();
  /**
   * <pre>
   *城池数
   * </pre>
   *
   * <code>optional int32 cityNum = 7;</code>
   */
  int getCityNum();

  /**
   * <pre>
   *势力值
   * </pre>
   *
   * <code>optional int32 alliancePower = 8;</code>
   */
  boolean hasAlliancePower();
  /**
   * <pre>
   *势力值
   * </pre>
   *
   * <code>optional int32 alliancePower = 8;</code>
   */
  int getAlliancePower();

  /**
   * <pre>
   *盟主
   * </pre>
   *
   * <code>optional string mainPlayerName = 9;</code>
   */
  boolean hasMainPlayerName();
  /**
   * <pre>
   *盟主
   * </pre>
   *
   * <code>optional string mainPlayerName = 9;</code>
   */
  java.lang.String getMainPlayerName();
  /**
   * <pre>
   *盟主
   * </pre>
   *
   * <code>optional string mainPlayerName = 9;</code>
   */
  com.google.protobuf.ByteString
      getMainPlayerNameBytes();

  /**
   * <pre>
   *旗帜的颜色模版ID
   * </pre>
   *
   * <code>optional int32 flagColor = 10;</code>
   */
  boolean hasFlagColor();
  /**
   * <pre>
   *旗帜的颜色模版ID
   * </pre>
   *
   * <code>optional int32 flagColor = 10;</code>
   */
  int getFlagColor();

  /**
   * <pre>
   *旗帜的样式模版ID
   * </pre>
   *
   * <code>optional int32 flagStyle = 11;</code>
   */
  boolean hasFlagStyle();
  /**
   * <pre>
   *旗帜的样式模版ID
   * </pre>
   *
   * <code>optional int32 flagStyle = 11;</code>
   */
  int getFlagStyle();

  /**
   * <pre>
   *旗帜的图案模版ID
   * </pre>
   *
   * <code>optional int32 flagEffect = 12;</code>
   */
  boolean hasFlagEffect();
  /**
   * <pre>
   *旗帜的图案模版ID
   * </pre>
   *
   * <code>optional int32 flagEffect = 12;</code>
   */
  int getFlagEffect();
}
