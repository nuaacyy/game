// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * Protobuf type {@code client2server.RelicBus}
 */
public  final class RelicBus extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.RelicBus)
    RelicBusOrBuilder {
  // Use RelicBus.newBuilder() to construct.
  private RelicBus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RelicBus() {
    relicX_ = 0;
    relicY_ = 0;
    playerBuildLv_ = 0;
    startX_ = 0;
    startY_ = 0;
    goTime_ = 0;
    membereInfos_ = "";
    relicBusId_ = 0L;
    mainPlayerId_ = 0L;
    relicLv_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RelicBus(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 16: {
            bitField0_ |= 0x00000001;
            relicX_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000002;
            relicY_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000004;
            playerBuildLv_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000008;
            startX_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000010;
            startY_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000020;
            goTime_ = input.readInt32();
            break;
          }
          case 66: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000040;
            membereInfos_ = bs;
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            relicBusId_ = input.readInt64();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            mainPlayerId_ = input.readInt64();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            relicLv_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicBus_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_RelicBus_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.RelicBus.class, pb4client.RelicBus.Builder.class);
  }

  private int bitField0_;
  public static final int RELICX_FIELD_NUMBER = 2;
  private int relicX_;
  /**
   * <pre>
   * 前往的遗迹XY坐标
   * </pre>
   *
   * <code>required int32 relicX = 2;</code>
   */
  public boolean hasRelicX() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 前往的遗迹XY坐标
   * </pre>
   *
   * <code>required int32 relicX = 2;</code>
   */
  public int getRelicX() {
    return relicX_;
  }

  public static final int RELICY_FIELD_NUMBER = 3;
  private int relicY_;
  /**
   * <pre>
   * 前往的遗迹XY坐标
   * </pre>
   *
   * <code>required int32 relicY = 3;</code>
   */
  public boolean hasRelicY() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 前往的遗迹XY坐标
   * </pre>
   *
   * <code>required int32 relicY = 3;</code>
   */
  public int getRelicY() {
    return relicY_;
  }

  public static final int PLAYERBUILDLV_FIELD_NUMBER = 4;
  private int playerBuildLv_;
  /**
   * <pre>
   * 团长炼金者协会建筑等级
   * </pre>
   *
   * <code>required int32 playerBuildLv = 4;</code>
   */
  public boolean hasPlayerBuildLv() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 团长炼金者协会建筑等级
   * </pre>
   *
   * <code>required int32 playerBuildLv = 4;</code>
   */
  public int getPlayerBuildLv() {
    return playerBuildLv_;
  }

  public static final int STARTX_FIELD_NUMBER = 5;
  private int startX_;
  /**
   * <pre>
   * 团长集合的XY坐标
   * </pre>
   *
   * <code>required int32 startX = 5;</code>
   */
  public boolean hasStartX() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 团长集合的XY坐标
   * </pre>
   *
   * <code>required int32 startX = 5;</code>
   */
  public int getStartX() {
    return startX_;
  }

  public static final int STARTY_FIELD_NUMBER = 6;
  private int startY_;
  /**
   * <pre>
   * 团长集合的XY坐标
   * </pre>
   *
   * <code>required int32 startY = 6;</code>
   */
  public boolean hasStartY() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 团长集合的XY坐标
   * </pre>
   *
   * <code>required int32 startY = 6;</code>
   */
  public int getStartY() {
    return startY_;
  }

  public static final int GOTIME_FIELD_NUMBER = 7;
  private int goTime_;
  /**
   * <pre>
   * 开车时间
   * </pre>
   *
   * <code>required int32 goTime = 7;</code>
   */
  public boolean hasGoTime() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 开车时间
   * </pre>
   *
   * <code>required int32 goTime = 7;</code>
   */
  public int getGoTime() {
    return goTime_;
  }

  public static final int MEMBEREINFOS_FIELD_NUMBER = 8;
  private volatile java.lang.Object membereInfos_;
  /**
   * <pre>
   * 战斗成员信息
   * </pre>
   *
   * <code>required string membereInfos = 8;</code>
   */
  public boolean hasMembereInfos() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 战斗成员信息
   * </pre>
   *
   * <code>required string membereInfos = 8;</code>
   */
  public java.lang.String getMembereInfos() {
    java.lang.Object ref = membereInfos_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        membereInfos_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * 战斗成员信息
   * </pre>
   *
   * <code>required string membereInfos = 8;</code>
   */
  public com.google.protobuf.ByteString
      getMembereInfosBytes() {
    java.lang.Object ref = membereInfos_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      membereInfos_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RELICBUSID_FIELD_NUMBER = 9;
  private long relicBusId_;
  /**
   * <pre>
   * 本车的ID
   * </pre>
   *
   * <code>required int64 relicBusId = 9;</code>
   */
  public boolean hasRelicBusId() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 本车的ID
   * </pre>
   *
   * <code>required int64 relicBusId = 9;</code>
   */
  public long getRelicBusId() {
    return relicBusId_;
  }

  public static final int MAINPLAYERID_FIELD_NUMBER = 10;
  private long mainPlayerId_;
  /**
   * <pre>
   * 团长玩家ID
   * </pre>
   *
   * <code>required int64 mainPlayerId = 10;</code>
   */
  public boolean hasMainPlayerId() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 团长玩家ID
   * </pre>
   *
   * <code>required int64 mainPlayerId = 10;</code>
   */
  public long getMainPlayerId() {
    return mainPlayerId_;
  }

  public static final int RELICLV_FIELD_NUMBER = 11;
  private int relicLv_;
  /**
   * <pre>
   * 遗迹等级
   * </pre>
   *
   * <code>required int32 relicLv = 11;</code>
   */
  public boolean hasRelicLv() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * 遗迹等级
   * </pre>
   *
   * <code>required int32 relicLv = 11;</code>
   */
  public int getRelicLv() {
    return relicLv_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasRelicX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRelicY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasPlayerBuildLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasStartX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasStartY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasGoTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMembereInfos()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRelicBusId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasMainPlayerId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasRelicLv()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(2, relicX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(3, relicY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(4, playerBuildLv_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(5, startX_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(6, startY_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(7, goTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, membereInfos_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt64(9, relicBusId_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt64(10, mainPlayerId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(11, relicLv_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, relicX_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, relicY_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, playerBuildLv_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, startX_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, startY_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, goTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, membereInfos_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, relicBusId_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, mainPlayerId_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, relicLv_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.RelicBus)) {
      return super.equals(obj);
    }
    pb4client.RelicBus other = (pb4client.RelicBus) obj;

    boolean result = true;
    result = result && (hasRelicX() == other.hasRelicX());
    if (hasRelicX()) {
      result = result && (getRelicX()
          == other.getRelicX());
    }
    result = result && (hasRelicY() == other.hasRelicY());
    if (hasRelicY()) {
      result = result && (getRelicY()
          == other.getRelicY());
    }
    result = result && (hasPlayerBuildLv() == other.hasPlayerBuildLv());
    if (hasPlayerBuildLv()) {
      result = result && (getPlayerBuildLv()
          == other.getPlayerBuildLv());
    }
    result = result && (hasStartX() == other.hasStartX());
    if (hasStartX()) {
      result = result && (getStartX()
          == other.getStartX());
    }
    result = result && (hasStartY() == other.hasStartY());
    if (hasStartY()) {
      result = result && (getStartY()
          == other.getStartY());
    }
    result = result && (hasGoTime() == other.hasGoTime());
    if (hasGoTime()) {
      result = result && (getGoTime()
          == other.getGoTime());
    }
    result = result && (hasMembereInfos() == other.hasMembereInfos());
    if (hasMembereInfos()) {
      result = result && getMembereInfos()
          .equals(other.getMembereInfos());
    }
    result = result && (hasRelicBusId() == other.hasRelicBusId());
    if (hasRelicBusId()) {
      result = result && (getRelicBusId()
          == other.getRelicBusId());
    }
    result = result && (hasMainPlayerId() == other.hasMainPlayerId());
    if (hasMainPlayerId()) {
      result = result && (getMainPlayerId()
          == other.getMainPlayerId());
    }
    result = result && (hasRelicLv() == other.hasRelicLv());
    if (hasRelicLv()) {
      result = result && (getRelicLv()
          == other.getRelicLv());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRelicX()) {
      hash = (37 * hash) + RELICX_FIELD_NUMBER;
      hash = (53 * hash) + getRelicX();
    }
    if (hasRelicY()) {
      hash = (37 * hash) + RELICY_FIELD_NUMBER;
      hash = (53 * hash) + getRelicY();
    }
    if (hasPlayerBuildLv()) {
      hash = (37 * hash) + PLAYERBUILDLV_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerBuildLv();
    }
    if (hasStartX()) {
      hash = (37 * hash) + STARTX_FIELD_NUMBER;
      hash = (53 * hash) + getStartX();
    }
    if (hasStartY()) {
      hash = (37 * hash) + STARTY_FIELD_NUMBER;
      hash = (53 * hash) + getStartY();
    }
    if (hasGoTime()) {
      hash = (37 * hash) + GOTIME_FIELD_NUMBER;
      hash = (53 * hash) + getGoTime();
    }
    if (hasMembereInfos()) {
      hash = (37 * hash) + MEMBEREINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getMembereInfos().hashCode();
    }
    if (hasRelicBusId()) {
      hash = (37 * hash) + RELICBUSID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRelicBusId());
    }
    if (hasMainPlayerId()) {
      hash = (37 * hash) + MAINPLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMainPlayerId());
    }
    if (hasRelicLv()) {
      hash = (37 * hash) + RELICLV_FIELD_NUMBER;
      hash = (53 * hash) + getRelicLv();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.RelicBus parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicBus parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicBus parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicBus parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicBus parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.RelicBus parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.RelicBus parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicBus parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicBus parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.RelicBus parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.RelicBus parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.RelicBus parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.RelicBus prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code client2server.RelicBus}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.RelicBus)
      pb4client.RelicBusOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicBus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicBus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.RelicBus.class, pb4client.RelicBus.Builder.class);
    }

    // Construct using pb4client.RelicBus.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      relicX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      relicY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      playerBuildLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      startX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      startY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      goTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      membereInfos_ = "";
      bitField0_ = (bitField0_ & ~0x00000040);
      relicBusId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      mainPlayerId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      relicLv_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_RelicBus_descriptor;
    }

    public pb4client.RelicBus getDefaultInstanceForType() {
      return pb4client.RelicBus.getDefaultInstance();
    }

    public pb4client.RelicBus build() {
      pb4client.RelicBus result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.RelicBus buildPartial() {
      pb4client.RelicBus result = new pb4client.RelicBus(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.relicX_ = relicX_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.relicY_ = relicY_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.playerBuildLv_ = playerBuildLv_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.startX_ = startX_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.startY_ = startY_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.goTime_ = goTime_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.membereInfos_ = membereInfos_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.relicBusId_ = relicBusId_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.mainPlayerId_ = mainPlayerId_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.relicLv_ = relicLv_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.RelicBus) {
        return mergeFrom((pb4client.RelicBus)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.RelicBus other) {
      if (other == pb4client.RelicBus.getDefaultInstance()) return this;
      if (other.hasRelicX()) {
        setRelicX(other.getRelicX());
      }
      if (other.hasRelicY()) {
        setRelicY(other.getRelicY());
      }
      if (other.hasPlayerBuildLv()) {
        setPlayerBuildLv(other.getPlayerBuildLv());
      }
      if (other.hasStartX()) {
        setStartX(other.getStartX());
      }
      if (other.hasStartY()) {
        setStartY(other.getStartY());
      }
      if (other.hasGoTime()) {
        setGoTime(other.getGoTime());
      }
      if (other.hasMembereInfos()) {
        bitField0_ |= 0x00000040;
        membereInfos_ = other.membereInfos_;
        onChanged();
      }
      if (other.hasRelicBusId()) {
        setRelicBusId(other.getRelicBusId());
      }
      if (other.hasMainPlayerId()) {
        setMainPlayerId(other.getMainPlayerId());
      }
      if (other.hasRelicLv()) {
        setRelicLv(other.getRelicLv());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasRelicX()) {
        return false;
      }
      if (!hasRelicY()) {
        return false;
      }
      if (!hasPlayerBuildLv()) {
        return false;
      }
      if (!hasStartX()) {
        return false;
      }
      if (!hasStartY()) {
        return false;
      }
      if (!hasGoTime()) {
        return false;
      }
      if (!hasMembereInfos()) {
        return false;
      }
      if (!hasRelicBusId()) {
        return false;
      }
      if (!hasMainPlayerId()) {
        return false;
      }
      if (!hasRelicLv()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.RelicBus parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.RelicBus) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int relicX_ ;
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicX = 2;</code>
     */
    public boolean hasRelicX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicX = 2;</code>
     */
    public int getRelicX() {
      return relicX_;
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicX = 2;</code>
     */
    public Builder setRelicX(int value) {
      bitField0_ |= 0x00000001;
      relicX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicX = 2;</code>
     */
    public Builder clearRelicX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      relicX_ = 0;
      onChanged();
      return this;
    }

    private int relicY_ ;
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicY = 3;</code>
     */
    public boolean hasRelicY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicY = 3;</code>
     */
    public int getRelicY() {
      return relicY_;
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicY = 3;</code>
     */
    public Builder setRelicY(int value) {
      bitField0_ |= 0x00000002;
      relicY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 前往的遗迹XY坐标
     * </pre>
     *
     * <code>required int32 relicY = 3;</code>
     */
    public Builder clearRelicY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      relicY_ = 0;
      onChanged();
      return this;
    }

    private int playerBuildLv_ ;
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public boolean hasPlayerBuildLv() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public int getPlayerBuildLv() {
      return playerBuildLv_;
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public Builder setPlayerBuildLv(int value) {
      bitField0_ |= 0x00000004;
      playerBuildLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长炼金者协会建筑等级
     * </pre>
     *
     * <code>required int32 playerBuildLv = 4;</code>
     */
    public Builder clearPlayerBuildLv() {
      bitField0_ = (bitField0_ & ~0x00000004);
      playerBuildLv_ = 0;
      onChanged();
      return this;
    }

    private int startX_ ;
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startX = 5;</code>
     */
    public boolean hasStartX() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startX = 5;</code>
     */
    public int getStartX() {
      return startX_;
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startX = 5;</code>
     */
    public Builder setStartX(int value) {
      bitField0_ |= 0x00000008;
      startX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startX = 5;</code>
     */
    public Builder clearStartX() {
      bitField0_ = (bitField0_ & ~0x00000008);
      startX_ = 0;
      onChanged();
      return this;
    }

    private int startY_ ;
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startY = 6;</code>
     */
    public boolean hasStartY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startY = 6;</code>
     */
    public int getStartY() {
      return startY_;
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startY = 6;</code>
     */
    public Builder setStartY(int value) {
      bitField0_ |= 0x00000010;
      startY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长集合的XY坐标
     * </pre>
     *
     * <code>required int32 startY = 6;</code>
     */
    public Builder clearStartY() {
      bitField0_ = (bitField0_ & ~0x00000010);
      startY_ = 0;
      onChanged();
      return this;
    }

    private int goTime_ ;
    /**
     * <pre>
     * 开车时间
     * </pre>
     *
     * <code>required int32 goTime = 7;</code>
     */
    public boolean hasGoTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 开车时间
     * </pre>
     *
     * <code>required int32 goTime = 7;</code>
     */
    public int getGoTime() {
      return goTime_;
    }
    /**
     * <pre>
     * 开车时间
     * </pre>
     *
     * <code>required int32 goTime = 7;</code>
     */
    public Builder setGoTime(int value) {
      bitField0_ |= 0x00000020;
      goTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 开车时间
     * </pre>
     *
     * <code>required int32 goTime = 7;</code>
     */
    public Builder clearGoTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      goTime_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object membereInfos_ = "";
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public boolean hasMembereInfos() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public java.lang.String getMembereInfos() {
      java.lang.Object ref = membereInfos_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          membereInfos_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMembereInfosBytes() {
      java.lang.Object ref = membereInfos_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        membereInfos_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public Builder setMembereInfos(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      membereInfos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public Builder clearMembereInfos() {
      bitField0_ = (bitField0_ & ~0x00000040);
      membereInfos_ = getDefaultInstance().getMembereInfos();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗成员信息
     * </pre>
     *
     * <code>required string membereInfos = 8;</code>
     */
    public Builder setMembereInfosBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      membereInfos_ = value;
      onChanged();
      return this;
    }

    private long relicBusId_ ;
    /**
     * <pre>
     * 本车的ID
     * </pre>
     *
     * <code>required int64 relicBusId = 9;</code>
     */
    public boolean hasRelicBusId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 本车的ID
     * </pre>
     *
     * <code>required int64 relicBusId = 9;</code>
     */
    public long getRelicBusId() {
      return relicBusId_;
    }
    /**
     * <pre>
     * 本车的ID
     * </pre>
     *
     * <code>required int64 relicBusId = 9;</code>
     */
    public Builder setRelicBusId(long value) {
      bitField0_ |= 0x00000080;
      relicBusId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本车的ID
     * </pre>
     *
     * <code>required int64 relicBusId = 9;</code>
     */
    public Builder clearRelicBusId() {
      bitField0_ = (bitField0_ & ~0x00000080);
      relicBusId_ = 0L;
      onChanged();
      return this;
    }

    private long mainPlayerId_ ;
    /**
     * <pre>
     * 团长玩家ID
     * </pre>
     *
     * <code>required int64 mainPlayerId = 10;</code>
     */
    public boolean hasMainPlayerId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * 团长玩家ID
     * </pre>
     *
     * <code>required int64 mainPlayerId = 10;</code>
     */
    public long getMainPlayerId() {
      return mainPlayerId_;
    }
    /**
     * <pre>
     * 团长玩家ID
     * </pre>
     *
     * <code>required int64 mainPlayerId = 10;</code>
     */
    public Builder setMainPlayerId(long value) {
      bitField0_ |= 0x00000100;
      mainPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 团长玩家ID
     * </pre>
     *
     * <code>required int64 mainPlayerId = 10;</code>
     */
    public Builder clearMainPlayerId() {
      bitField0_ = (bitField0_ & ~0x00000100);
      mainPlayerId_ = 0L;
      onChanged();
      return this;
    }

    private int relicLv_ ;
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 11;</code>
     */
    public boolean hasRelicLv() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 11;</code>
     */
    public int getRelicLv() {
      return relicLv_;
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 11;</code>
     */
    public Builder setRelicLv(int value) {
      bitField0_ |= 0x00000200;
      relicLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 遗迹等级
     * </pre>
     *
     * <code>required int32 relicLv = 11;</code>
     */
    public Builder clearRelicLv() {
      bitField0_ = (bitField0_ & ~0x00000200);
      relicLv_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.RelicBus)
  }

  // @@protoc_insertion_point(class_scope:client2server.RelicBus)
  private static final pb4client.RelicBus DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.RelicBus();
  }

  public static pb4client.RelicBus getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RelicBus>
      PARSER = new com.google.protobuf.AbstractParser<RelicBus>() {
    public RelicBus parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelicBus(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RelicBus> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RelicBus> getParserForType() {
    return PARSER;
  }

  public pb4client.RelicBus getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

