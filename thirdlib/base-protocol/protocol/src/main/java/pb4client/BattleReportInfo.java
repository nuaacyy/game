// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2server.proto

package pb4client;

/**
 * <pre>
 * 战斗简报
 * </pre>
 *
 * Protobuf type {@code client2server.BattleReportInfo}
 */
public  final class BattleReportInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:client2server.BattleReportInfo)
    BattleReportInfoOrBuilder {
  // Use BattleReportInfo.newBuilder() to construct.
  private BattleReportInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BattleReportInfo() {
    id_ = 0L;
    readState_ = 0;
    reportType_ = 0;
    fightTime_ = 0;
    fightAddressX_ = 0;
    fightAddressY_ = 0;
    archived_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BattleReportInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            id_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            readState_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            reportType_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            fightTime_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            fightAddressX_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            fightAddressY_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000040;
            archived_ = input.readInt64();
            break;
          }
          case 74: {
            pb4client.PvpFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              subBuilder = pvpTroopsFightReport_.toBuilder();
            }
            pvpTroopsFightReport_ = input.readMessage(pb4client.PvpFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pvpTroopsFightReport_);
              pvpTroopsFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000080;
            break;
          }
          case 82: {
            pb4client.MassRuinsFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              subBuilder = massRuinsFightReport_.toBuilder();
            }
            massRuinsFightReport_ = input.readMessage(pb4client.MassRuinsFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(massRuinsFightReport_);
              massRuinsFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000100;
            break;
          }
          case 90: {
            pb4client.HunterFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              subBuilder = hunterFightReport_.toBuilder();
            }
            hunterFightReport_ = input.readMessage(pb4client.HunterFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hunterFightReport_);
              hunterFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 98: {
            pb4client.TransportReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              subBuilder = transportReport_.toBuilder();
            }
            transportReport_ = input.readMessage(pb4client.TransportReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(transportReport_);
              transportReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000400;
            break;
          }
          case 106: {
            pb4client.CollectReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              subBuilder = collectReport_.toBuilder();
            }
            collectReport_ = input.readMessage(pb4client.CollectReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(collectReport_);
              collectReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000800;
            break;
          }
          case 122: {
            pb4client.ScoutReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00001000) == 0x00001000)) {
              subBuilder = scoutReport_.toBuilder();
            }
            scoutReport_ = input.readMessage(pb4client.ScoutReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scoutReport_);
              scoutReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00001000;
            break;
          }
          case 130: {
            pb4client.BeScoutReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00002000) == 0x00002000)) {
              subBuilder = beScoutReport_.toBuilder();
            }
            beScoutReport_ = input.readMessage(pb4client.BeScoutReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(beScoutReport_);
              beScoutReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00002000;
            break;
          }
          case 138: {
            pb4client.HunterFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00004000) == 0x00004000)) {
              subBuilder = allianceHunterFightReport_.toBuilder();
            }
            allianceHunterFightReport_ = input.readMessage(pb4client.HunterFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(allianceHunterFightReport_);
              allianceHunterFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00004000;
            break;
          }
          case 146: {
            pb4client.HunterFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00008000) == 0x00008000)) {
              subBuilder = worldHunterFightReport_.toBuilder();
            }
            worldHunterFightReport_ = input.readMessage(pb4client.HunterFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(worldHunterFightReport_);
              worldHunterFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00008000;
            break;
          }
          case 154: {
            pb4client.StrongholdFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00010000) == 0x00010000)) {
              subBuilder = strongholdFightReport_.toBuilder();
            }
            strongholdFightReport_ = input.readMessage(pb4client.StrongholdFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(strongholdFightReport_);
              strongholdFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00010000;
            break;
          }
          case 162: {
            pb4client.StrongholdGiveTributeReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00020000) == 0x00020000)) {
              subBuilder = strongholdGiveTributeReport_.toBuilder();
            }
            strongholdGiveTributeReport_ = input.readMessage(pb4client.StrongholdGiveTributeReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(strongholdGiveTributeReport_);
              strongholdGiveTributeReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00020000;
            break;
          }
          case 170: {
            pb4client.HunterCallInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00040000) == 0x00040000)) {
              subBuilder = hunterCallInfo_.toBuilder();
            }
            hunterCallInfo_ = input.readMessage(pb4client.HunterCallInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hunterCallInfo_);
              hunterCallInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00040000;
            break;
          }
          case 178: {
            pb4client.JjcFightReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00080000) == 0x00080000)) {
              subBuilder = jjcFightReport_.toBuilder();
            }
            jjcFightReport_ = input.readMessage(pb4client.JjcFightReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(jjcFightReport_);
              jjcFightReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00080000;
            break;
          }
          case 186: {
            pb4client.StationDefReport.Builder subBuilder = null;
            if (((bitField0_ & 0x00100000) == 0x00100000)) {
              subBuilder = stationDefReport_.toBuilder();
            }
            stationDefReport_ = input.readMessage(pb4client.StationDefReport.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(stationDefReport_);
              stationDefReport_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00100000;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4client.War2GamePkt.internal_static_client2server_BattleReportInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4client.War2GamePkt.internal_static_client2server_BattleReportInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4client.BattleReportInfo.class, pb4client.BattleReportInfo.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   * 简单战报的ID
   * </pre>
   *
   * <code>required int64 id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 简单战报的ID
   * </pre>
   *
   * <code>required int64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int READSTATE_FIELD_NUMBER = 2;
  private int readState_;
  /**
   * <pre>
   * 阅读状态 0-未读 1-已读
   * </pre>
   *
   * <code>required int32 readState = 2;</code>
   */
  public boolean hasReadState() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 阅读状态 0-未读 1-已读
   * </pre>
   *
   * <code>required int32 readState = 2;</code>
   */
  public int getReadState() {
    return readState_;
  }

  public static final int REPORTTYPE_FIELD_NUMBER = 3;
  private int reportType_;
  /**
   * <pre>
   * 战报类型
   * </pre>
   *
   * <code>required int32 reportType = 3;</code>
   */
  public boolean hasReportType() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 战报类型
   * </pre>
   *
   * <code>required int32 reportType = 3;</code>
   */
  public int getReportType() {
    return reportType_;
  }

  public static final int FIGHTTIME_FIELD_NUMBER = 4;
  private int fightTime_;
  /**
   * <pre>
   * 战斗时间
   * </pre>
   *
   * <code>required int32 fightTime = 4;</code>
   */
  public boolean hasFightTime() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 战斗时间
   * </pre>
   *
   * <code>required int32 fightTime = 4;</code>
   */
  public int getFightTime() {
    return fightTime_;
  }

  public static final int FIGHTADDRESSX_FIELD_NUMBER = 5;
  private int fightAddressX_;
  /**
   * <pre>
   * 战斗地点X坐标
   * </pre>
   *
   * <code>required int32 fightAddressX = 5;</code>
   */
  public boolean hasFightAddressX() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 战斗地点X坐标
   * </pre>
   *
   * <code>required int32 fightAddressX = 5;</code>
   */
  public int getFightAddressX() {
    return fightAddressX_;
  }

  public static final int FIGHTADDRESSY_FIELD_NUMBER = 6;
  private int fightAddressY_;
  /**
   * <pre>
   * 战斗地点Y坐标
   * </pre>
   *
   * <code>required int32 fightAddressY = 6;</code>
   */
  public boolean hasFightAddressY() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 战斗地点Y坐标
   * </pre>
   *
   * <code>required int32 fightAddressY = 6;</code>
   */
  public int getFightAddressY() {
    return fightAddressY_;
  }

  public static final int ARCHIVED_FIELD_NUMBER = 8;
  private long archived_;
  /**
   * <pre>
   * 是否被收藏了。时间的秒数
   * </pre>
   *
   * <code>required int64 archived = 8;</code>
   */
  public boolean hasArchived() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 是否被收藏了。时间的秒数
   * </pre>
   *
   * <code>required int64 archived = 8;</code>
   */
  public long getArchived() {
    return archived_;
  }

  public static final int PVPTROOPSFIGHTREPORT_FIELD_NUMBER = 9;
  private pb4client.PvpFightReport pvpTroopsFightReport_;
  /**
   * <pre>
   * 玩家对玩家			reportType = 1
   * </pre>
   *
   * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
   */
  public boolean hasPvpTroopsFightReport() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 玩家对玩家			reportType = 1
   * </pre>
   *
   * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
   */
  public pb4client.PvpFightReport getPvpTroopsFightReport() {
    return pvpTroopsFightReport_ == null ? pb4client.PvpFightReport.getDefaultInstance() : pvpTroopsFightReport_;
  }
  /**
   * <pre>
   * 玩家对玩家			reportType = 1
   * </pre>
   *
   * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
   */
  public pb4client.PvpFightReportOrBuilder getPvpTroopsFightReportOrBuilder() {
    return pvpTroopsFightReport_ == null ? pb4client.PvpFightReport.getDefaultInstance() : pvpTroopsFightReport_;
  }

  public static final int MASSRUINSFIGHTREPORT_FIELD_NUMBER = 10;
  private pb4client.MassRuinsFightReport massRuinsFightReport_;
  /**
   * <pre>
   * 集结遗迹				reportType = 4
   * </pre>
   *
   * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
   */
  public boolean hasMassRuinsFightReport() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * 集结遗迹				reportType = 4
   * </pre>
   *
   * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
   */
  public pb4client.MassRuinsFightReport getMassRuinsFightReport() {
    return massRuinsFightReport_ == null ? pb4client.MassRuinsFightReport.getDefaultInstance() : massRuinsFightReport_;
  }
  /**
   * <pre>
   * 集结遗迹				reportType = 4
   * </pre>
   *
   * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
   */
  public pb4client.MassRuinsFightReportOrBuilder getMassRuinsFightReportOrBuilder() {
    return massRuinsFightReport_ == null ? pb4client.MassRuinsFightReport.getDefaultInstance() : massRuinsFightReport_;
  }

  public static final int HUNTERFIGHTREPORT_FIELD_NUMBER = 11;
  private pb4client.HunterFightReport hunterFightReport_;
  /**
   * <pre>
   * 魔物猎杀				reportType = 2
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
   */
  public boolean hasHunterFightReport() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * 魔物猎杀				reportType = 2
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
   */
  public pb4client.HunterFightReport getHunterFightReport() {
    return hunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : hunterFightReport_;
  }
  /**
   * <pre>
   * 魔物猎杀				reportType = 2
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
   */
  public pb4client.HunterFightReportOrBuilder getHunterFightReportOrBuilder() {
    return hunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : hunterFightReport_;
  }

  public static final int TRANSPORTREPORT_FIELD_NUMBER = 12;
  private pb4client.TransportReport transportReport_;
  /**
   * <pre>
   * 运输战报				reportType = 9
   * </pre>
   *
   * <code>optional .client2server.TransportReport transportReport = 12;</code>
   */
  public boolean hasTransportReport() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   * 运输战报				reportType = 9
   * </pre>
   *
   * <code>optional .client2server.TransportReport transportReport = 12;</code>
   */
  public pb4client.TransportReport getTransportReport() {
    return transportReport_ == null ? pb4client.TransportReport.getDefaultInstance() : transportReport_;
  }
  /**
   * <pre>
   * 运输战报				reportType = 9
   * </pre>
   *
   * <code>optional .client2server.TransportReport transportReport = 12;</code>
   */
  public pb4client.TransportReportOrBuilder getTransportReportOrBuilder() {
    return transportReport_ == null ? pb4client.TransportReport.getDefaultInstance() : transportReport_;
  }

  public static final int COLLECTREPORT_FIELD_NUMBER = 13;
  private pb4client.CollectReport collectReport_;
  /**
   * <pre>
   * 采集战报				reportType = 8
   * </pre>
   *
   * <code>optional .client2server.CollectReport collectReport = 13;</code>
   */
  public boolean hasCollectReport() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <pre>
   * 采集战报				reportType = 8
   * </pre>
   *
   * <code>optional .client2server.CollectReport collectReport = 13;</code>
   */
  public pb4client.CollectReport getCollectReport() {
    return collectReport_ == null ? pb4client.CollectReport.getDefaultInstance() : collectReport_;
  }
  /**
   * <pre>
   * 采集战报				reportType = 8
   * </pre>
   *
   * <code>optional .client2server.CollectReport collectReport = 13;</code>
   */
  public pb4client.CollectReportOrBuilder getCollectReportOrBuilder() {
    return collectReport_ == null ? pb4client.CollectReport.getDefaultInstance() : collectReport_;
  }

  public static final int SCOUTREPORT_FIELD_NUMBER = 15;
  private pb4client.ScoutReport scoutReport_;
  /**
   * <pre>
   * 侦察战报				reportType = 6
   * </pre>
   *
   * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
   */
  public boolean hasScoutReport() {
    return ((bitField0_ & 0x00001000) == 0x00001000);
  }
  /**
   * <pre>
   * 侦察战报				reportType = 6
   * </pre>
   *
   * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
   */
  public pb4client.ScoutReport getScoutReport() {
    return scoutReport_ == null ? pb4client.ScoutReport.getDefaultInstance() : scoutReport_;
  }
  /**
   * <pre>
   * 侦察战报				reportType = 6
   * </pre>
   *
   * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
   */
  public pb4client.ScoutReportOrBuilder getScoutReportOrBuilder() {
    return scoutReport_ == null ? pb4client.ScoutReport.getDefaultInstance() : scoutReport_;
  }

  public static final int BESCOUTREPORT_FIELD_NUMBER = 16;
  private pb4client.BeScoutReport beScoutReport_;
  /**
   * <pre>
   * 被侦查战报			reportType = 7
   * </pre>
   *
   * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
   */
  public boolean hasBeScoutReport() {
    return ((bitField0_ & 0x00002000) == 0x00002000);
  }
  /**
   * <pre>
   * 被侦查战报			reportType = 7
   * </pre>
   *
   * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
   */
  public pb4client.BeScoutReport getBeScoutReport() {
    return beScoutReport_ == null ? pb4client.BeScoutReport.getDefaultInstance() : beScoutReport_;
  }
  /**
   * <pre>
   * 被侦查战报			reportType = 7
   * </pre>
   *
   * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
   */
  public pb4client.BeScoutReportOrBuilder getBeScoutReportOrBuilder() {
    return beScoutReport_ == null ? pb4client.BeScoutReport.getDefaultInstance() : beScoutReport_;
  }

  public static final int ALLIANCEHUNTERFIGHTREPORT_FIELD_NUMBER = 17;
  private pb4client.HunterFightReport allianceHunterFightReport_;
  /**
   * <pre>
   * 联盟魔物猎杀			reportType = 10
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
   */
  public boolean hasAllianceHunterFightReport() {
    return ((bitField0_ & 0x00004000) == 0x00004000);
  }
  /**
   * <pre>
   * 联盟魔物猎杀			reportType = 10
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
   */
  public pb4client.HunterFightReport getAllianceHunterFightReport() {
    return allianceHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : allianceHunterFightReport_;
  }
  /**
   * <pre>
   * 联盟魔物猎杀			reportType = 10
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
   */
  public pb4client.HunterFightReportOrBuilder getAllianceHunterFightReportOrBuilder() {
    return allianceHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : allianceHunterFightReport_;
  }

  public static final int WORLDHUNTERFIGHTREPORT_FIELD_NUMBER = 18;
  private pb4client.HunterFightReport worldHunterFightReport_;
  /**
   * <pre>
   * 世界魔物猎杀			reportType = 11
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
   */
  public boolean hasWorldHunterFightReport() {
    return ((bitField0_ & 0x00008000) == 0x00008000);
  }
  /**
   * <pre>
   * 世界魔物猎杀			reportType = 11
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
   */
  public pb4client.HunterFightReport getWorldHunterFightReport() {
    return worldHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : worldHunterFightReport_;
  }
  /**
   * <pre>
   * 世界魔物猎杀			reportType = 11
   * </pre>
   *
   * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
   */
  public pb4client.HunterFightReportOrBuilder getWorldHunterFightReportOrBuilder() {
    return worldHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : worldHunterFightReport_;
  }

  public static final int STRONGHOLDFIGHTREPORT_FIELD_NUMBER = 19;
  private pb4client.StrongholdFightReport strongholdFightReport_;
  /**
   * <pre>
   * 攻打据点				reportType = 12
   * </pre>
   *
   * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
   */
  public boolean hasStrongholdFightReport() {
    return ((bitField0_ & 0x00010000) == 0x00010000);
  }
  /**
   * <pre>
   * 攻打据点				reportType = 12
   * </pre>
   *
   * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
   */
  public pb4client.StrongholdFightReport getStrongholdFightReport() {
    return strongholdFightReport_ == null ? pb4client.StrongholdFightReport.getDefaultInstance() : strongholdFightReport_;
  }
  /**
   * <pre>
   * 攻打据点				reportType = 12
   * </pre>
   *
   * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
   */
  public pb4client.StrongholdFightReportOrBuilder getStrongholdFightReportOrBuilder() {
    return strongholdFightReport_ == null ? pb4client.StrongholdFightReport.getDefaultInstance() : strongholdFightReport_;
  }

  public static final int STRONGHOLDGIVETRIBUTEREPORT_FIELD_NUMBER = 20;
  private pb4client.StrongholdGiveTributeReport strongholdGiveTributeReport_;
  /**
   * <pre>
   * 据点进贡				reportType = 13
   * </pre>
   *
   * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
   */
  public boolean hasStrongholdGiveTributeReport() {
    return ((bitField0_ & 0x00020000) == 0x00020000);
  }
  /**
   * <pre>
   * 据点进贡				reportType = 13
   * </pre>
   *
   * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
   */
  public pb4client.StrongholdGiveTributeReport getStrongholdGiveTributeReport() {
    return strongholdGiveTributeReport_ == null ? pb4client.StrongholdGiveTributeReport.getDefaultInstance() : strongholdGiveTributeReport_;
  }
  /**
   * <pre>
   * 据点进贡				reportType = 13
   * </pre>
   *
   * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
   */
  public pb4client.StrongholdGiveTributeReportOrBuilder getStrongholdGiveTributeReportOrBuilder() {
    return strongholdGiveTributeReport_ == null ? pb4client.StrongholdGiveTributeReport.getDefaultInstance() : strongholdGiveTributeReport_;
  }

  public static final int HUNTERCALLINFO_FIELD_NUMBER = 21;
  private pb4client.HunterCallInfo hunterCallInfo_;
  /**
   * <pre>
   *召唤礼信息  reportType = 15
   * </pre>
   *
   * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
   */
  public boolean hasHunterCallInfo() {
    return ((bitField0_ & 0x00040000) == 0x00040000);
  }
  /**
   * <pre>
   *召唤礼信息  reportType = 15
   * </pre>
   *
   * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
   */
  public pb4client.HunterCallInfo getHunterCallInfo() {
    return hunterCallInfo_ == null ? pb4client.HunterCallInfo.getDefaultInstance() : hunterCallInfo_;
  }
  /**
   * <pre>
   *召唤礼信息  reportType = 15
   * </pre>
   *
   * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
   */
  public pb4client.HunterCallInfoOrBuilder getHunterCallInfoOrBuilder() {
    return hunterCallInfo_ == null ? pb4client.HunterCallInfo.getDefaultInstance() : hunterCallInfo_;
  }

  public static final int JJCFIGHTREPORT_FIELD_NUMBER = 22;
  private pb4client.JjcFightReport jjcFightReport_;
  /**
   * <pre>
   *竞技场战报 reportType = 16
   * </pre>
   *
   * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
   */
  public boolean hasJjcFightReport() {
    return ((bitField0_ & 0x00080000) == 0x00080000);
  }
  /**
   * <pre>
   *竞技场战报 reportType = 16
   * </pre>
   *
   * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
   */
  public pb4client.JjcFightReport getJjcFightReport() {
    return jjcFightReport_ == null ? pb4client.JjcFightReport.getDefaultInstance() : jjcFightReport_;
  }
  /**
   * <pre>
   *竞技场战报 reportType = 16
   * </pre>
   *
   * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
   */
  public pb4client.JjcFightReportOrBuilder getJjcFightReportOrBuilder() {
    return jjcFightReport_ == null ? pb4client.JjcFightReport.getDefaultInstance() : jjcFightReport_;
  }

  public static final int STATIONDEFREPORT_FIELD_NUMBER = 23;
  private pb4client.StationDefReport stationDefReport_;
  /**
   * <pre>
   *驻扎部队防守战报 reportType = 17
   * </pre>
   *
   * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
   */
  public boolean hasStationDefReport() {
    return ((bitField0_ & 0x00100000) == 0x00100000);
  }
  /**
   * <pre>
   *驻扎部队防守战报 reportType = 17
   * </pre>
   *
   * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
   */
  public pb4client.StationDefReport getStationDefReport() {
    return stationDefReport_ == null ? pb4client.StationDefReport.getDefaultInstance() : stationDefReport_;
  }
  /**
   * <pre>
   *驻扎部队防守战报 reportType = 17
   * </pre>
   *
   * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
   */
  public pb4client.StationDefReportOrBuilder getStationDefReportOrBuilder() {
    return stationDefReport_ == null ? pb4client.StationDefReport.getDefaultInstance() : stationDefReport_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasReadState()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasReportType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightAddressX()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasFightAddressY()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasArchived()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasPvpTroopsFightReport()) {
      if (!getPvpTroopsFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasMassRuinsFightReport()) {
      if (!getMassRuinsFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasHunterFightReport()) {
      if (!getHunterFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasTransportReport()) {
      if (!getTransportReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasCollectReport()) {
      if (!getCollectReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasScoutReport()) {
      if (!getScoutReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasBeScoutReport()) {
      if (!getBeScoutReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasAllianceHunterFightReport()) {
      if (!getAllianceHunterFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasWorldHunterFightReport()) {
      if (!getWorldHunterFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasStrongholdFightReport()) {
      if (!getStrongholdFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasStrongholdGiveTributeReport()) {
      if (!getStrongholdGiveTributeReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasHunterCallInfo()) {
      if (!getHunterCallInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasJjcFightReport()) {
      if (!getJjcFightReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasStationDefReport()) {
      if (!getStationDefReport().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, readState_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, reportType_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, fightTime_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, fightAddressX_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, fightAddressY_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt64(8, archived_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeMessage(9, getPvpTroopsFightReport());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(10, getMassRuinsFightReport());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(11, getHunterFightReport());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeMessage(12, getTransportReport());
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeMessage(13, getCollectReport());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      output.writeMessage(15, getScoutReport());
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      output.writeMessage(16, getBeScoutReport());
    }
    if (((bitField0_ & 0x00004000) == 0x00004000)) {
      output.writeMessage(17, getAllianceHunterFightReport());
    }
    if (((bitField0_ & 0x00008000) == 0x00008000)) {
      output.writeMessage(18, getWorldHunterFightReport());
    }
    if (((bitField0_ & 0x00010000) == 0x00010000)) {
      output.writeMessage(19, getStrongholdFightReport());
    }
    if (((bitField0_ & 0x00020000) == 0x00020000)) {
      output.writeMessage(20, getStrongholdGiveTributeReport());
    }
    if (((bitField0_ & 0x00040000) == 0x00040000)) {
      output.writeMessage(21, getHunterCallInfo());
    }
    if (((bitField0_ & 0x00080000) == 0x00080000)) {
      output.writeMessage(22, getJjcFightReport());
    }
    if (((bitField0_ & 0x00100000) == 0x00100000)) {
      output.writeMessage(23, getStationDefReport());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, readState_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, reportType_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, fightTime_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, fightAddressX_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, fightAddressY_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, archived_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getPvpTroopsFightReport());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getMassRuinsFightReport());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getHunterFightReport());
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getTransportReport());
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getCollectReport());
    }
    if (((bitField0_ & 0x00001000) == 0x00001000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getScoutReport());
    }
    if (((bitField0_ & 0x00002000) == 0x00002000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getBeScoutReport());
    }
    if (((bitField0_ & 0x00004000) == 0x00004000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getAllianceHunterFightReport());
    }
    if (((bitField0_ & 0x00008000) == 0x00008000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getWorldHunterFightReport());
    }
    if (((bitField0_ & 0x00010000) == 0x00010000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getStrongholdFightReport());
    }
    if (((bitField0_ & 0x00020000) == 0x00020000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getStrongholdGiveTributeReport());
    }
    if (((bitField0_ & 0x00040000) == 0x00040000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getHunterCallInfo());
    }
    if (((bitField0_ & 0x00080000) == 0x00080000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, getJjcFightReport());
    }
    if (((bitField0_ & 0x00100000) == 0x00100000)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getStationDefReport());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4client.BattleReportInfo)) {
      return super.equals(obj);
    }
    pb4client.BattleReportInfo other = (pb4client.BattleReportInfo) obj;

    boolean result = true;
    result = result && (hasId() == other.hasId());
    if (hasId()) {
      result = result && (getId()
          == other.getId());
    }
    result = result && (hasReadState() == other.hasReadState());
    if (hasReadState()) {
      result = result && (getReadState()
          == other.getReadState());
    }
    result = result && (hasReportType() == other.hasReportType());
    if (hasReportType()) {
      result = result && (getReportType()
          == other.getReportType());
    }
    result = result && (hasFightTime() == other.hasFightTime());
    if (hasFightTime()) {
      result = result && (getFightTime()
          == other.getFightTime());
    }
    result = result && (hasFightAddressX() == other.hasFightAddressX());
    if (hasFightAddressX()) {
      result = result && (getFightAddressX()
          == other.getFightAddressX());
    }
    result = result && (hasFightAddressY() == other.hasFightAddressY());
    if (hasFightAddressY()) {
      result = result && (getFightAddressY()
          == other.getFightAddressY());
    }
    result = result && (hasArchived() == other.hasArchived());
    if (hasArchived()) {
      result = result && (getArchived()
          == other.getArchived());
    }
    result = result && (hasPvpTroopsFightReport() == other.hasPvpTroopsFightReport());
    if (hasPvpTroopsFightReport()) {
      result = result && getPvpTroopsFightReport()
          .equals(other.getPvpTroopsFightReport());
    }
    result = result && (hasMassRuinsFightReport() == other.hasMassRuinsFightReport());
    if (hasMassRuinsFightReport()) {
      result = result && getMassRuinsFightReport()
          .equals(other.getMassRuinsFightReport());
    }
    result = result && (hasHunterFightReport() == other.hasHunterFightReport());
    if (hasHunterFightReport()) {
      result = result && getHunterFightReport()
          .equals(other.getHunterFightReport());
    }
    result = result && (hasTransportReport() == other.hasTransportReport());
    if (hasTransportReport()) {
      result = result && getTransportReport()
          .equals(other.getTransportReport());
    }
    result = result && (hasCollectReport() == other.hasCollectReport());
    if (hasCollectReport()) {
      result = result && getCollectReport()
          .equals(other.getCollectReport());
    }
    result = result && (hasScoutReport() == other.hasScoutReport());
    if (hasScoutReport()) {
      result = result && getScoutReport()
          .equals(other.getScoutReport());
    }
    result = result && (hasBeScoutReport() == other.hasBeScoutReport());
    if (hasBeScoutReport()) {
      result = result && getBeScoutReport()
          .equals(other.getBeScoutReport());
    }
    result = result && (hasAllianceHunterFightReport() == other.hasAllianceHunterFightReport());
    if (hasAllianceHunterFightReport()) {
      result = result && getAllianceHunterFightReport()
          .equals(other.getAllianceHunterFightReport());
    }
    result = result && (hasWorldHunterFightReport() == other.hasWorldHunterFightReport());
    if (hasWorldHunterFightReport()) {
      result = result && getWorldHunterFightReport()
          .equals(other.getWorldHunterFightReport());
    }
    result = result && (hasStrongholdFightReport() == other.hasStrongholdFightReport());
    if (hasStrongholdFightReport()) {
      result = result && getStrongholdFightReport()
          .equals(other.getStrongholdFightReport());
    }
    result = result && (hasStrongholdGiveTributeReport() == other.hasStrongholdGiveTributeReport());
    if (hasStrongholdGiveTributeReport()) {
      result = result && getStrongholdGiveTributeReport()
          .equals(other.getStrongholdGiveTributeReport());
    }
    result = result && (hasHunterCallInfo() == other.hasHunterCallInfo());
    if (hasHunterCallInfo()) {
      result = result && getHunterCallInfo()
          .equals(other.getHunterCallInfo());
    }
    result = result && (hasJjcFightReport() == other.hasJjcFightReport());
    if (hasJjcFightReport()) {
      result = result && getJjcFightReport()
          .equals(other.getJjcFightReport());
    }
    result = result && (hasStationDefReport() == other.hasStationDefReport());
    if (hasStationDefReport()) {
      result = result && getStationDefReport()
          .equals(other.getStationDefReport());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
    }
    if (hasReadState()) {
      hash = (37 * hash) + READSTATE_FIELD_NUMBER;
      hash = (53 * hash) + getReadState();
    }
    if (hasReportType()) {
      hash = (37 * hash) + REPORTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getReportType();
    }
    if (hasFightTime()) {
      hash = (37 * hash) + FIGHTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getFightTime();
    }
    if (hasFightAddressX()) {
      hash = (37 * hash) + FIGHTADDRESSX_FIELD_NUMBER;
      hash = (53 * hash) + getFightAddressX();
    }
    if (hasFightAddressY()) {
      hash = (37 * hash) + FIGHTADDRESSY_FIELD_NUMBER;
      hash = (53 * hash) + getFightAddressY();
    }
    if (hasArchived()) {
      hash = (37 * hash) + ARCHIVED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getArchived());
    }
    if (hasPvpTroopsFightReport()) {
      hash = (37 * hash) + PVPTROOPSFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getPvpTroopsFightReport().hashCode();
    }
    if (hasMassRuinsFightReport()) {
      hash = (37 * hash) + MASSRUINSFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getMassRuinsFightReport().hashCode();
    }
    if (hasHunterFightReport()) {
      hash = (37 * hash) + HUNTERFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getHunterFightReport().hashCode();
    }
    if (hasTransportReport()) {
      hash = (37 * hash) + TRANSPORTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getTransportReport().hashCode();
    }
    if (hasCollectReport()) {
      hash = (37 * hash) + COLLECTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getCollectReport().hashCode();
    }
    if (hasScoutReport()) {
      hash = (37 * hash) + SCOUTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getScoutReport().hashCode();
    }
    if (hasBeScoutReport()) {
      hash = (37 * hash) + BESCOUTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getBeScoutReport().hashCode();
    }
    if (hasAllianceHunterFightReport()) {
      hash = (37 * hash) + ALLIANCEHUNTERFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceHunterFightReport().hashCode();
    }
    if (hasWorldHunterFightReport()) {
      hash = (37 * hash) + WORLDHUNTERFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getWorldHunterFightReport().hashCode();
    }
    if (hasStrongholdFightReport()) {
      hash = (37 * hash) + STRONGHOLDFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getStrongholdFightReport().hashCode();
    }
    if (hasStrongholdGiveTributeReport()) {
      hash = (37 * hash) + STRONGHOLDGIVETRIBUTEREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getStrongholdGiveTributeReport().hashCode();
    }
    if (hasHunterCallInfo()) {
      hash = (37 * hash) + HUNTERCALLINFO_FIELD_NUMBER;
      hash = (53 * hash) + getHunterCallInfo().hashCode();
    }
    if (hasJjcFightReport()) {
      hash = (37 * hash) + JJCFIGHTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getJjcFightReport().hashCode();
    }
    if (hasStationDefReport()) {
      hash = (37 * hash) + STATIONDEFREPORT_FIELD_NUMBER;
      hash = (53 * hash) + getStationDefReport().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4client.BattleReportInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BattleReportInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BattleReportInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BattleReportInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BattleReportInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4client.BattleReportInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4client.BattleReportInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BattleReportInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BattleReportInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4client.BattleReportInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4client.BattleReportInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4client.BattleReportInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4client.BattleReportInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 战斗简报
   * </pre>
   *
   * Protobuf type {@code client2server.BattleReportInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:client2server.BattleReportInfo)
      pb4client.BattleReportInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4client.War2GamePkt.internal_static_client2server_BattleReportInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4client.War2GamePkt.internal_static_client2server_BattleReportInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4client.BattleReportInfo.class, pb4client.BattleReportInfo.Builder.class);
    }

    // Construct using pb4client.BattleReportInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPvpTroopsFightReportFieldBuilder();
        getMassRuinsFightReportFieldBuilder();
        getHunterFightReportFieldBuilder();
        getTransportReportFieldBuilder();
        getCollectReportFieldBuilder();
        getScoutReportFieldBuilder();
        getBeScoutReportFieldBuilder();
        getAllianceHunterFightReportFieldBuilder();
        getWorldHunterFightReportFieldBuilder();
        getStrongholdFightReportFieldBuilder();
        getStrongholdGiveTributeReportFieldBuilder();
        getHunterCallInfoFieldBuilder();
        getJjcFightReportFieldBuilder();
        getStationDefReportFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      readState_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      reportType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      fightTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      fightAddressX_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      fightAddressY_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      archived_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000040);
      if (pvpTroopsFightReportBuilder_ == null) {
        pvpTroopsFightReport_ = null;
      } else {
        pvpTroopsFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (massRuinsFightReportBuilder_ == null) {
        massRuinsFightReport_ = null;
      } else {
        massRuinsFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (hunterFightReportBuilder_ == null) {
        hunterFightReport_ = null;
      } else {
        hunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (transportReportBuilder_ == null) {
        transportReport_ = null;
      } else {
        transportReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (collectReportBuilder_ == null) {
        collectReport_ = null;
      } else {
        collectReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      if (scoutReportBuilder_ == null) {
        scoutReport_ = null;
      } else {
        scoutReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      if (beScoutReportBuilder_ == null) {
        beScoutReport_ = null;
      } else {
        beScoutReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      if (allianceHunterFightReportBuilder_ == null) {
        allianceHunterFightReport_ = null;
      } else {
        allianceHunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      if (worldHunterFightReportBuilder_ == null) {
        worldHunterFightReport_ = null;
      } else {
        worldHunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      if (strongholdFightReportBuilder_ == null) {
        strongholdFightReport_ = null;
      } else {
        strongholdFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      if (strongholdGiveTributeReportBuilder_ == null) {
        strongholdGiveTributeReport_ = null;
      } else {
        strongholdGiveTributeReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      if (hunterCallInfoBuilder_ == null) {
        hunterCallInfo_ = null;
      } else {
        hunterCallInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00040000);
      if (jjcFightReportBuilder_ == null) {
        jjcFightReport_ = null;
      } else {
        jjcFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00080000);
      if (stationDefReportBuilder_ == null) {
        stationDefReport_ = null;
      } else {
        stationDefReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4client.War2GamePkt.internal_static_client2server_BattleReportInfo_descriptor;
    }

    public pb4client.BattleReportInfo getDefaultInstanceForType() {
      return pb4client.BattleReportInfo.getDefaultInstance();
    }

    public pb4client.BattleReportInfo build() {
      pb4client.BattleReportInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4client.BattleReportInfo buildPartial() {
      pb4client.BattleReportInfo result = new pb4client.BattleReportInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.id_ = id_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.readState_ = readState_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.reportType_ = reportType_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.fightTime_ = fightTime_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.fightAddressX_ = fightAddressX_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.fightAddressY_ = fightAddressY_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.archived_ = archived_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      if (pvpTroopsFightReportBuilder_ == null) {
        result.pvpTroopsFightReport_ = pvpTroopsFightReport_;
      } else {
        result.pvpTroopsFightReport_ = pvpTroopsFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      if (massRuinsFightReportBuilder_ == null) {
        result.massRuinsFightReport_ = massRuinsFightReport_;
      } else {
        result.massRuinsFightReport_ = massRuinsFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      if (hunterFightReportBuilder_ == null) {
        result.hunterFightReport_ = hunterFightReport_;
      } else {
        result.hunterFightReport_ = hunterFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      if (transportReportBuilder_ == null) {
        result.transportReport_ = transportReport_;
      } else {
        result.transportReport_ = transportReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000800;
      }
      if (collectReportBuilder_ == null) {
        result.collectReport_ = collectReport_;
      } else {
        result.collectReport_ = collectReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
        to_bitField0_ |= 0x00001000;
      }
      if (scoutReportBuilder_ == null) {
        result.scoutReport_ = scoutReport_;
      } else {
        result.scoutReport_ = scoutReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
        to_bitField0_ |= 0x00002000;
      }
      if (beScoutReportBuilder_ == null) {
        result.beScoutReport_ = beScoutReport_;
      } else {
        result.beScoutReport_ = beScoutReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
        to_bitField0_ |= 0x00004000;
      }
      if (allianceHunterFightReportBuilder_ == null) {
        result.allianceHunterFightReport_ = allianceHunterFightReport_;
      } else {
        result.allianceHunterFightReport_ = allianceHunterFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
        to_bitField0_ |= 0x00008000;
      }
      if (worldHunterFightReportBuilder_ == null) {
        result.worldHunterFightReport_ = worldHunterFightReport_;
      } else {
        result.worldHunterFightReport_ = worldHunterFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
        to_bitField0_ |= 0x00010000;
      }
      if (strongholdFightReportBuilder_ == null) {
        result.strongholdFightReport_ = strongholdFightReport_;
      } else {
        result.strongholdFightReport_ = strongholdFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
        to_bitField0_ |= 0x00020000;
      }
      if (strongholdGiveTributeReportBuilder_ == null) {
        result.strongholdGiveTributeReport_ = strongholdGiveTributeReport_;
      } else {
        result.strongholdGiveTributeReport_ = strongholdGiveTributeReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
        to_bitField0_ |= 0x00040000;
      }
      if (hunterCallInfoBuilder_ == null) {
        result.hunterCallInfo_ = hunterCallInfo_;
      } else {
        result.hunterCallInfo_ = hunterCallInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
        to_bitField0_ |= 0x00080000;
      }
      if (jjcFightReportBuilder_ == null) {
        result.jjcFightReport_ = jjcFightReport_;
      } else {
        result.jjcFightReport_ = jjcFightReportBuilder_.build();
      }
      if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
        to_bitField0_ |= 0x00100000;
      }
      if (stationDefReportBuilder_ == null) {
        result.stationDefReport_ = stationDefReport_;
      } else {
        result.stationDefReport_ = stationDefReportBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4client.BattleReportInfo) {
        return mergeFrom((pb4client.BattleReportInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4client.BattleReportInfo other) {
      if (other == pb4client.BattleReportInfo.getDefaultInstance()) return this;
      if (other.hasId()) {
        setId(other.getId());
      }
      if (other.hasReadState()) {
        setReadState(other.getReadState());
      }
      if (other.hasReportType()) {
        setReportType(other.getReportType());
      }
      if (other.hasFightTime()) {
        setFightTime(other.getFightTime());
      }
      if (other.hasFightAddressX()) {
        setFightAddressX(other.getFightAddressX());
      }
      if (other.hasFightAddressY()) {
        setFightAddressY(other.getFightAddressY());
      }
      if (other.hasArchived()) {
        setArchived(other.getArchived());
      }
      if (other.hasPvpTroopsFightReport()) {
        mergePvpTroopsFightReport(other.getPvpTroopsFightReport());
      }
      if (other.hasMassRuinsFightReport()) {
        mergeMassRuinsFightReport(other.getMassRuinsFightReport());
      }
      if (other.hasHunterFightReport()) {
        mergeHunterFightReport(other.getHunterFightReport());
      }
      if (other.hasTransportReport()) {
        mergeTransportReport(other.getTransportReport());
      }
      if (other.hasCollectReport()) {
        mergeCollectReport(other.getCollectReport());
      }
      if (other.hasScoutReport()) {
        mergeScoutReport(other.getScoutReport());
      }
      if (other.hasBeScoutReport()) {
        mergeBeScoutReport(other.getBeScoutReport());
      }
      if (other.hasAllianceHunterFightReport()) {
        mergeAllianceHunterFightReport(other.getAllianceHunterFightReport());
      }
      if (other.hasWorldHunterFightReport()) {
        mergeWorldHunterFightReport(other.getWorldHunterFightReport());
      }
      if (other.hasStrongholdFightReport()) {
        mergeStrongholdFightReport(other.getStrongholdFightReport());
      }
      if (other.hasStrongholdGiveTributeReport()) {
        mergeStrongholdGiveTributeReport(other.getStrongholdGiveTributeReport());
      }
      if (other.hasHunterCallInfo()) {
        mergeHunterCallInfo(other.getHunterCallInfo());
      }
      if (other.hasJjcFightReport()) {
        mergeJjcFightReport(other.getJjcFightReport());
      }
      if (other.hasStationDefReport()) {
        mergeStationDefReport(other.getStationDefReport());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasId()) {
        return false;
      }
      if (!hasReadState()) {
        return false;
      }
      if (!hasReportType()) {
        return false;
      }
      if (!hasFightTime()) {
        return false;
      }
      if (!hasFightAddressX()) {
        return false;
      }
      if (!hasFightAddressY()) {
        return false;
      }
      if (!hasArchived()) {
        return false;
      }
      if (hasPvpTroopsFightReport()) {
        if (!getPvpTroopsFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasMassRuinsFightReport()) {
        if (!getMassRuinsFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasHunterFightReport()) {
        if (!getHunterFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasTransportReport()) {
        if (!getTransportReport().isInitialized()) {
          return false;
        }
      }
      if (hasCollectReport()) {
        if (!getCollectReport().isInitialized()) {
          return false;
        }
      }
      if (hasScoutReport()) {
        if (!getScoutReport().isInitialized()) {
          return false;
        }
      }
      if (hasBeScoutReport()) {
        if (!getBeScoutReport().isInitialized()) {
          return false;
        }
      }
      if (hasAllianceHunterFightReport()) {
        if (!getAllianceHunterFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasWorldHunterFightReport()) {
        if (!getWorldHunterFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasStrongholdFightReport()) {
        if (!getStrongholdFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasStrongholdGiveTributeReport()) {
        if (!getStrongholdGiveTributeReport().isInitialized()) {
          return false;
        }
      }
      if (hasHunterCallInfo()) {
        if (!getHunterCallInfo().isInitialized()) {
          return false;
        }
      }
      if (hasJjcFightReport()) {
        if (!getJjcFightReport().isInitialized()) {
          return false;
        }
      }
      if (hasStationDefReport()) {
        if (!getStationDefReport().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4client.BattleReportInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4client.BattleReportInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     * 简单战报的ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 简单战报的ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * 简单战报的ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public Builder setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 简单战报的ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public Builder clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
      onChanged();
      return this;
    }

    private int readState_ ;
    /**
     * <pre>
     * 阅读状态 0-未读 1-已读
     * </pre>
     *
     * <code>required int32 readState = 2;</code>
     */
    public boolean hasReadState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 阅读状态 0-未读 1-已读
     * </pre>
     *
     * <code>required int32 readState = 2;</code>
     */
    public int getReadState() {
      return readState_;
    }
    /**
     * <pre>
     * 阅读状态 0-未读 1-已读
     * </pre>
     *
     * <code>required int32 readState = 2;</code>
     */
    public Builder setReadState(int value) {
      bitField0_ |= 0x00000002;
      readState_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 阅读状态 0-未读 1-已读
     * </pre>
     *
     * <code>required int32 readState = 2;</code>
     */
    public Builder clearReadState() {
      bitField0_ = (bitField0_ & ~0x00000002);
      readState_ = 0;
      onChanged();
      return this;
    }

    private int reportType_ ;
    /**
     * <pre>
     * 战报类型
     * </pre>
     *
     * <code>required int32 reportType = 3;</code>
     */
    public boolean hasReportType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 战报类型
     * </pre>
     *
     * <code>required int32 reportType = 3;</code>
     */
    public int getReportType() {
      return reportType_;
    }
    /**
     * <pre>
     * 战报类型
     * </pre>
     *
     * <code>required int32 reportType = 3;</code>
     */
    public Builder setReportType(int value) {
      bitField0_ |= 0x00000004;
      reportType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战报类型
     * </pre>
     *
     * <code>required int32 reportType = 3;</code>
     */
    public Builder clearReportType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      reportType_ = 0;
      onChanged();
      return this;
    }

    private int fightTime_ ;
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 4;</code>
     */
    public boolean hasFightTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 4;</code>
     */
    public int getFightTime() {
      return fightTime_;
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 4;</code>
     */
    public Builder setFightTime(int value) {
      bitField0_ |= 0x00000008;
      fightTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗时间
     * </pre>
     *
     * <code>required int32 fightTime = 4;</code>
     */
    public Builder clearFightTime() {
      bitField0_ = (bitField0_ & ~0x00000008);
      fightTime_ = 0;
      onChanged();
      return this;
    }

    private int fightAddressX_ ;
    /**
     * <pre>
     * 战斗地点X坐标
     * </pre>
     *
     * <code>required int32 fightAddressX = 5;</code>
     */
    public boolean hasFightAddressX() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 战斗地点X坐标
     * </pre>
     *
     * <code>required int32 fightAddressX = 5;</code>
     */
    public int getFightAddressX() {
      return fightAddressX_;
    }
    /**
     * <pre>
     * 战斗地点X坐标
     * </pre>
     *
     * <code>required int32 fightAddressX = 5;</code>
     */
    public Builder setFightAddressX(int value) {
      bitField0_ |= 0x00000010;
      fightAddressX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗地点X坐标
     * </pre>
     *
     * <code>required int32 fightAddressX = 5;</code>
     */
    public Builder clearFightAddressX() {
      bitField0_ = (bitField0_ & ~0x00000010);
      fightAddressX_ = 0;
      onChanged();
      return this;
    }

    private int fightAddressY_ ;
    /**
     * <pre>
     * 战斗地点Y坐标
     * </pre>
     *
     * <code>required int32 fightAddressY = 6;</code>
     */
    public boolean hasFightAddressY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 战斗地点Y坐标
     * </pre>
     *
     * <code>required int32 fightAddressY = 6;</code>
     */
    public int getFightAddressY() {
      return fightAddressY_;
    }
    /**
     * <pre>
     * 战斗地点Y坐标
     * </pre>
     *
     * <code>required int32 fightAddressY = 6;</code>
     */
    public Builder setFightAddressY(int value) {
      bitField0_ |= 0x00000020;
      fightAddressY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 战斗地点Y坐标
     * </pre>
     *
     * <code>required int32 fightAddressY = 6;</code>
     */
    public Builder clearFightAddressY() {
      bitField0_ = (bitField0_ & ~0x00000020);
      fightAddressY_ = 0;
      onChanged();
      return this;
    }

    private long archived_ ;
    /**
     * <pre>
     * 是否被收藏了。时间的秒数
     * </pre>
     *
     * <code>required int64 archived = 8;</code>
     */
    public boolean hasArchived() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 是否被收藏了。时间的秒数
     * </pre>
     *
     * <code>required int64 archived = 8;</code>
     */
    public long getArchived() {
      return archived_;
    }
    /**
     * <pre>
     * 是否被收藏了。时间的秒数
     * </pre>
     *
     * <code>required int64 archived = 8;</code>
     */
    public Builder setArchived(long value) {
      bitField0_ |= 0x00000040;
      archived_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否被收藏了。时间的秒数
     * </pre>
     *
     * <code>required int64 archived = 8;</code>
     */
    public Builder clearArchived() {
      bitField0_ = (bitField0_ & ~0x00000040);
      archived_ = 0L;
      onChanged();
      return this;
    }

    private pb4client.PvpFightReport pvpTroopsFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PvpFightReport, pb4client.PvpFightReport.Builder, pb4client.PvpFightReportOrBuilder> pvpTroopsFightReportBuilder_;
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public boolean hasPvpTroopsFightReport() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public pb4client.PvpFightReport getPvpTroopsFightReport() {
      if (pvpTroopsFightReportBuilder_ == null) {
        return pvpTroopsFightReport_ == null ? pb4client.PvpFightReport.getDefaultInstance() : pvpTroopsFightReport_;
      } else {
        return pvpTroopsFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public Builder setPvpTroopsFightReport(pb4client.PvpFightReport value) {
      if (pvpTroopsFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pvpTroopsFightReport_ = value;
        onChanged();
      } else {
        pvpTroopsFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public Builder setPvpTroopsFightReport(
        pb4client.PvpFightReport.Builder builderForValue) {
      if (pvpTroopsFightReportBuilder_ == null) {
        pvpTroopsFightReport_ = builderForValue.build();
        onChanged();
      } else {
        pvpTroopsFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public Builder mergePvpTroopsFightReport(pb4client.PvpFightReport value) {
      if (pvpTroopsFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            pvpTroopsFightReport_ != null &&
            pvpTroopsFightReport_ != pb4client.PvpFightReport.getDefaultInstance()) {
          pvpTroopsFightReport_ =
            pb4client.PvpFightReport.newBuilder(pvpTroopsFightReport_).mergeFrom(value).buildPartial();
        } else {
          pvpTroopsFightReport_ = value;
        }
        onChanged();
      } else {
        pvpTroopsFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public Builder clearPvpTroopsFightReport() {
      if (pvpTroopsFightReportBuilder_ == null) {
        pvpTroopsFightReport_ = null;
        onChanged();
      } else {
        pvpTroopsFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public pb4client.PvpFightReport.Builder getPvpTroopsFightReportBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getPvpTroopsFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    public pb4client.PvpFightReportOrBuilder getPvpTroopsFightReportOrBuilder() {
      if (pvpTroopsFightReportBuilder_ != null) {
        return pvpTroopsFightReportBuilder_.getMessageOrBuilder();
      } else {
        return pvpTroopsFightReport_ == null ?
            pb4client.PvpFightReport.getDefaultInstance() : pvpTroopsFightReport_;
      }
    }
    /**
     * <pre>
     * 玩家对玩家			reportType = 1
     * </pre>
     *
     * <code>optional .client2server.PvpFightReport pvpTroopsFightReport = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.PvpFightReport, pb4client.PvpFightReport.Builder, pb4client.PvpFightReportOrBuilder> 
        getPvpTroopsFightReportFieldBuilder() {
      if (pvpTroopsFightReportBuilder_ == null) {
        pvpTroopsFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.PvpFightReport, pb4client.PvpFightReport.Builder, pb4client.PvpFightReportOrBuilder>(
                getPvpTroopsFightReport(),
                getParentForChildren(),
                isClean());
        pvpTroopsFightReport_ = null;
      }
      return pvpTroopsFightReportBuilder_;
    }

    private pb4client.MassRuinsFightReport massRuinsFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.MassRuinsFightReport, pb4client.MassRuinsFightReport.Builder, pb4client.MassRuinsFightReportOrBuilder> massRuinsFightReportBuilder_;
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public boolean hasMassRuinsFightReport() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public pb4client.MassRuinsFightReport getMassRuinsFightReport() {
      if (massRuinsFightReportBuilder_ == null) {
        return massRuinsFightReport_ == null ? pb4client.MassRuinsFightReport.getDefaultInstance() : massRuinsFightReport_;
      } else {
        return massRuinsFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public Builder setMassRuinsFightReport(pb4client.MassRuinsFightReport value) {
      if (massRuinsFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        massRuinsFightReport_ = value;
        onChanged();
      } else {
        massRuinsFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public Builder setMassRuinsFightReport(
        pb4client.MassRuinsFightReport.Builder builderForValue) {
      if (massRuinsFightReportBuilder_ == null) {
        massRuinsFightReport_ = builderForValue.build();
        onChanged();
      } else {
        massRuinsFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public Builder mergeMassRuinsFightReport(pb4client.MassRuinsFightReport value) {
      if (massRuinsFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            massRuinsFightReport_ != null &&
            massRuinsFightReport_ != pb4client.MassRuinsFightReport.getDefaultInstance()) {
          massRuinsFightReport_ =
            pb4client.MassRuinsFightReport.newBuilder(massRuinsFightReport_).mergeFrom(value).buildPartial();
        } else {
          massRuinsFightReport_ = value;
        }
        onChanged();
      } else {
        massRuinsFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public Builder clearMassRuinsFightReport() {
      if (massRuinsFightReportBuilder_ == null) {
        massRuinsFightReport_ = null;
        onChanged();
      } else {
        massRuinsFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public pb4client.MassRuinsFightReport.Builder getMassRuinsFightReportBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getMassRuinsFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    public pb4client.MassRuinsFightReportOrBuilder getMassRuinsFightReportOrBuilder() {
      if (massRuinsFightReportBuilder_ != null) {
        return massRuinsFightReportBuilder_.getMessageOrBuilder();
      } else {
        return massRuinsFightReport_ == null ?
            pb4client.MassRuinsFightReport.getDefaultInstance() : massRuinsFightReport_;
      }
    }
    /**
     * <pre>
     * 集结遗迹				reportType = 4
     * </pre>
     *
     * <code>optional .client2server.MassRuinsFightReport massRuinsFightReport = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.MassRuinsFightReport, pb4client.MassRuinsFightReport.Builder, pb4client.MassRuinsFightReportOrBuilder> 
        getMassRuinsFightReportFieldBuilder() {
      if (massRuinsFightReportBuilder_ == null) {
        massRuinsFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.MassRuinsFightReport, pb4client.MassRuinsFightReport.Builder, pb4client.MassRuinsFightReportOrBuilder>(
                getMassRuinsFightReport(),
                getParentForChildren(),
                isClean());
        massRuinsFightReport_ = null;
      }
      return massRuinsFightReportBuilder_;
    }

    private pb4client.HunterFightReport hunterFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> hunterFightReportBuilder_;
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public boolean hasHunterFightReport() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public pb4client.HunterFightReport getHunterFightReport() {
      if (hunterFightReportBuilder_ == null) {
        return hunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : hunterFightReport_;
      } else {
        return hunterFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public Builder setHunterFightReport(pb4client.HunterFightReport value) {
      if (hunterFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hunterFightReport_ = value;
        onChanged();
      } else {
        hunterFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public Builder setHunterFightReport(
        pb4client.HunterFightReport.Builder builderForValue) {
      if (hunterFightReportBuilder_ == null) {
        hunterFightReport_ = builderForValue.build();
        onChanged();
      } else {
        hunterFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public Builder mergeHunterFightReport(pb4client.HunterFightReport value) {
      if (hunterFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            hunterFightReport_ != null &&
            hunterFightReport_ != pb4client.HunterFightReport.getDefaultInstance()) {
          hunterFightReport_ =
            pb4client.HunterFightReport.newBuilder(hunterFightReport_).mergeFrom(value).buildPartial();
        } else {
          hunterFightReport_ = value;
        }
        onChanged();
      } else {
        hunterFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public Builder clearHunterFightReport() {
      if (hunterFightReportBuilder_ == null) {
        hunterFightReport_ = null;
        onChanged();
      } else {
        hunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public pb4client.HunterFightReport.Builder getHunterFightReportBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getHunterFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    public pb4client.HunterFightReportOrBuilder getHunterFightReportOrBuilder() {
      if (hunterFightReportBuilder_ != null) {
        return hunterFightReportBuilder_.getMessageOrBuilder();
      } else {
        return hunterFightReport_ == null ?
            pb4client.HunterFightReport.getDefaultInstance() : hunterFightReport_;
      }
    }
    /**
     * <pre>
     * 魔物猎杀				reportType = 2
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport hunterFightReport = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> 
        getHunterFightReportFieldBuilder() {
      if (hunterFightReportBuilder_ == null) {
        hunterFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder>(
                getHunterFightReport(),
                getParentForChildren(),
                isClean());
        hunterFightReport_ = null;
      }
      return hunterFightReportBuilder_;
    }

    private pb4client.TransportReport transportReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.TransportReport, pb4client.TransportReport.Builder, pb4client.TransportReportOrBuilder> transportReportBuilder_;
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public boolean hasTransportReport() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public pb4client.TransportReport getTransportReport() {
      if (transportReportBuilder_ == null) {
        return transportReport_ == null ? pb4client.TransportReport.getDefaultInstance() : transportReport_;
      } else {
        return transportReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public Builder setTransportReport(pb4client.TransportReport value) {
      if (transportReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transportReport_ = value;
        onChanged();
      } else {
        transportReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public Builder setTransportReport(
        pb4client.TransportReport.Builder builderForValue) {
      if (transportReportBuilder_ == null) {
        transportReport_ = builderForValue.build();
        onChanged();
      } else {
        transportReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public Builder mergeTransportReport(pb4client.TransportReport value) {
      if (transportReportBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            transportReport_ != null &&
            transportReport_ != pb4client.TransportReport.getDefaultInstance()) {
          transportReport_ =
            pb4client.TransportReport.newBuilder(transportReport_).mergeFrom(value).buildPartial();
        } else {
          transportReport_ = value;
        }
        onChanged();
      } else {
        transportReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public Builder clearTransportReport() {
      if (transportReportBuilder_ == null) {
        transportReport_ = null;
        onChanged();
      } else {
        transportReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public pb4client.TransportReport.Builder getTransportReportBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getTransportReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    public pb4client.TransportReportOrBuilder getTransportReportOrBuilder() {
      if (transportReportBuilder_ != null) {
        return transportReportBuilder_.getMessageOrBuilder();
      } else {
        return transportReport_ == null ?
            pb4client.TransportReport.getDefaultInstance() : transportReport_;
      }
    }
    /**
     * <pre>
     * 运输战报				reportType = 9
     * </pre>
     *
     * <code>optional .client2server.TransportReport transportReport = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.TransportReport, pb4client.TransportReport.Builder, pb4client.TransportReportOrBuilder> 
        getTransportReportFieldBuilder() {
      if (transportReportBuilder_ == null) {
        transportReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.TransportReport, pb4client.TransportReport.Builder, pb4client.TransportReportOrBuilder>(
                getTransportReport(),
                getParentForChildren(),
                isClean());
        transportReport_ = null;
      }
      return transportReportBuilder_;
    }

    private pb4client.CollectReport collectReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CollectReport, pb4client.CollectReport.Builder, pb4client.CollectReportOrBuilder> collectReportBuilder_;
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public boolean hasCollectReport() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public pb4client.CollectReport getCollectReport() {
      if (collectReportBuilder_ == null) {
        return collectReport_ == null ? pb4client.CollectReport.getDefaultInstance() : collectReport_;
      } else {
        return collectReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public Builder setCollectReport(pb4client.CollectReport value) {
      if (collectReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        collectReport_ = value;
        onChanged();
      } else {
        collectReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public Builder setCollectReport(
        pb4client.CollectReport.Builder builderForValue) {
      if (collectReportBuilder_ == null) {
        collectReport_ = builderForValue.build();
        onChanged();
      } else {
        collectReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public Builder mergeCollectReport(pb4client.CollectReport value) {
      if (collectReportBuilder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800) &&
            collectReport_ != null &&
            collectReport_ != pb4client.CollectReport.getDefaultInstance()) {
          collectReport_ =
            pb4client.CollectReport.newBuilder(collectReport_).mergeFrom(value).buildPartial();
        } else {
          collectReport_ = value;
        }
        onChanged();
      } else {
        collectReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public Builder clearCollectReport() {
      if (collectReportBuilder_ == null) {
        collectReport_ = null;
        onChanged();
      } else {
        collectReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public pb4client.CollectReport.Builder getCollectReportBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getCollectReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    public pb4client.CollectReportOrBuilder getCollectReportOrBuilder() {
      if (collectReportBuilder_ != null) {
        return collectReportBuilder_.getMessageOrBuilder();
      } else {
        return collectReport_ == null ?
            pb4client.CollectReport.getDefaultInstance() : collectReport_;
      }
    }
    /**
     * <pre>
     * 采集战报				reportType = 8
     * </pre>
     *
     * <code>optional .client2server.CollectReport collectReport = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.CollectReport, pb4client.CollectReport.Builder, pb4client.CollectReportOrBuilder> 
        getCollectReportFieldBuilder() {
      if (collectReportBuilder_ == null) {
        collectReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.CollectReport, pb4client.CollectReport.Builder, pb4client.CollectReportOrBuilder>(
                getCollectReport(),
                getParentForChildren(),
                isClean());
        collectReport_ = null;
      }
      return collectReportBuilder_;
    }

    private pb4client.ScoutReport scoutReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ScoutReport, pb4client.ScoutReport.Builder, pb4client.ScoutReportOrBuilder> scoutReportBuilder_;
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public boolean hasScoutReport() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public pb4client.ScoutReport getScoutReport() {
      if (scoutReportBuilder_ == null) {
        return scoutReport_ == null ? pb4client.ScoutReport.getDefaultInstance() : scoutReport_;
      } else {
        return scoutReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public Builder setScoutReport(pb4client.ScoutReport value) {
      if (scoutReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scoutReport_ = value;
        onChanged();
      } else {
        scoutReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public Builder setScoutReport(
        pb4client.ScoutReport.Builder builderForValue) {
      if (scoutReportBuilder_ == null) {
        scoutReport_ = builderForValue.build();
        onChanged();
      } else {
        scoutReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public Builder mergeScoutReport(pb4client.ScoutReport value) {
      if (scoutReportBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000) &&
            scoutReport_ != null &&
            scoutReport_ != pb4client.ScoutReport.getDefaultInstance()) {
          scoutReport_ =
            pb4client.ScoutReport.newBuilder(scoutReport_).mergeFrom(value).buildPartial();
        } else {
          scoutReport_ = value;
        }
        onChanged();
      } else {
        scoutReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      return this;
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public Builder clearScoutReport() {
      if (scoutReportBuilder_ == null) {
        scoutReport_ = null;
        onChanged();
      } else {
        scoutReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public pb4client.ScoutReport.Builder getScoutReportBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getScoutReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    public pb4client.ScoutReportOrBuilder getScoutReportOrBuilder() {
      if (scoutReportBuilder_ != null) {
        return scoutReportBuilder_.getMessageOrBuilder();
      } else {
        return scoutReport_ == null ?
            pb4client.ScoutReport.getDefaultInstance() : scoutReport_;
      }
    }
    /**
     * <pre>
     * 侦察战报				reportType = 6
     * </pre>
     *
     * <code>optional .client2server.ScoutReport scoutReport = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.ScoutReport, pb4client.ScoutReport.Builder, pb4client.ScoutReportOrBuilder> 
        getScoutReportFieldBuilder() {
      if (scoutReportBuilder_ == null) {
        scoutReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.ScoutReport, pb4client.ScoutReport.Builder, pb4client.ScoutReportOrBuilder>(
                getScoutReport(),
                getParentForChildren(),
                isClean());
        scoutReport_ = null;
      }
      return scoutReportBuilder_;
    }

    private pb4client.BeScoutReport beScoutReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BeScoutReport, pb4client.BeScoutReport.Builder, pb4client.BeScoutReportOrBuilder> beScoutReportBuilder_;
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public boolean hasBeScoutReport() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public pb4client.BeScoutReport getBeScoutReport() {
      if (beScoutReportBuilder_ == null) {
        return beScoutReport_ == null ? pb4client.BeScoutReport.getDefaultInstance() : beScoutReport_;
      } else {
        return beScoutReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public Builder setBeScoutReport(pb4client.BeScoutReport value) {
      if (beScoutReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        beScoutReport_ = value;
        onChanged();
      } else {
        beScoutReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public Builder setBeScoutReport(
        pb4client.BeScoutReport.Builder builderForValue) {
      if (beScoutReportBuilder_ == null) {
        beScoutReport_ = builderForValue.build();
        onChanged();
      } else {
        beScoutReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public Builder mergeBeScoutReport(pb4client.BeScoutReport value) {
      if (beScoutReportBuilder_ == null) {
        if (((bitField0_ & 0x00002000) == 0x00002000) &&
            beScoutReport_ != null &&
            beScoutReport_ != pb4client.BeScoutReport.getDefaultInstance()) {
          beScoutReport_ =
            pb4client.BeScoutReport.newBuilder(beScoutReport_).mergeFrom(value).buildPartial();
        } else {
          beScoutReport_ = value;
        }
        onChanged();
      } else {
        beScoutReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00002000;
      return this;
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public Builder clearBeScoutReport() {
      if (beScoutReportBuilder_ == null) {
        beScoutReport_ = null;
        onChanged();
      } else {
        beScoutReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      return this;
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public pb4client.BeScoutReport.Builder getBeScoutReportBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getBeScoutReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    public pb4client.BeScoutReportOrBuilder getBeScoutReportOrBuilder() {
      if (beScoutReportBuilder_ != null) {
        return beScoutReportBuilder_.getMessageOrBuilder();
      } else {
        return beScoutReport_ == null ?
            pb4client.BeScoutReport.getDefaultInstance() : beScoutReport_;
      }
    }
    /**
     * <pre>
     * 被侦查战报			reportType = 7
     * </pre>
     *
     * <code>optional .client2server.BeScoutReport beScoutReport = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.BeScoutReport, pb4client.BeScoutReport.Builder, pb4client.BeScoutReportOrBuilder> 
        getBeScoutReportFieldBuilder() {
      if (beScoutReportBuilder_ == null) {
        beScoutReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.BeScoutReport, pb4client.BeScoutReport.Builder, pb4client.BeScoutReportOrBuilder>(
                getBeScoutReport(),
                getParentForChildren(),
                isClean());
        beScoutReport_ = null;
      }
      return beScoutReportBuilder_;
    }

    private pb4client.HunterFightReport allianceHunterFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> allianceHunterFightReportBuilder_;
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public boolean hasAllianceHunterFightReport() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public pb4client.HunterFightReport getAllianceHunterFightReport() {
      if (allianceHunterFightReportBuilder_ == null) {
        return allianceHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : allianceHunterFightReport_;
      } else {
        return allianceHunterFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public Builder setAllianceHunterFightReport(pb4client.HunterFightReport value) {
      if (allianceHunterFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allianceHunterFightReport_ = value;
        onChanged();
      } else {
        allianceHunterFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public Builder setAllianceHunterFightReport(
        pb4client.HunterFightReport.Builder builderForValue) {
      if (allianceHunterFightReportBuilder_ == null) {
        allianceHunterFightReport_ = builderForValue.build();
        onChanged();
      } else {
        allianceHunterFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public Builder mergeAllianceHunterFightReport(pb4client.HunterFightReport value) {
      if (allianceHunterFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00004000) == 0x00004000) &&
            allianceHunterFightReport_ != null &&
            allianceHunterFightReport_ != pb4client.HunterFightReport.getDefaultInstance()) {
          allianceHunterFightReport_ =
            pb4client.HunterFightReport.newBuilder(allianceHunterFightReport_).mergeFrom(value).buildPartial();
        } else {
          allianceHunterFightReport_ = value;
        }
        onChanged();
      } else {
        allianceHunterFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00004000;
      return this;
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public Builder clearAllianceHunterFightReport() {
      if (allianceHunterFightReportBuilder_ == null) {
        allianceHunterFightReport_ = null;
        onChanged();
      } else {
        allianceHunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      return this;
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public pb4client.HunterFightReport.Builder getAllianceHunterFightReportBuilder() {
      bitField0_ |= 0x00004000;
      onChanged();
      return getAllianceHunterFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    public pb4client.HunterFightReportOrBuilder getAllianceHunterFightReportOrBuilder() {
      if (allianceHunterFightReportBuilder_ != null) {
        return allianceHunterFightReportBuilder_.getMessageOrBuilder();
      } else {
        return allianceHunterFightReport_ == null ?
            pb4client.HunterFightReport.getDefaultInstance() : allianceHunterFightReport_;
      }
    }
    /**
     * <pre>
     * 联盟魔物猎杀			reportType = 10
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport allianceHunterFightReport = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> 
        getAllianceHunterFightReportFieldBuilder() {
      if (allianceHunterFightReportBuilder_ == null) {
        allianceHunterFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder>(
                getAllianceHunterFightReport(),
                getParentForChildren(),
                isClean());
        allianceHunterFightReport_ = null;
      }
      return allianceHunterFightReportBuilder_;
    }

    private pb4client.HunterFightReport worldHunterFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> worldHunterFightReportBuilder_;
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public boolean hasWorldHunterFightReport() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public pb4client.HunterFightReport getWorldHunterFightReport() {
      if (worldHunterFightReportBuilder_ == null) {
        return worldHunterFightReport_ == null ? pb4client.HunterFightReport.getDefaultInstance() : worldHunterFightReport_;
      } else {
        return worldHunterFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public Builder setWorldHunterFightReport(pb4client.HunterFightReport value) {
      if (worldHunterFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        worldHunterFightReport_ = value;
        onChanged();
      } else {
        worldHunterFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public Builder setWorldHunterFightReport(
        pb4client.HunterFightReport.Builder builderForValue) {
      if (worldHunterFightReportBuilder_ == null) {
        worldHunterFightReport_ = builderForValue.build();
        onChanged();
      } else {
        worldHunterFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public Builder mergeWorldHunterFightReport(pb4client.HunterFightReport value) {
      if (worldHunterFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00008000) == 0x00008000) &&
            worldHunterFightReport_ != null &&
            worldHunterFightReport_ != pb4client.HunterFightReport.getDefaultInstance()) {
          worldHunterFightReport_ =
            pb4client.HunterFightReport.newBuilder(worldHunterFightReport_).mergeFrom(value).buildPartial();
        } else {
          worldHunterFightReport_ = value;
        }
        onChanged();
      } else {
        worldHunterFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public Builder clearWorldHunterFightReport() {
      if (worldHunterFightReportBuilder_ == null) {
        worldHunterFightReport_ = null;
        onChanged();
      } else {
        worldHunterFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      return this;
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public pb4client.HunterFightReport.Builder getWorldHunterFightReportBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getWorldHunterFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    public pb4client.HunterFightReportOrBuilder getWorldHunterFightReportOrBuilder() {
      if (worldHunterFightReportBuilder_ != null) {
        return worldHunterFightReportBuilder_.getMessageOrBuilder();
      } else {
        return worldHunterFightReport_ == null ?
            pb4client.HunterFightReport.getDefaultInstance() : worldHunterFightReport_;
      }
    }
    /**
     * <pre>
     * 世界魔物猎杀			reportType = 11
     * </pre>
     *
     * <code>optional .client2server.HunterFightReport worldHunterFightReport = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder> 
        getWorldHunterFightReportFieldBuilder() {
      if (worldHunterFightReportBuilder_ == null) {
        worldHunterFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.HunterFightReport, pb4client.HunterFightReport.Builder, pb4client.HunterFightReportOrBuilder>(
                getWorldHunterFightReport(),
                getParentForChildren(),
                isClean());
        worldHunterFightReport_ = null;
      }
      return worldHunterFightReportBuilder_;
    }

    private pb4client.StrongholdFightReport strongholdFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StrongholdFightReport, pb4client.StrongholdFightReport.Builder, pb4client.StrongholdFightReportOrBuilder> strongholdFightReportBuilder_;
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public boolean hasStrongholdFightReport() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public pb4client.StrongholdFightReport getStrongholdFightReport() {
      if (strongholdFightReportBuilder_ == null) {
        return strongholdFightReport_ == null ? pb4client.StrongholdFightReport.getDefaultInstance() : strongholdFightReport_;
      } else {
        return strongholdFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public Builder setStrongholdFightReport(pb4client.StrongholdFightReport value) {
      if (strongholdFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strongholdFightReport_ = value;
        onChanged();
      } else {
        strongholdFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public Builder setStrongholdFightReport(
        pb4client.StrongholdFightReport.Builder builderForValue) {
      if (strongholdFightReportBuilder_ == null) {
        strongholdFightReport_ = builderForValue.build();
        onChanged();
      } else {
        strongholdFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public Builder mergeStrongholdFightReport(pb4client.StrongholdFightReport value) {
      if (strongholdFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00010000) == 0x00010000) &&
            strongholdFightReport_ != null &&
            strongholdFightReport_ != pb4client.StrongholdFightReport.getDefaultInstance()) {
          strongholdFightReport_ =
            pb4client.StrongholdFightReport.newBuilder(strongholdFightReport_).mergeFrom(value).buildPartial();
        } else {
          strongholdFightReport_ = value;
        }
        onChanged();
      } else {
        strongholdFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      return this;
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public Builder clearStrongholdFightReport() {
      if (strongholdFightReportBuilder_ == null) {
        strongholdFightReport_ = null;
        onChanged();
      } else {
        strongholdFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00010000);
      return this;
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public pb4client.StrongholdFightReport.Builder getStrongholdFightReportBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getStrongholdFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    public pb4client.StrongholdFightReportOrBuilder getStrongholdFightReportOrBuilder() {
      if (strongholdFightReportBuilder_ != null) {
        return strongholdFightReportBuilder_.getMessageOrBuilder();
      } else {
        return strongholdFightReport_ == null ?
            pb4client.StrongholdFightReport.getDefaultInstance() : strongholdFightReport_;
      }
    }
    /**
     * <pre>
     * 攻打据点				reportType = 12
     * </pre>
     *
     * <code>optional .client2server.StrongholdFightReport strongholdFightReport = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StrongholdFightReport, pb4client.StrongholdFightReport.Builder, pb4client.StrongholdFightReportOrBuilder> 
        getStrongholdFightReportFieldBuilder() {
      if (strongholdFightReportBuilder_ == null) {
        strongholdFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.StrongholdFightReport, pb4client.StrongholdFightReport.Builder, pb4client.StrongholdFightReportOrBuilder>(
                getStrongholdFightReport(),
                getParentForChildren(),
                isClean());
        strongholdFightReport_ = null;
      }
      return strongholdFightReportBuilder_;
    }

    private pb4client.StrongholdGiveTributeReport strongholdGiveTributeReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StrongholdGiveTributeReport, pb4client.StrongholdGiveTributeReport.Builder, pb4client.StrongholdGiveTributeReportOrBuilder> strongholdGiveTributeReportBuilder_;
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public boolean hasStrongholdGiveTributeReport() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public pb4client.StrongholdGiveTributeReport getStrongholdGiveTributeReport() {
      if (strongholdGiveTributeReportBuilder_ == null) {
        return strongholdGiveTributeReport_ == null ? pb4client.StrongholdGiveTributeReport.getDefaultInstance() : strongholdGiveTributeReport_;
      } else {
        return strongholdGiveTributeReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public Builder setStrongholdGiveTributeReport(pb4client.StrongholdGiveTributeReport value) {
      if (strongholdGiveTributeReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strongholdGiveTributeReport_ = value;
        onChanged();
      } else {
        strongholdGiveTributeReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public Builder setStrongholdGiveTributeReport(
        pb4client.StrongholdGiveTributeReport.Builder builderForValue) {
      if (strongholdGiveTributeReportBuilder_ == null) {
        strongholdGiveTributeReport_ = builderForValue.build();
        onChanged();
      } else {
        strongholdGiveTributeReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public Builder mergeStrongholdGiveTributeReport(pb4client.StrongholdGiveTributeReport value) {
      if (strongholdGiveTributeReportBuilder_ == null) {
        if (((bitField0_ & 0x00020000) == 0x00020000) &&
            strongholdGiveTributeReport_ != null &&
            strongholdGiveTributeReport_ != pb4client.StrongholdGiveTributeReport.getDefaultInstance()) {
          strongholdGiveTributeReport_ =
            pb4client.StrongholdGiveTributeReport.newBuilder(strongholdGiveTributeReport_).mergeFrom(value).buildPartial();
        } else {
          strongholdGiveTributeReport_ = value;
        }
        onChanged();
      } else {
        strongholdGiveTributeReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public Builder clearStrongholdGiveTributeReport() {
      if (strongholdGiveTributeReportBuilder_ == null) {
        strongholdGiveTributeReport_ = null;
        onChanged();
      } else {
        strongholdGiveTributeReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      return this;
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public pb4client.StrongholdGiveTributeReport.Builder getStrongholdGiveTributeReportBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getStrongholdGiveTributeReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    public pb4client.StrongholdGiveTributeReportOrBuilder getStrongholdGiveTributeReportOrBuilder() {
      if (strongholdGiveTributeReportBuilder_ != null) {
        return strongholdGiveTributeReportBuilder_.getMessageOrBuilder();
      } else {
        return strongholdGiveTributeReport_ == null ?
            pb4client.StrongholdGiveTributeReport.getDefaultInstance() : strongholdGiveTributeReport_;
      }
    }
    /**
     * <pre>
     * 据点进贡				reportType = 13
     * </pre>
     *
     * <code>optional .client2server.StrongholdGiveTributeReport strongholdGiveTributeReport = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StrongholdGiveTributeReport, pb4client.StrongholdGiveTributeReport.Builder, pb4client.StrongholdGiveTributeReportOrBuilder> 
        getStrongholdGiveTributeReportFieldBuilder() {
      if (strongholdGiveTributeReportBuilder_ == null) {
        strongholdGiveTributeReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.StrongholdGiveTributeReport, pb4client.StrongholdGiveTributeReport.Builder, pb4client.StrongholdGiveTributeReportOrBuilder>(
                getStrongholdGiveTributeReport(),
                getParentForChildren(),
                isClean());
        strongholdGiveTributeReport_ = null;
      }
      return strongholdGiveTributeReportBuilder_;
    }

    private pb4client.HunterCallInfo hunterCallInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterCallInfo, pb4client.HunterCallInfo.Builder, pb4client.HunterCallInfoOrBuilder> hunterCallInfoBuilder_;
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public boolean hasHunterCallInfo() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public pb4client.HunterCallInfo getHunterCallInfo() {
      if (hunterCallInfoBuilder_ == null) {
        return hunterCallInfo_ == null ? pb4client.HunterCallInfo.getDefaultInstance() : hunterCallInfo_;
      } else {
        return hunterCallInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public Builder setHunterCallInfo(pb4client.HunterCallInfo value) {
      if (hunterCallInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hunterCallInfo_ = value;
        onChanged();
      } else {
        hunterCallInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00040000;
      return this;
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public Builder setHunterCallInfo(
        pb4client.HunterCallInfo.Builder builderForValue) {
      if (hunterCallInfoBuilder_ == null) {
        hunterCallInfo_ = builderForValue.build();
        onChanged();
      } else {
        hunterCallInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00040000;
      return this;
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public Builder mergeHunterCallInfo(pb4client.HunterCallInfo value) {
      if (hunterCallInfoBuilder_ == null) {
        if (((bitField0_ & 0x00040000) == 0x00040000) &&
            hunterCallInfo_ != null &&
            hunterCallInfo_ != pb4client.HunterCallInfo.getDefaultInstance()) {
          hunterCallInfo_ =
            pb4client.HunterCallInfo.newBuilder(hunterCallInfo_).mergeFrom(value).buildPartial();
        } else {
          hunterCallInfo_ = value;
        }
        onChanged();
      } else {
        hunterCallInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00040000;
      return this;
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public Builder clearHunterCallInfo() {
      if (hunterCallInfoBuilder_ == null) {
        hunterCallInfo_ = null;
        onChanged();
      } else {
        hunterCallInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00040000);
      return this;
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public pb4client.HunterCallInfo.Builder getHunterCallInfoBuilder() {
      bitField0_ |= 0x00040000;
      onChanged();
      return getHunterCallInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    public pb4client.HunterCallInfoOrBuilder getHunterCallInfoOrBuilder() {
      if (hunterCallInfoBuilder_ != null) {
        return hunterCallInfoBuilder_.getMessageOrBuilder();
      } else {
        return hunterCallInfo_ == null ?
            pb4client.HunterCallInfo.getDefaultInstance() : hunterCallInfo_;
      }
    }
    /**
     * <pre>
     *召唤礼信息  reportType = 15
     * </pre>
     *
     * <code>optional .client2server.HunterCallInfo hunterCallInfo = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.HunterCallInfo, pb4client.HunterCallInfo.Builder, pb4client.HunterCallInfoOrBuilder> 
        getHunterCallInfoFieldBuilder() {
      if (hunterCallInfoBuilder_ == null) {
        hunterCallInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.HunterCallInfo, pb4client.HunterCallInfo.Builder, pb4client.HunterCallInfoOrBuilder>(
                getHunterCallInfo(),
                getParentForChildren(),
                isClean());
        hunterCallInfo_ = null;
      }
      return hunterCallInfoBuilder_;
    }

    private pb4client.JjcFightReport jjcFightReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcFightReport, pb4client.JjcFightReport.Builder, pb4client.JjcFightReportOrBuilder> jjcFightReportBuilder_;
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public boolean hasJjcFightReport() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public pb4client.JjcFightReport getJjcFightReport() {
      if (jjcFightReportBuilder_ == null) {
        return jjcFightReport_ == null ? pb4client.JjcFightReport.getDefaultInstance() : jjcFightReport_;
      } else {
        return jjcFightReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public Builder setJjcFightReport(pb4client.JjcFightReport value) {
      if (jjcFightReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        jjcFightReport_ = value;
        onChanged();
      } else {
        jjcFightReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public Builder setJjcFightReport(
        pb4client.JjcFightReport.Builder builderForValue) {
      if (jjcFightReportBuilder_ == null) {
        jjcFightReport_ = builderForValue.build();
        onChanged();
      } else {
        jjcFightReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public Builder mergeJjcFightReport(pb4client.JjcFightReport value) {
      if (jjcFightReportBuilder_ == null) {
        if (((bitField0_ & 0x00080000) == 0x00080000) &&
            jjcFightReport_ != null &&
            jjcFightReport_ != pb4client.JjcFightReport.getDefaultInstance()) {
          jjcFightReport_ =
            pb4client.JjcFightReport.newBuilder(jjcFightReport_).mergeFrom(value).buildPartial();
        } else {
          jjcFightReport_ = value;
        }
        onChanged();
      } else {
        jjcFightReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00080000;
      return this;
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public Builder clearJjcFightReport() {
      if (jjcFightReportBuilder_ == null) {
        jjcFightReport_ = null;
        onChanged();
      } else {
        jjcFightReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00080000);
      return this;
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public pb4client.JjcFightReport.Builder getJjcFightReportBuilder() {
      bitField0_ |= 0x00080000;
      onChanged();
      return getJjcFightReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    public pb4client.JjcFightReportOrBuilder getJjcFightReportOrBuilder() {
      if (jjcFightReportBuilder_ != null) {
        return jjcFightReportBuilder_.getMessageOrBuilder();
      } else {
        return jjcFightReport_ == null ?
            pb4client.JjcFightReport.getDefaultInstance() : jjcFightReport_;
      }
    }
    /**
     * <pre>
     *竞技场战报 reportType = 16
     * </pre>
     *
     * <code>optional .client2server.JjcFightReport jjcFightReport = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.JjcFightReport, pb4client.JjcFightReport.Builder, pb4client.JjcFightReportOrBuilder> 
        getJjcFightReportFieldBuilder() {
      if (jjcFightReportBuilder_ == null) {
        jjcFightReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.JjcFightReport, pb4client.JjcFightReport.Builder, pb4client.JjcFightReportOrBuilder>(
                getJjcFightReport(),
                getParentForChildren(),
                isClean());
        jjcFightReport_ = null;
      }
      return jjcFightReportBuilder_;
    }

    private pb4client.StationDefReport stationDefReport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StationDefReport, pb4client.StationDefReport.Builder, pb4client.StationDefReportOrBuilder> stationDefReportBuilder_;
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public boolean hasStationDefReport() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public pb4client.StationDefReport getStationDefReport() {
      if (stationDefReportBuilder_ == null) {
        return stationDefReport_ == null ? pb4client.StationDefReport.getDefaultInstance() : stationDefReport_;
      } else {
        return stationDefReportBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public Builder setStationDefReport(pb4client.StationDefReport value) {
      if (stationDefReportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stationDefReport_ = value;
        onChanged();
      } else {
        stationDefReportBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public Builder setStationDefReport(
        pb4client.StationDefReport.Builder builderForValue) {
      if (stationDefReportBuilder_ == null) {
        stationDefReport_ = builderForValue.build();
        onChanged();
      } else {
        stationDefReportBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public Builder mergeStationDefReport(pb4client.StationDefReport value) {
      if (stationDefReportBuilder_ == null) {
        if (((bitField0_ & 0x00100000) == 0x00100000) &&
            stationDefReport_ != null &&
            stationDefReport_ != pb4client.StationDefReport.getDefaultInstance()) {
          stationDefReport_ =
            pb4client.StationDefReport.newBuilder(stationDefReport_).mergeFrom(value).buildPartial();
        } else {
          stationDefReport_ = value;
        }
        onChanged();
      } else {
        stationDefReportBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public Builder clearStationDefReport() {
      if (stationDefReportBuilder_ == null) {
        stationDefReport_ = null;
        onChanged();
      } else {
        stationDefReportBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      return this;
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public pb4client.StationDefReport.Builder getStationDefReportBuilder() {
      bitField0_ |= 0x00100000;
      onChanged();
      return getStationDefReportFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    public pb4client.StationDefReportOrBuilder getStationDefReportOrBuilder() {
      if (stationDefReportBuilder_ != null) {
        return stationDefReportBuilder_.getMessageOrBuilder();
      } else {
        return stationDefReport_ == null ?
            pb4client.StationDefReport.getDefaultInstance() : stationDefReport_;
      }
    }
    /**
     * <pre>
     *驻扎部队防守战报 reportType = 17
     * </pre>
     *
     * <code>optional .client2server.StationDefReport stationDefReport = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.StationDefReport, pb4client.StationDefReport.Builder, pb4client.StationDefReportOrBuilder> 
        getStationDefReportFieldBuilder() {
      if (stationDefReportBuilder_ == null) {
        stationDefReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.StationDefReport, pb4client.StationDefReport.Builder, pb4client.StationDefReportOrBuilder>(
                getStationDefReport(),
                getParentForChildren(),
                isClean());
        stationDefReport_ = null;
      }
      return stationDefReportBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:client2server.BattleReportInfo)
  }

  // @@protoc_insertion_point(class_scope:client2server.BattleReportInfo)
  private static final pb4client.BattleReportInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4client.BattleReportInfo();
  }

  public static pb4client.BattleReportInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<BattleReportInfo>
      PARSER = new com.google.protobuf.AbstractParser<BattleReportInfo>() {
    public BattleReportInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new BattleReportInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BattleReportInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BattleReportInfo> getParserForType() {
    return PARSER;
  }

  public pb4client.BattleReportInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

