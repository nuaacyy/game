// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal2world.proto

package pb4server;

/**
 * <pre>
 * 跑马灯
 * </pre>
 *
 * Protobuf type {@code pb4server.MarqueeAskReq}
 */
public  final class MarqueeAskReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pb4server.MarqueeAskReq)
    MarqueeAskReqOrBuilder {
  // Use MarqueeAskReq.newBuilder() to construct.
  private MarqueeAskReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MarqueeAskReq() {
    noticeType_ = 0;
    toPlayerId_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private MarqueeAskReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            pb4client.Notice.Builder subBuilder = null;
            if (noticeInfos_ != null) {
              subBuilder = noticeInfos_.toBuilder();
            }
            noticeInfos_ = input.readMessage(pb4client.Notice.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(noticeInfos_);
              noticeInfos_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            noticeType_ = input.readInt32();
            break;
          }
          case 24: {

            toPlayerId_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4server.InternalWkt.internal_static_pb4server_MarqueeAskReq_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4server.InternalWkt.internal_static_pb4server_MarqueeAskReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4server.MarqueeAskReq.class, pb4server.MarqueeAskReq.Builder.class);
  }

  public static final int NOTICEINFOS_FIELD_NUMBER = 1;
  private pb4client.Notice noticeInfos_;
  /**
   * <pre>
   *公告内容
   * </pre>
   *
   * <code>.client2server.Notice noticeInfos = 1;</code>
   */
  public boolean hasNoticeInfos() {
    return noticeInfos_ != null;
  }
  /**
   * <pre>
   *公告内容
   * </pre>
   *
   * <code>.client2server.Notice noticeInfos = 1;</code>
   */
  public pb4client.Notice getNoticeInfos() {
    return noticeInfos_ == null ? pb4client.Notice.getDefaultInstance() : noticeInfos_;
  }
  /**
   * <pre>
   *公告内容
   * </pre>
   *
   * <code>.client2server.Notice noticeInfos = 1;</code>
   */
  public pb4client.NoticeOrBuilder getNoticeInfosOrBuilder() {
    return getNoticeInfos();
  }

  public static final int NOTICETYPE_FIELD_NUMBER = 2;
  private int noticeType_;
  /**
   * <pre>
   *公告类型（1.屏幕中央 2.聊天框 3.屏幕中央+聊天框）
   * </pre>
   *
   * <code>int32 noticeType = 2;</code>
   */
  public int getNoticeType() {
    return noticeType_;
  }

  public static final int TOPLAYERID_FIELD_NUMBER = 3;
  private long toPlayerId_;
  /**
   * <pre>
   *推送给玩家的id
   * </pre>
   *
   * <code>int64 toPlayerId = 3;</code>
   */
  public long getToPlayerId() {
    return toPlayerId_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasNoticeInfos()) {
      if (!getNoticeInfos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (noticeInfos_ != null) {
      output.writeMessage(1, getNoticeInfos());
    }
    if (noticeType_ != 0) {
      output.writeInt32(2, noticeType_);
    }
    if (toPlayerId_ != 0L) {
      output.writeInt64(3, toPlayerId_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (noticeInfos_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getNoticeInfos());
    }
    if (noticeType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, noticeType_);
    }
    if (toPlayerId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, toPlayerId_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4server.MarqueeAskReq)) {
      return super.equals(obj);
    }
    pb4server.MarqueeAskReq other = (pb4server.MarqueeAskReq) obj;

    boolean result = true;
    result = result && (hasNoticeInfos() == other.hasNoticeInfos());
    if (hasNoticeInfos()) {
      result = result && getNoticeInfos()
          .equals(other.getNoticeInfos());
    }
    result = result && (getNoticeType()
        == other.getNoticeType());
    result = result && (getToPlayerId()
        == other.getToPlayerId());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasNoticeInfos()) {
      hash = (37 * hash) + NOTICEINFOS_FIELD_NUMBER;
      hash = (53 * hash) + getNoticeInfos().hashCode();
    }
    hash = (37 * hash) + NOTICETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getNoticeType();
    hash = (37 * hash) + TOPLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getToPlayerId());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4server.MarqueeAskReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.MarqueeAskReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.MarqueeAskReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.MarqueeAskReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4server.MarqueeAskReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.MarqueeAskReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4server.MarqueeAskReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 跑马灯
   * </pre>
   *
   * Protobuf type {@code pb4server.MarqueeAskReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pb4server.MarqueeAskReq)
      pb4server.MarqueeAskReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4server.InternalWkt.internal_static_pb4server_MarqueeAskReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4server.InternalWkt.internal_static_pb4server_MarqueeAskReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4server.MarqueeAskReq.class, pb4server.MarqueeAskReq.Builder.class);
    }

    // Construct using pb4server.MarqueeAskReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (noticeInfosBuilder_ == null) {
        noticeInfos_ = null;
      } else {
        noticeInfos_ = null;
        noticeInfosBuilder_ = null;
      }
      noticeType_ = 0;

      toPlayerId_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4server.InternalWkt.internal_static_pb4server_MarqueeAskReq_descriptor;
    }

    public pb4server.MarqueeAskReq getDefaultInstanceForType() {
      return pb4server.MarqueeAskReq.getDefaultInstance();
    }

    public pb4server.MarqueeAskReq build() {
      pb4server.MarqueeAskReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4server.MarqueeAskReq buildPartial() {
      pb4server.MarqueeAskReq result = new pb4server.MarqueeAskReq(this);
      if (noticeInfosBuilder_ == null) {
        result.noticeInfos_ = noticeInfos_;
      } else {
        result.noticeInfos_ = noticeInfosBuilder_.build();
      }
      result.noticeType_ = noticeType_;
      result.toPlayerId_ = toPlayerId_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4server.MarqueeAskReq) {
        return mergeFrom((pb4server.MarqueeAskReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4server.MarqueeAskReq other) {
      if (other == pb4server.MarqueeAskReq.getDefaultInstance()) return this;
      if (other.hasNoticeInfos()) {
        mergeNoticeInfos(other.getNoticeInfos());
      }
      if (other.getNoticeType() != 0) {
        setNoticeType(other.getNoticeType());
      }
      if (other.getToPlayerId() != 0L) {
        setToPlayerId(other.getToPlayerId());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (hasNoticeInfos()) {
        if (!getNoticeInfos().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4server.MarqueeAskReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4server.MarqueeAskReq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private pb4client.Notice noticeInfos_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.Notice, pb4client.Notice.Builder, pb4client.NoticeOrBuilder> noticeInfosBuilder_;
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public boolean hasNoticeInfos() {
      return noticeInfosBuilder_ != null || noticeInfos_ != null;
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public pb4client.Notice getNoticeInfos() {
      if (noticeInfosBuilder_ == null) {
        return noticeInfos_ == null ? pb4client.Notice.getDefaultInstance() : noticeInfos_;
      } else {
        return noticeInfosBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public Builder setNoticeInfos(pb4client.Notice value) {
      if (noticeInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        noticeInfos_ = value;
        onChanged();
      } else {
        noticeInfosBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public Builder setNoticeInfos(
        pb4client.Notice.Builder builderForValue) {
      if (noticeInfosBuilder_ == null) {
        noticeInfos_ = builderForValue.build();
        onChanged();
      } else {
        noticeInfosBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public Builder mergeNoticeInfos(pb4client.Notice value) {
      if (noticeInfosBuilder_ == null) {
        if (noticeInfos_ != null) {
          noticeInfos_ =
            pb4client.Notice.newBuilder(noticeInfos_).mergeFrom(value).buildPartial();
        } else {
          noticeInfos_ = value;
        }
        onChanged();
      } else {
        noticeInfosBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public Builder clearNoticeInfos() {
      if (noticeInfosBuilder_ == null) {
        noticeInfos_ = null;
        onChanged();
      } else {
        noticeInfos_ = null;
        noticeInfosBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public pb4client.Notice.Builder getNoticeInfosBuilder() {
      
      onChanged();
      return getNoticeInfosFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    public pb4client.NoticeOrBuilder getNoticeInfosOrBuilder() {
      if (noticeInfosBuilder_ != null) {
        return noticeInfosBuilder_.getMessageOrBuilder();
      } else {
        return noticeInfos_ == null ?
            pb4client.Notice.getDefaultInstance() : noticeInfos_;
      }
    }
    /**
     * <pre>
     *公告内容
     * </pre>
     *
     * <code>.client2server.Notice noticeInfos = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4client.Notice, pb4client.Notice.Builder, pb4client.NoticeOrBuilder> 
        getNoticeInfosFieldBuilder() {
      if (noticeInfosBuilder_ == null) {
        noticeInfosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4client.Notice, pb4client.Notice.Builder, pb4client.NoticeOrBuilder>(
                getNoticeInfos(),
                getParentForChildren(),
                isClean());
        noticeInfos_ = null;
      }
      return noticeInfosBuilder_;
    }

    private int noticeType_ ;
    /**
     * <pre>
     *公告类型（1.屏幕中央 2.聊天框 3.屏幕中央+聊天框）
     * </pre>
     *
     * <code>int32 noticeType = 2;</code>
     */
    public int getNoticeType() {
      return noticeType_;
    }
    /**
     * <pre>
     *公告类型（1.屏幕中央 2.聊天框 3.屏幕中央+聊天框）
     * </pre>
     *
     * <code>int32 noticeType = 2;</code>
     */
    public Builder setNoticeType(int value) {
      
      noticeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *公告类型（1.屏幕中央 2.聊天框 3.屏幕中央+聊天框）
     * </pre>
     *
     * <code>int32 noticeType = 2;</code>
     */
    public Builder clearNoticeType() {
      
      noticeType_ = 0;
      onChanged();
      return this;
    }

    private long toPlayerId_ ;
    /**
     * <pre>
     *推送给玩家的id
     * </pre>
     *
     * <code>int64 toPlayerId = 3;</code>
     */
    public long getToPlayerId() {
      return toPlayerId_;
    }
    /**
     * <pre>
     *推送给玩家的id
     * </pre>
     *
     * <code>int64 toPlayerId = 3;</code>
     */
    public Builder setToPlayerId(long value) {
      
      toPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *推送给玩家的id
     * </pre>
     *
     * <code>int64 toPlayerId = 3;</code>
     */
    public Builder clearToPlayerId() {
      
      toPlayerId_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:pb4server.MarqueeAskReq)
  }

  // @@protoc_insertion_point(class_scope:pb4server.MarqueeAskReq)
  private static final pb4server.MarqueeAskReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4server.MarqueeAskReq();
  }

  public static pb4server.MarqueeAskReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarqueeAskReq>
      PARSER = new com.google.protobuf.AbstractParser<MarqueeAskReq>() {
    public MarqueeAskReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarqueeAskReq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MarqueeAskReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarqueeAskReq> getParserForType() {
    return PARSER;
  }

  public pb4server.MarqueeAskReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

