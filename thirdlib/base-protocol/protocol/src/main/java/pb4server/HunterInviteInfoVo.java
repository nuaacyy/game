// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal2world.proto

package pb4server;

/**
 * <pre>
 *猎杀邀请信息
 * </pre>
 *
 * Protobuf type {@code pb4server.HunterInviteInfoVo}
 */
public  final class HunterInviteInfoVo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pb4server.HunterInviteInfoVo)
    HunterInviteInfoVoOrBuilder {
  // Use HunterInviteInfoVo.newBuilder() to construct.
  private HunterInviteInfoVo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HunterInviteInfoVo() {
    inviteId_ = 0L;
    invitePlayerId_ = 0L;
    bossId_ = 0;
    nowHp_ = 0;
    haveHunterNum_ = 0;
    pltAreaNo_ = 0L;
    posX_ = 0;
    posY_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private HunterInviteInfoVo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            inviteId_ = input.readInt64();
            break;
          }
          case 16: {

            invitePlayerId_ = input.readInt64();
            break;
          }
          case 24: {

            bossId_ = input.readInt32();
            break;
          }
          case 32: {

            nowHp_ = input.readInt32();
            break;
          }
          case 40: {

            haveHunterNum_ = input.readInt32();
            break;
          }
          case 48: {

            pltAreaNo_ = input.readInt64();
            break;
          }
          case 56: {

            posX_ = input.readInt32();
            break;
          }
          case 64: {

            posY_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4server.InternalWkt.internal_static_pb4server_HunterInviteInfoVo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4server.InternalWkt.internal_static_pb4server_HunterInviteInfoVo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4server.HunterInviteInfoVo.class, pb4server.HunterInviteInfoVo.Builder.class);
  }

  public static final int INVITEID_FIELD_NUMBER = 1;
  private long inviteId_;
  /**
   * <pre>
   *邀请Id
   * </pre>
   *
   * <code>int64 inviteId = 1;</code>
   */
  public long getInviteId() {
    return inviteId_;
  }

  public static final int INVITEPLAYERID_FIELD_NUMBER = 2;
  private long invitePlayerId_;
  /**
   * <pre>
   *邀请者Id
   * </pre>
   *
   * <code>int64 invitePlayerId = 2;</code>
   */
  public long getInvitePlayerId() {
    return invitePlayerId_;
  }

  public static final int BOSSID_FIELD_NUMBER = 3;
  private int bossId_;
  /**
   * <pre>
   *魔物配置Id
   * </pre>
   *
   * <code>int32 bossId = 3;</code>
   */
  public int getBossId() {
    return bossId_;
  }

  public static final int NOWHP_FIELD_NUMBER = 4;
  private int nowHp_;
  /**
   * <pre>
   *当前血量
   * </pre>
   *
   * <code>int32 nowHp = 4;</code>
   */
  public int getNowHp() {
    return nowHp_;
  }

  public static final int HAVEHUNTERNUM_FIELD_NUMBER = 5;
  private int haveHunterNum_;
  /**
   * <pre>
   *已猎杀的同盟人数
   * </pre>
   *
   * <code>int32 haveHunterNum = 5;</code>
   */
  public int getHaveHunterNum() {
    return haveHunterNum_;
  }

  public static final int PLTAREANO_FIELD_NUMBER = 6;
  private long pltAreaNo_;
  /**
   * <pre>
   *区服Id
   * </pre>
   *
   * <code>int64 pltAreaNo = 6;</code>
   */
  public long getPltAreaNo() {
    return pltAreaNo_;
  }

  public static final int POSX_FIELD_NUMBER = 7;
  private int posX_;
  /**
   * <pre>
   *坐标x
   * </pre>
   *
   * <code>int32 posX = 7;</code>
   */
  public int getPosX() {
    return posX_;
  }

  public static final int POSY_FIELD_NUMBER = 8;
  private int posY_;
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>int32 posY = 8;</code>
   */
  public int getPosY() {
    return posY_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inviteId_ != 0L) {
      output.writeInt64(1, inviteId_);
    }
    if (invitePlayerId_ != 0L) {
      output.writeInt64(2, invitePlayerId_);
    }
    if (bossId_ != 0) {
      output.writeInt32(3, bossId_);
    }
    if (nowHp_ != 0) {
      output.writeInt32(4, nowHp_);
    }
    if (haveHunterNum_ != 0) {
      output.writeInt32(5, haveHunterNum_);
    }
    if (pltAreaNo_ != 0L) {
      output.writeInt64(6, pltAreaNo_);
    }
    if (posX_ != 0) {
      output.writeInt32(7, posX_);
    }
    if (posY_ != 0) {
      output.writeInt32(8, posY_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (inviteId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, inviteId_);
    }
    if (invitePlayerId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, invitePlayerId_);
    }
    if (bossId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, bossId_);
    }
    if (nowHp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, nowHp_);
    }
    if (haveHunterNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, haveHunterNum_);
    }
    if (pltAreaNo_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, pltAreaNo_);
    }
    if (posX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, posX_);
    }
    if (posY_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, posY_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4server.HunterInviteInfoVo)) {
      return super.equals(obj);
    }
    pb4server.HunterInviteInfoVo other = (pb4server.HunterInviteInfoVo) obj;

    boolean result = true;
    result = result && (getInviteId()
        == other.getInviteId());
    result = result && (getInvitePlayerId()
        == other.getInvitePlayerId());
    result = result && (getBossId()
        == other.getBossId());
    result = result && (getNowHp()
        == other.getNowHp());
    result = result && (getHaveHunterNum()
        == other.getHaveHunterNum());
    result = result && (getPltAreaNo()
        == other.getPltAreaNo());
    result = result && (getPosX()
        == other.getPosX());
    result = result && (getPosY()
        == other.getPosY());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INVITEID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInviteId());
    hash = (37 * hash) + INVITEPLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInvitePlayerId());
    hash = (37 * hash) + BOSSID_FIELD_NUMBER;
    hash = (53 * hash) + getBossId();
    hash = (37 * hash) + NOWHP_FIELD_NUMBER;
    hash = (53 * hash) + getNowHp();
    hash = (37 * hash) + HAVEHUNTERNUM_FIELD_NUMBER;
    hash = (53 * hash) + getHaveHunterNum();
    hash = (37 * hash) + PLTAREANO_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPltAreaNo());
    hash = (37 * hash) + POSX_FIELD_NUMBER;
    hash = (53 * hash) + getPosX();
    hash = (37 * hash) + POSY_FIELD_NUMBER;
    hash = (53 * hash) + getPosY();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4server.HunterInviteInfoVo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.HunterInviteInfoVo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4server.HunterInviteInfoVo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.HunterInviteInfoVo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4server.HunterInviteInfoVo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * Protobuf type {@code pb4server.HunterInviteInfoVo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pb4server.HunterInviteInfoVo)
      pb4server.HunterInviteInfoVoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4server.InternalWkt.internal_static_pb4server_HunterInviteInfoVo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4server.InternalWkt.internal_static_pb4server_HunterInviteInfoVo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4server.HunterInviteInfoVo.class, pb4server.HunterInviteInfoVo.Builder.class);
    }

    // Construct using pb4server.HunterInviteInfoVo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      inviteId_ = 0L;

      invitePlayerId_ = 0L;

      bossId_ = 0;

      nowHp_ = 0;

      haveHunterNum_ = 0;

      pltAreaNo_ = 0L;

      posX_ = 0;

      posY_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4server.InternalWkt.internal_static_pb4server_HunterInviteInfoVo_descriptor;
    }

    public pb4server.HunterInviteInfoVo getDefaultInstanceForType() {
      return pb4server.HunterInviteInfoVo.getDefaultInstance();
    }

    public pb4server.HunterInviteInfoVo build() {
      pb4server.HunterInviteInfoVo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4server.HunterInviteInfoVo buildPartial() {
      pb4server.HunterInviteInfoVo result = new pb4server.HunterInviteInfoVo(this);
      result.inviteId_ = inviteId_;
      result.invitePlayerId_ = invitePlayerId_;
      result.bossId_ = bossId_;
      result.nowHp_ = nowHp_;
      result.haveHunterNum_ = haveHunterNum_;
      result.pltAreaNo_ = pltAreaNo_;
      result.posX_ = posX_;
      result.posY_ = posY_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4server.HunterInviteInfoVo) {
        return mergeFrom((pb4server.HunterInviteInfoVo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4server.HunterInviteInfoVo other) {
      if (other == pb4server.HunterInviteInfoVo.getDefaultInstance()) return this;
      if (other.getInviteId() != 0L) {
        setInviteId(other.getInviteId());
      }
      if (other.getInvitePlayerId() != 0L) {
        setInvitePlayerId(other.getInvitePlayerId());
      }
      if (other.getBossId() != 0) {
        setBossId(other.getBossId());
      }
      if (other.getNowHp() != 0) {
        setNowHp(other.getNowHp());
      }
      if (other.getHaveHunterNum() != 0) {
        setHaveHunterNum(other.getHaveHunterNum());
      }
      if (other.getPltAreaNo() != 0L) {
        setPltAreaNo(other.getPltAreaNo());
      }
      if (other.getPosX() != 0) {
        setPosX(other.getPosX());
      }
      if (other.getPosY() != 0) {
        setPosY(other.getPosY());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4server.HunterInviteInfoVo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4server.HunterInviteInfoVo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long inviteId_ ;
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>int64 inviteId = 1;</code>
     */
    public long getInviteId() {
      return inviteId_;
    }
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>int64 inviteId = 1;</code>
     */
    public Builder setInviteId(long value) {
      
      inviteId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *邀请Id
     * </pre>
     *
     * <code>int64 inviteId = 1;</code>
     */
    public Builder clearInviteId() {
      
      inviteId_ = 0L;
      onChanged();
      return this;
    }

    private long invitePlayerId_ ;
    /**
     * <pre>
     *邀请者Id
     * </pre>
     *
     * <code>int64 invitePlayerId = 2;</code>
     */
    public long getInvitePlayerId() {
      return invitePlayerId_;
    }
    /**
     * <pre>
     *邀请者Id
     * </pre>
     *
     * <code>int64 invitePlayerId = 2;</code>
     */
    public Builder setInvitePlayerId(long value) {
      
      invitePlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *邀请者Id
     * </pre>
     *
     * <code>int64 invitePlayerId = 2;</code>
     */
    public Builder clearInvitePlayerId() {
      
      invitePlayerId_ = 0L;
      onChanged();
      return this;
    }

    private int bossId_ ;
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>int32 bossId = 3;</code>
     */
    public int getBossId() {
      return bossId_;
    }
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>int32 bossId = 3;</code>
     */
    public Builder setBossId(int value) {
      
      bossId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *魔物配置Id
     * </pre>
     *
     * <code>int32 bossId = 3;</code>
     */
    public Builder clearBossId() {
      
      bossId_ = 0;
      onChanged();
      return this;
    }

    private int nowHp_ ;
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>int32 nowHp = 4;</code>
     */
    public int getNowHp() {
      return nowHp_;
    }
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>int32 nowHp = 4;</code>
     */
    public Builder setNowHp(int value) {
      
      nowHp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前血量
     * </pre>
     *
     * <code>int32 nowHp = 4;</code>
     */
    public Builder clearNowHp() {
      
      nowHp_ = 0;
      onChanged();
      return this;
    }

    private int haveHunterNum_ ;
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>int32 haveHunterNum = 5;</code>
     */
    public int getHaveHunterNum() {
      return haveHunterNum_;
    }
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>int32 haveHunterNum = 5;</code>
     */
    public Builder setHaveHunterNum(int value) {
      
      haveHunterNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *已猎杀的同盟人数
     * </pre>
     *
     * <code>int32 haveHunterNum = 5;</code>
     */
    public Builder clearHaveHunterNum() {
      
      haveHunterNum_ = 0;
      onChanged();
      return this;
    }

    private long pltAreaNo_ ;
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>int64 pltAreaNo = 6;</code>
     */
    public long getPltAreaNo() {
      return pltAreaNo_;
    }
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>int64 pltAreaNo = 6;</code>
     */
    public Builder setPltAreaNo(long value) {
      
      pltAreaNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *区服Id
     * </pre>
     *
     * <code>int64 pltAreaNo = 6;</code>
     */
    public Builder clearPltAreaNo() {
      
      pltAreaNo_ = 0L;
      onChanged();
      return this;
    }

    private int posX_ ;
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>int32 posX = 7;</code>
     */
    public int getPosX() {
      return posX_;
    }
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>int32 posX = 7;</code>
     */
    public Builder setPosX(int value) {
      
      posX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标x
     * </pre>
     *
     * <code>int32 posX = 7;</code>
     */
    public Builder clearPosX() {
      
      posX_ = 0;
      onChanged();
      return this;
    }

    private int posY_ ;
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 posY = 8;</code>
     */
    public int getPosY() {
      return posY_;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 posY = 8;</code>
     */
    public Builder setPosY(int value) {
      
      posY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 posY = 8;</code>
     */
    public Builder clearPosY() {
      
      posY_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:pb4server.HunterInviteInfoVo)
  }

  // @@protoc_insertion_point(class_scope:pb4server.HunterInviteInfoVo)
  private static final pb4server.HunterInviteInfoVo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4server.HunterInviteInfoVo();
  }

  public static pb4server.HunterInviteInfoVo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HunterInviteInfoVo>
      PARSER = new com.google.protobuf.AbstractParser<HunterInviteInfoVo>() {
    public HunterInviteInfoVo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new HunterInviteInfoVo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HunterInviteInfoVo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HunterInviteInfoVo> getParserForType() {
    return PARSER;
  }

  public pb4server.HunterInviteInfoVo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

