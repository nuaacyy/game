// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal2world.proto

package pb4server;

/**
 * <pre>
 * 竞技场对手和前十名的查询
 * </pre>
 *
 * Protobuf type {@code pb4server.JjcInfoQueryAskReq}
 */
public  final class JjcInfoQueryAskReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pb4server.JjcInfoQueryAskReq)
    JjcInfoQueryAskReqOrBuilder {
  // Use JjcInfoQueryAskReq.newBuilder() to construct.
  private JjcInfoQueryAskReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JjcInfoQueryAskReq() {
    scoreRewards_ = java.util.Collections.emptyList();
    drawRewards_ = java.util.Collections.emptyList();
    achievementRewards_ = java.util.Collections.emptyList();
    todayNum_ = 0;
    todayBuyCountNum_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private JjcInfoQueryAskReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              scoreRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            scoreRewards_.add(input.readInt32());
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
              scoreRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              scoreRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000002;
            }
            drawRewards_.add(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              drawRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              drawRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              achievementRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            achievementRewards_.add(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              achievementRewards_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              achievementRewards_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {

            todayNum_ = input.readInt32();
            break;
          }
          case 40: {

            todayBuyCountNum_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        scoreRewards_ = java.util.Collections.unmodifiableList(scoreRewards_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        achievementRewards_ = java.util.Collections.unmodifiableList(achievementRewards_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4server.InternalWkt.internal_static_pb4server_JjcInfoQueryAskReq_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4server.InternalWkt.internal_static_pb4server_JjcInfoQueryAskReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4server.JjcInfoQueryAskReq.class, pb4server.JjcInfoQueryAskReq.Builder.class);
  }

  private int bitField0_;
  public static final int SCOREREWARDS_FIELD_NUMBER = 1;
  private java.util.List<java.lang.Integer> scoreRewards_;
  /**
   * <pre>
   * 本日已领取的积分奖励模版ID
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 1;</code>
   */
  public java.util.List<java.lang.Integer>
      getScoreRewardsList() {
    return scoreRewards_;
  }
  /**
   * <pre>
   * 本日已领取的积分奖励模版ID
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 1;</code>
   */
  public int getScoreRewardsCount() {
    return scoreRewards_.size();
  }
  /**
   * <pre>
   * 本日已领取的积分奖励模版ID
   * </pre>
   *
   * <code>repeated int32 scoreRewards = 1;</code>
   */
  public int getScoreRewards(int index) {
    return scoreRewards_.get(index);
  }
  private int scoreRewardsMemoizedSerializedSize = -1;

  public static final int DRAWREWARDS_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Integer> drawRewards_;
  /**
   * <pre>
   * 已领取的竞技场奖励模版ID（历史最高排名奖励）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 2;</code>
   */
  public java.util.List<java.lang.Integer>
      getDrawRewardsList() {
    return drawRewards_;
  }
  /**
   * <pre>
   * 已领取的竞技场奖励模版ID（历史最高排名奖励）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 2;</code>
   */
  public int getDrawRewardsCount() {
    return drawRewards_.size();
  }
  /**
   * <pre>
   * 已领取的竞技场奖励模版ID（历史最高排名奖励）
   * </pre>
   *
   * <code>repeated int32 drawRewards = 2;</code>
   */
  public int getDrawRewards(int index) {
    return drawRewards_.get(index);
  }
  private int drawRewardsMemoizedSerializedSize = -1;

  public static final int ACHIEVEMENTREWARDS_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> achievementRewards_;
  /**
   * <pre>
   * 成就兑换
   * </pre>
   *
   * <code>repeated int32 achievementRewards = 3;</code>
   */
  public java.util.List<java.lang.Integer>
      getAchievementRewardsList() {
    return achievementRewards_;
  }
  /**
   * <pre>
   * 成就兑换
   * </pre>
   *
   * <code>repeated int32 achievementRewards = 3;</code>
   */
  public int getAchievementRewardsCount() {
    return achievementRewards_.size();
  }
  /**
   * <pre>
   * 成就兑换
   * </pre>
   *
   * <code>repeated int32 achievementRewards = 3;</code>
   */
  public int getAchievementRewards(int index) {
    return achievementRewards_.get(index);
  }
  private int achievementRewardsMemoizedSerializedSize = -1;

  public static final int TODAYNUM_FIELD_NUMBER = 4;
  private int todayNum_;
  /**
   * <pre>
   * 今天剩余的竞技场
   * </pre>
   *
   * <code>int32 todayNum = 4;</code>
   */
  public int getTodayNum() {
    return todayNum_;
  }

  public static final int TODAYBUYCOUNTNUM_FIELD_NUMBER = 5;
  private int todayBuyCountNum_;
  /**
   * <pre>
   * 今天买了多少轮挑战机会
   * </pre>
   *
   * <code>int32 todayBuyCountNum = 5;</code>
   */
  public int getTodayBuyCountNum() {
    return todayBuyCountNum_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getScoreRewardsList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(scoreRewardsMemoizedSerializedSize);
    }
    for (int i = 0; i < scoreRewards_.size(); i++) {
      output.writeInt32NoTag(scoreRewards_.get(i));
    }
    if (getDrawRewardsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(drawRewardsMemoizedSerializedSize);
    }
    for (int i = 0; i < drawRewards_.size(); i++) {
      output.writeInt32NoTag(drawRewards_.get(i));
    }
    if (getAchievementRewardsList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(achievementRewardsMemoizedSerializedSize);
    }
    for (int i = 0; i < achievementRewards_.size(); i++) {
      output.writeInt32NoTag(achievementRewards_.get(i));
    }
    if (todayNum_ != 0) {
      output.writeInt32(4, todayNum_);
    }
    if (todayBuyCountNum_ != 0) {
      output.writeInt32(5, todayBuyCountNum_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < scoreRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(scoreRewards_.get(i));
      }
      size += dataSize;
      if (!getScoreRewardsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      scoreRewardsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < drawRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(drawRewards_.get(i));
      }
      size += dataSize;
      if (!getDrawRewardsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      drawRewardsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < achievementRewards_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(achievementRewards_.get(i));
      }
      size += dataSize;
      if (!getAchievementRewardsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      achievementRewardsMemoizedSerializedSize = dataSize;
    }
    if (todayNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, todayNum_);
    }
    if (todayBuyCountNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, todayBuyCountNum_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4server.JjcInfoQueryAskReq)) {
      return super.equals(obj);
    }
    pb4server.JjcInfoQueryAskReq other = (pb4server.JjcInfoQueryAskReq) obj;

    boolean result = true;
    result = result && getScoreRewardsList()
        .equals(other.getScoreRewardsList());
    result = result && getDrawRewardsList()
        .equals(other.getDrawRewardsList());
    result = result && getAchievementRewardsList()
        .equals(other.getAchievementRewardsList());
    result = result && (getTodayNum()
        == other.getTodayNum());
    result = result && (getTodayBuyCountNum()
        == other.getTodayBuyCountNum());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getScoreRewardsCount() > 0) {
      hash = (37 * hash) + SCOREREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getScoreRewardsList().hashCode();
    }
    if (getDrawRewardsCount() > 0) {
      hash = (37 * hash) + DRAWREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getDrawRewardsList().hashCode();
    }
    if (getAchievementRewardsCount() > 0) {
      hash = (37 * hash) + ACHIEVEMENTREWARDS_FIELD_NUMBER;
      hash = (53 * hash) + getAchievementRewardsList().hashCode();
    }
    hash = (37 * hash) + TODAYNUM_FIELD_NUMBER;
    hash = (53 * hash) + getTodayNum();
    hash = (37 * hash) + TODAYBUYCOUNTNUM_FIELD_NUMBER;
    hash = (53 * hash) + getTodayBuyCountNum();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4server.JjcInfoQueryAskReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.JjcInfoQueryAskReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4server.JjcInfoQueryAskReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.JjcInfoQueryAskReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4server.JjcInfoQueryAskReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 竞技场对手和前十名的查询
   * </pre>
   *
   * Protobuf type {@code pb4server.JjcInfoQueryAskReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pb4server.JjcInfoQueryAskReq)
      pb4server.JjcInfoQueryAskReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4server.InternalWkt.internal_static_pb4server_JjcInfoQueryAskReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4server.InternalWkt.internal_static_pb4server_JjcInfoQueryAskReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4server.JjcInfoQueryAskReq.class, pb4server.JjcInfoQueryAskReq.Builder.class);
    }

    // Construct using pb4server.JjcInfoQueryAskReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      scoreRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      achievementRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      todayNum_ = 0;

      todayBuyCountNum_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4server.InternalWkt.internal_static_pb4server_JjcInfoQueryAskReq_descriptor;
    }

    public pb4server.JjcInfoQueryAskReq getDefaultInstanceForType() {
      return pb4server.JjcInfoQueryAskReq.getDefaultInstance();
    }

    public pb4server.JjcInfoQueryAskReq build() {
      pb4server.JjcInfoQueryAskReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4server.JjcInfoQueryAskReq buildPartial() {
      pb4server.JjcInfoQueryAskReq result = new pb4server.JjcInfoQueryAskReq(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        scoreRewards_ = java.util.Collections.unmodifiableList(scoreRewards_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.scoreRewards_ = scoreRewards_;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        drawRewards_ = java.util.Collections.unmodifiableList(drawRewards_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.drawRewards_ = drawRewards_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        achievementRewards_ = java.util.Collections.unmodifiableList(achievementRewards_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.achievementRewards_ = achievementRewards_;
      result.todayNum_ = todayNum_;
      result.todayBuyCountNum_ = todayBuyCountNum_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4server.JjcInfoQueryAskReq) {
        return mergeFrom((pb4server.JjcInfoQueryAskReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4server.JjcInfoQueryAskReq other) {
      if (other == pb4server.JjcInfoQueryAskReq.getDefaultInstance()) return this;
      if (!other.scoreRewards_.isEmpty()) {
        if (scoreRewards_.isEmpty()) {
          scoreRewards_ = other.scoreRewards_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureScoreRewardsIsMutable();
          scoreRewards_.addAll(other.scoreRewards_);
        }
        onChanged();
      }
      if (!other.drawRewards_.isEmpty()) {
        if (drawRewards_.isEmpty()) {
          drawRewards_ = other.drawRewards_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDrawRewardsIsMutable();
          drawRewards_.addAll(other.drawRewards_);
        }
        onChanged();
      }
      if (!other.achievementRewards_.isEmpty()) {
        if (achievementRewards_.isEmpty()) {
          achievementRewards_ = other.achievementRewards_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureAchievementRewardsIsMutable();
          achievementRewards_.addAll(other.achievementRewards_);
        }
        onChanged();
      }
      if (other.getTodayNum() != 0) {
        setTodayNum(other.getTodayNum());
      }
      if (other.getTodayBuyCountNum() != 0) {
        setTodayBuyCountNum(other.getTodayBuyCountNum());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4server.JjcInfoQueryAskReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4server.JjcInfoQueryAskReq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<java.lang.Integer> scoreRewards_ = java.util.Collections.emptyList();
    private void ensureScoreRewardsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        scoreRewards_ = new java.util.ArrayList<java.lang.Integer>(scoreRewards_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getScoreRewardsList() {
      return java.util.Collections.unmodifiableList(scoreRewards_);
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public int getScoreRewardsCount() {
      return scoreRewards_.size();
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public int getScoreRewards(int index) {
      return scoreRewards_.get(index);
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public Builder setScoreRewards(
        int index, int value) {
      ensureScoreRewardsIsMutable();
      scoreRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public Builder addScoreRewards(int value) {
      ensureScoreRewardsIsMutable();
      scoreRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public Builder addAllScoreRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureScoreRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, scoreRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日已领取的积分奖励模版ID
     * </pre>
     *
     * <code>repeated int32 scoreRewards = 1;</code>
     */
    public Builder clearScoreRewards() {
      scoreRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> drawRewards_ = java.util.Collections.emptyList();
    private void ensureDrawRewardsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        drawRewards_ = new java.util.ArrayList<java.lang.Integer>(drawRewards_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getDrawRewardsList() {
      return java.util.Collections.unmodifiableList(drawRewards_);
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public int getDrawRewardsCount() {
      return drawRewards_.size();
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public int getDrawRewards(int index) {
      return drawRewards_.get(index);
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public Builder setDrawRewards(
        int index, int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public Builder addDrawRewards(int value) {
      ensureDrawRewardsIsMutable();
      drawRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public Builder addAllDrawRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDrawRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, drawRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 已领取的竞技场奖励模版ID（历史最高排名奖励）
     * </pre>
     *
     * <code>repeated int32 drawRewards = 2;</code>
     */
    public Builder clearDrawRewards() {
      drawRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> achievementRewards_ = java.util.Collections.emptyList();
    private void ensureAchievementRewardsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        achievementRewards_ = new java.util.ArrayList<java.lang.Integer>(achievementRewards_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getAchievementRewardsList() {
      return java.util.Collections.unmodifiableList(achievementRewards_);
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public int getAchievementRewardsCount() {
      return achievementRewards_.size();
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public int getAchievementRewards(int index) {
      return achievementRewards_.get(index);
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public Builder setAchievementRewards(
        int index, int value) {
      ensureAchievementRewardsIsMutable();
      achievementRewards_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public Builder addAchievementRewards(int value) {
      ensureAchievementRewardsIsMutable();
      achievementRewards_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public Builder addAllAchievementRewards(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAchievementRewardsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, achievementRewards_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 成就兑换
     * </pre>
     *
     * <code>repeated int32 achievementRewards = 3;</code>
     */
    public Builder clearAchievementRewards() {
      achievementRewards_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private int todayNum_ ;
    /**
     * <pre>
     * 今天剩余的竞技场
     * </pre>
     *
     * <code>int32 todayNum = 4;</code>
     */
    public int getTodayNum() {
      return todayNum_;
    }
    /**
     * <pre>
     * 今天剩余的竞技场
     * </pre>
     *
     * <code>int32 todayNum = 4;</code>
     */
    public Builder setTodayNum(int value) {
      
      todayNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 今天剩余的竞技场
     * </pre>
     *
     * <code>int32 todayNum = 4;</code>
     */
    public Builder clearTodayNum() {
      
      todayNum_ = 0;
      onChanged();
      return this;
    }

    private int todayBuyCountNum_ ;
    /**
     * <pre>
     * 今天买了多少轮挑战机会
     * </pre>
     *
     * <code>int32 todayBuyCountNum = 5;</code>
     */
    public int getTodayBuyCountNum() {
      return todayBuyCountNum_;
    }
    /**
     * <pre>
     * 今天买了多少轮挑战机会
     * </pre>
     *
     * <code>int32 todayBuyCountNum = 5;</code>
     */
    public Builder setTodayBuyCountNum(int value) {
      
      todayBuyCountNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 今天买了多少轮挑战机会
     * </pre>
     *
     * <code>int32 todayBuyCountNum = 5;</code>
     */
    public Builder clearTodayBuyCountNum() {
      
      todayBuyCountNum_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:pb4server.JjcInfoQueryAskReq)
  }

  // @@protoc_insertion_point(class_scope:pb4server.JjcInfoQueryAskReq)
  private static final pb4server.JjcInfoQueryAskReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4server.JjcInfoQueryAskReq();
  }

  public static pb4server.JjcInfoQueryAskReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<JjcInfoQueryAskReq>
      PARSER = new com.google.protobuf.AbstractParser<JjcInfoQueryAskReq>() {
    public JjcInfoQueryAskReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new JjcInfoQueryAskReq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JjcInfoQueryAskReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JjcInfoQueryAskReq> getParserForType() {
    return PARSER;
  }

  public pb4server.JjcInfoQueryAskReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

