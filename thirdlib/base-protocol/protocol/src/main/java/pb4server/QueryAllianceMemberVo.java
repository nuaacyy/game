// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal2public.proto

package pb4server;

/**
 * Protobuf type {@code pb4server.QueryAllianceMemberVo}
 */
public  final class QueryAllianceMemberVo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pb4server.QueryAllianceMemberVo)
    QueryAllianceMemberVoOrBuilder {
  // Use QueryAllianceMemberVo.newBuilder() to construct.
  private QueryAllianceMemberVo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private QueryAllianceMemberVo() {
    id_ = 0L;
    name_ = "";
    photoProtoId_ = 0;
    ctrbtTotal_ = 0L;
    ctrbtWeek_ = 0L;
    powerValue_ = 0L;
    landX_ = 0;
    landY_ = 0;
    fightValue_ = 0;
    isOnline_ = 0;
    positions_ = java.util.Collections.emptyList();
    tsLandX_ = 0;
    tsLandY_ = 0;
    occupiedFlag_ = 0;
    makeOverTime_ = 0L;
    nickName_ = "";
    lastOffTime_ = 0L;
    mapAreaNo_ = 0;
    monsterScore_ = 0;
    lastGetMonsterScore_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private QueryAllianceMemberVo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            id_ = input.readInt64();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 24: {

            photoProtoId_ = input.readInt32();
            break;
          }
          case 32: {

            ctrbtTotal_ = input.readInt64();
            break;
          }
          case 40: {

            ctrbtWeek_ = input.readInt64();
            break;
          }
          case 48: {

            powerValue_ = input.readInt64();
            break;
          }
          case 56: {

            landX_ = input.readInt32();
            break;
          }
          case 64: {

            landY_ = input.readInt32();
            break;
          }
          case 72: {

            fightValue_ = input.readInt32();
            break;
          }
          case 80: {

            isOnline_ = input.readInt32();
            break;
          }
          case 88: {
            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000400;
            }
            positions_.add(input.readInt32());
            break;
          }
          case 90: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
              positions_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000400;
            }
            while (input.getBytesUntilLimit() > 0) {
              positions_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 96: {

            tsLandX_ = input.readInt32();
            break;
          }
          case 104: {

            tsLandY_ = input.readInt32();
            break;
          }
          case 112: {

            occupiedFlag_ = input.readInt32();
            break;
          }
          case 120: {

            makeOverTime_ = input.readInt64();
            break;
          }
          case 130: {
            java.lang.String s = input.readStringRequireUtf8();

            nickName_ = s;
            break;
          }
          case 136: {

            lastOffTime_ = input.readInt64();
            break;
          }
          case 144: {

            mapAreaNo_ = input.readInt32();
            break;
          }
          case 152: {

            monsterScore_ = input.readInt32();
            break;
          }
          case 160: {

            lastGetMonsterScore_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4server.InternalPkt.internal_static_pb4server_QueryAllianceMemberVo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4server.InternalPkt.internal_static_pb4server_QueryAllianceMemberVo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4server.QueryAllianceMemberVo.class, pb4server.QueryAllianceMemberVo.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   *玩家ID
   * </pre>
   *
   * <code>int64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   *玩家名称
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *玩家名称
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PHOTOPROTOID_FIELD_NUMBER = 3;
  private int photoProtoId_;
  /**
   * <pre>
   *头像模版ID
   * </pre>
   *
   * <code>int32 photoProtoId = 3;</code>
   */
  public int getPhotoProtoId() {
    return photoProtoId_;
  }

  public static final int CTRBTTOTAL_FIELD_NUMBER = 4;
  private long ctrbtTotal_;
  /**
   * <pre>
   *总贡献
   * </pre>
   *
   * <code>int64 ctrbtTotal = 4;</code>
   */
  public long getCtrbtTotal() {
    return ctrbtTotal_;
  }

  public static final int CTRBTWEEK_FIELD_NUMBER = 5;
  private long ctrbtWeek_;
  /**
   * <pre>
   *本周贡献
   * </pre>
   *
   * <code>int64 ctrbtWeek = 5;</code>
   */
  public long getCtrbtWeek() {
    return ctrbtWeek_;
  }

  public static final int POWERVALUE_FIELD_NUMBER = 6;
  private long powerValue_;
  /**
   * <pre>
   *势力值
   * </pre>
   *
   * <code>int64 powerValue = 6;</code>
   */
  public long getPowerValue() {
    return powerValue_;
  }

  public static final int LANDX_FIELD_NUMBER = 7;
  private int landX_;
  /**
   * <pre>
   *坐标X
   * </pre>
   *
   * <code>int32 landX = 7;</code>
   */
  public int getLandX() {
    return landX_;
  }

  public static final int LANDY_FIELD_NUMBER = 8;
  private int landY_;
  /**
   * <pre>
   *坐标Y
   * </pre>
   *
   * <code>int32 landY = 8;</code>
   */
  public int getLandY() {
    return landY_;
  }

  public static final int FIGHTVALUE_FIELD_NUMBER = 9;
  private int fightValue_;
  /**
   * <pre>
   *所有部队总战斗力
   * </pre>
   *
   * <code>int32 fightValue = 9;</code>
   */
  public int getFightValue() {
    return fightValue_;
  }

  public static final int ISONLINE_FIELD_NUMBER = 10;
  private int isOnline_;
  /**
   * <pre>
   *玩家是否在线：0-不在线；1-在线
   * </pre>
   *
   * <code>int32 isOnline = 10;</code>
   */
  public int getIsOnline() {
    return isOnline_;
  }

  public static final int POSITIONS_FIELD_NUMBER = 11;
  private java.util.List<java.lang.Integer> positions_;
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 11;</code>
   */
  public java.util.List<java.lang.Integer>
      getPositionsList() {
    return positions_;
  }
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 11;</code>
   */
  public int getPositionsCount() {
    return positions_.size();
  }
  /**
   * <pre>
   *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
   * </pre>
   *
   * <code>repeated int32 positions = 11;</code>
   */
  public int getPositions(int index) {
    return positions_.get(index);
  }
  private int positionsMemoizedSerializedSize = -1;

  public static final int TSLANDX_FIELD_NUMBER = 12;
  private int tsLandX_;
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标X
   * </pre>
   *
   * <code>int32 tsLandX = 12;</code>
   */
  public int getTsLandX() {
    return tsLandX_;
  }

  public static final int TSLANDY_FIELD_NUMBER = 13;
  private int tsLandY_;
  /**
   * <pre>
   *如果是某个郡城的守，值为郡城的坐标Y
   * </pre>
   *
   * <code>int32 tsLandY = 13;</code>
   */
  public int getTsLandY() {
    return tsLandY_;
  }

  public static final int OCCUPIEDFLAG_FIELD_NUMBER = 14;
  private int occupiedFlag_;
  /**
   * <pre>
   *是否沦陷标志位：1-沦陷；0-没有沦陷
   * </pre>
   *
   * <code>int32 occupiedFlag = 14;</code>
   */
  public int getOccupiedFlag() {
    return occupiedFlag_;
  }

  public static final int MAKEOVERTIME_FIELD_NUMBER = 15;
  private long makeOverTime_;
  /**
   * <pre>
   *如果是盟主会有执行盟主转让操作的时间戳
   * </pre>
   *
   * <code>int64 makeOverTime = 15;</code>
   */
  public long getMakeOverTime() {
    return makeOverTime_;
  }

  public static final int NICKNAME_FIELD_NUMBER = 16;
  private volatile java.lang.Object nickName_;
  /**
   * <pre>
   *玩家昵称
   * </pre>
   *
   * <code>string nickName = 16;</code>
   */
  public java.lang.String getNickName() {
    java.lang.Object ref = nickName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nickName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *玩家昵称
   * </pre>
   *
   * <code>string nickName = 16;</code>
   */
  public com.google.protobuf.ByteString
      getNickNameBytes() {
    java.lang.Object ref = nickName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nickName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LASTOFFTIME_FIELD_NUMBER = 17;
  private long lastOffTime_;
  /**
   * <pre>
   * 上次离线时间
   * </pre>
   *
   * <code>int64 lastOffTime = 17;</code>
   */
  public long getLastOffTime() {
    return lastOffTime_;
  }

  public static final int MAPAREANO_FIELD_NUMBER = 18;
  private int mapAreaNo_;
  /**
   * <pre>
   * 玩家所属的服务器编号
   * </pre>
   *
   * <code>int32 mapAreaNo = 18;</code>
   */
  public int getMapAreaNo() {
    return mapAreaNo_;
  }

  public static final int MONSTERSCORE_FIELD_NUMBER = 19;
  private int monsterScore_;
  /**
   * <pre>
   * 本日获得魔物积分
   * </pre>
   *
   * <code>int32 monsterScore = 19;</code>
   */
  public int getMonsterScore() {
    return monsterScore_;
  }

  public static final int LASTGETMONSTERSCORE_FIELD_NUMBER = 20;
  private long lastGetMonsterScore_;
  /**
   * <pre>
   * 上次获得魔物积分时间
   * </pre>
   *
   * <code>int64 lastGetMonsterScore = 20;</code>
   */
  public long getLastGetMonsterScore() {
    return lastGetMonsterScore_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (id_ != 0L) {
      output.writeInt64(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (photoProtoId_ != 0) {
      output.writeInt32(3, photoProtoId_);
    }
    if (ctrbtTotal_ != 0L) {
      output.writeInt64(4, ctrbtTotal_);
    }
    if (ctrbtWeek_ != 0L) {
      output.writeInt64(5, ctrbtWeek_);
    }
    if (powerValue_ != 0L) {
      output.writeInt64(6, powerValue_);
    }
    if (landX_ != 0) {
      output.writeInt32(7, landX_);
    }
    if (landY_ != 0) {
      output.writeInt32(8, landY_);
    }
    if (fightValue_ != 0) {
      output.writeInt32(9, fightValue_);
    }
    if (isOnline_ != 0) {
      output.writeInt32(10, isOnline_);
    }
    if (getPositionsList().size() > 0) {
      output.writeUInt32NoTag(90);
      output.writeUInt32NoTag(positionsMemoizedSerializedSize);
    }
    for (int i = 0; i < positions_.size(); i++) {
      output.writeInt32NoTag(positions_.get(i));
    }
    if (tsLandX_ != 0) {
      output.writeInt32(12, tsLandX_);
    }
    if (tsLandY_ != 0) {
      output.writeInt32(13, tsLandY_);
    }
    if (occupiedFlag_ != 0) {
      output.writeInt32(14, occupiedFlag_);
    }
    if (makeOverTime_ != 0L) {
      output.writeInt64(15, makeOverTime_);
    }
    if (!getNickNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, nickName_);
    }
    if (lastOffTime_ != 0L) {
      output.writeInt64(17, lastOffTime_);
    }
    if (mapAreaNo_ != 0) {
      output.writeInt32(18, mapAreaNo_);
    }
    if (monsterScore_ != 0) {
      output.writeInt32(19, monsterScore_);
    }
    if (lastGetMonsterScore_ != 0L) {
      output.writeInt64(20, lastGetMonsterScore_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (photoProtoId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, photoProtoId_);
    }
    if (ctrbtTotal_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, ctrbtTotal_);
    }
    if (ctrbtWeek_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, ctrbtWeek_);
    }
    if (powerValue_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, powerValue_);
    }
    if (landX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, landX_);
    }
    if (landY_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, landY_);
    }
    if (fightValue_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, fightValue_);
    }
    if (isOnline_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, isOnline_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < positions_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(positions_.get(i));
      }
      size += dataSize;
      if (!getPositionsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      positionsMemoizedSerializedSize = dataSize;
    }
    if (tsLandX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, tsLandX_);
    }
    if (tsLandY_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, tsLandY_);
    }
    if (occupiedFlag_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, occupiedFlag_);
    }
    if (makeOverTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(15, makeOverTime_);
    }
    if (!getNickNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, nickName_);
    }
    if (lastOffTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(17, lastOffTime_);
    }
    if (mapAreaNo_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(18, mapAreaNo_);
    }
    if (monsterScore_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, monsterScore_);
    }
    if (lastGetMonsterScore_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(20, lastGetMonsterScore_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4server.QueryAllianceMemberVo)) {
      return super.equals(obj);
    }
    pb4server.QueryAllianceMemberVo other = (pb4server.QueryAllianceMemberVo) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && getName()
        .equals(other.getName());
    result = result && (getPhotoProtoId()
        == other.getPhotoProtoId());
    result = result && (getCtrbtTotal()
        == other.getCtrbtTotal());
    result = result && (getCtrbtWeek()
        == other.getCtrbtWeek());
    result = result && (getPowerValue()
        == other.getPowerValue());
    result = result && (getLandX()
        == other.getLandX());
    result = result && (getLandY()
        == other.getLandY());
    result = result && (getFightValue()
        == other.getFightValue());
    result = result && (getIsOnline()
        == other.getIsOnline());
    result = result && getPositionsList()
        .equals(other.getPositionsList());
    result = result && (getTsLandX()
        == other.getTsLandX());
    result = result && (getTsLandY()
        == other.getTsLandY());
    result = result && (getOccupiedFlag()
        == other.getOccupiedFlag());
    result = result && (getMakeOverTime()
        == other.getMakeOverTime());
    result = result && getNickName()
        .equals(other.getNickName());
    result = result && (getLastOffTime()
        == other.getLastOffTime());
    result = result && (getMapAreaNo()
        == other.getMapAreaNo());
    result = result && (getMonsterScore()
        == other.getMonsterScore());
    result = result && (getLastGetMonsterScore()
        == other.getLastGetMonsterScore());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getId());
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + PHOTOPROTOID_FIELD_NUMBER;
    hash = (53 * hash) + getPhotoProtoId();
    hash = (37 * hash) + CTRBTTOTAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCtrbtTotal());
    hash = (37 * hash) + CTRBTWEEK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCtrbtWeek());
    hash = (37 * hash) + POWERVALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPowerValue());
    hash = (37 * hash) + LANDX_FIELD_NUMBER;
    hash = (53 * hash) + getLandX();
    hash = (37 * hash) + LANDY_FIELD_NUMBER;
    hash = (53 * hash) + getLandY();
    hash = (37 * hash) + FIGHTVALUE_FIELD_NUMBER;
    hash = (53 * hash) + getFightValue();
    hash = (37 * hash) + ISONLINE_FIELD_NUMBER;
    hash = (53 * hash) + getIsOnline();
    if (getPositionsCount() > 0) {
      hash = (37 * hash) + POSITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPositionsList().hashCode();
    }
    hash = (37 * hash) + TSLANDX_FIELD_NUMBER;
    hash = (53 * hash) + getTsLandX();
    hash = (37 * hash) + TSLANDY_FIELD_NUMBER;
    hash = (53 * hash) + getTsLandY();
    hash = (37 * hash) + OCCUPIEDFLAG_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedFlag();
    hash = (37 * hash) + MAKEOVERTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMakeOverTime());
    hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
    hash = (53 * hash) + getNickName().hashCode();
    hash = (37 * hash) + LASTOFFTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastOffTime());
    hash = (37 * hash) + MAPAREANO_FIELD_NUMBER;
    hash = (53 * hash) + getMapAreaNo();
    hash = (37 * hash) + MONSTERSCORE_FIELD_NUMBER;
    hash = (53 * hash) + getMonsterScore();
    hash = (37 * hash) + LASTGETMONSTERSCORE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastGetMonsterScore());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4server.QueryAllianceMemberVo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.QueryAllianceMemberVo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4server.QueryAllianceMemberVo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.QueryAllianceMemberVo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4server.QueryAllianceMemberVo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pb4server.QueryAllianceMemberVo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pb4server.QueryAllianceMemberVo)
      pb4server.QueryAllianceMemberVoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4server.InternalPkt.internal_static_pb4server_QueryAllianceMemberVo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4server.InternalPkt.internal_static_pb4server_QueryAllianceMemberVo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4server.QueryAllianceMemberVo.class, pb4server.QueryAllianceMemberVo.Builder.class);
    }

    // Construct using pb4server.QueryAllianceMemberVo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;

      name_ = "";

      photoProtoId_ = 0;

      ctrbtTotal_ = 0L;

      ctrbtWeek_ = 0L;

      powerValue_ = 0L;

      landX_ = 0;

      landY_ = 0;

      fightValue_ = 0;

      isOnline_ = 0;

      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000400);
      tsLandX_ = 0;

      tsLandY_ = 0;

      occupiedFlag_ = 0;

      makeOverTime_ = 0L;

      nickName_ = "";

      lastOffTime_ = 0L;

      mapAreaNo_ = 0;

      monsterScore_ = 0;

      lastGetMonsterScore_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4server.InternalPkt.internal_static_pb4server_QueryAllianceMemberVo_descriptor;
    }

    public pb4server.QueryAllianceMemberVo getDefaultInstanceForType() {
      return pb4server.QueryAllianceMemberVo.getDefaultInstance();
    }

    public pb4server.QueryAllianceMemberVo build() {
      pb4server.QueryAllianceMemberVo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4server.QueryAllianceMemberVo buildPartial() {
      pb4server.QueryAllianceMemberVo result = new pb4server.QueryAllianceMemberVo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      result.name_ = name_;
      result.photoProtoId_ = photoProtoId_;
      result.ctrbtTotal_ = ctrbtTotal_;
      result.ctrbtWeek_ = ctrbtWeek_;
      result.powerValue_ = powerValue_;
      result.landX_ = landX_;
      result.landY_ = landY_;
      result.fightValue_ = fightValue_;
      result.isOnline_ = isOnline_;
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        positions_ = java.util.Collections.unmodifiableList(positions_);
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.positions_ = positions_;
      result.tsLandX_ = tsLandX_;
      result.tsLandY_ = tsLandY_;
      result.occupiedFlag_ = occupiedFlag_;
      result.makeOverTime_ = makeOverTime_;
      result.nickName_ = nickName_;
      result.lastOffTime_ = lastOffTime_;
      result.mapAreaNo_ = mapAreaNo_;
      result.monsterScore_ = monsterScore_;
      result.lastGetMonsterScore_ = lastGetMonsterScore_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4server.QueryAllianceMemberVo) {
        return mergeFrom((pb4server.QueryAllianceMemberVo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4server.QueryAllianceMemberVo other) {
      if (other == pb4server.QueryAllianceMemberVo.getDefaultInstance()) return this;
      if (other.getId() != 0L) {
        setId(other.getId());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.getPhotoProtoId() != 0) {
        setPhotoProtoId(other.getPhotoProtoId());
      }
      if (other.getCtrbtTotal() != 0L) {
        setCtrbtTotal(other.getCtrbtTotal());
      }
      if (other.getCtrbtWeek() != 0L) {
        setCtrbtWeek(other.getCtrbtWeek());
      }
      if (other.getPowerValue() != 0L) {
        setPowerValue(other.getPowerValue());
      }
      if (other.getLandX() != 0) {
        setLandX(other.getLandX());
      }
      if (other.getLandY() != 0) {
        setLandY(other.getLandY());
      }
      if (other.getFightValue() != 0) {
        setFightValue(other.getFightValue());
      }
      if (other.getIsOnline() != 0) {
        setIsOnline(other.getIsOnline());
      }
      if (!other.positions_.isEmpty()) {
        if (positions_.isEmpty()) {
          positions_ = other.positions_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensurePositionsIsMutable();
          positions_.addAll(other.positions_);
        }
        onChanged();
      }
      if (other.getTsLandX() != 0) {
        setTsLandX(other.getTsLandX());
      }
      if (other.getTsLandY() != 0) {
        setTsLandY(other.getTsLandY());
      }
      if (other.getOccupiedFlag() != 0) {
        setOccupiedFlag(other.getOccupiedFlag());
      }
      if (other.getMakeOverTime() != 0L) {
        setMakeOverTime(other.getMakeOverTime());
      }
      if (!other.getNickName().isEmpty()) {
        nickName_ = other.nickName_;
        onChanged();
      }
      if (other.getLastOffTime() != 0L) {
        setLastOffTime(other.getLastOffTime());
      }
      if (other.getMapAreaNo() != 0) {
        setMapAreaNo(other.getMapAreaNo());
      }
      if (other.getMonsterScore() != 0) {
        setMonsterScore(other.getMonsterScore());
      }
      if (other.getLastGetMonsterScore() != 0L) {
        setLastGetMonsterScore(other.getLastGetMonsterScore());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4server.QueryAllianceMemberVo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4server.QueryAllianceMemberVo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public Builder setId(long value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int photoProtoId_ ;
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>int32 photoProtoId = 3;</code>
     */
    public int getPhotoProtoId() {
      return photoProtoId_;
    }
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>int32 photoProtoId = 3;</code>
     */
    public Builder setPhotoProtoId(int value) {
      
      photoProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *头像模版ID
     * </pre>
     *
     * <code>int32 photoProtoId = 3;</code>
     */
    public Builder clearPhotoProtoId() {
      
      photoProtoId_ = 0;
      onChanged();
      return this;
    }

    private long ctrbtTotal_ ;
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>int64 ctrbtTotal = 4;</code>
     */
    public long getCtrbtTotal() {
      return ctrbtTotal_;
    }
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>int64 ctrbtTotal = 4;</code>
     */
    public Builder setCtrbtTotal(long value) {
      
      ctrbtTotal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *总贡献
     * </pre>
     *
     * <code>int64 ctrbtTotal = 4;</code>
     */
    public Builder clearCtrbtTotal() {
      
      ctrbtTotal_ = 0L;
      onChanged();
      return this;
    }

    private long ctrbtWeek_ ;
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>int64 ctrbtWeek = 5;</code>
     */
    public long getCtrbtWeek() {
      return ctrbtWeek_;
    }
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>int64 ctrbtWeek = 5;</code>
     */
    public Builder setCtrbtWeek(long value) {
      
      ctrbtWeek_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *本周贡献
     * </pre>
     *
     * <code>int64 ctrbtWeek = 5;</code>
     */
    public Builder clearCtrbtWeek() {
      
      ctrbtWeek_ = 0L;
      onChanged();
      return this;
    }

    private long powerValue_ ;
    /**
     * <pre>
     *势力值
     * </pre>
     *
     * <code>int64 powerValue = 6;</code>
     */
    public long getPowerValue() {
      return powerValue_;
    }
    /**
     * <pre>
     *势力值
     * </pre>
     *
     * <code>int64 powerValue = 6;</code>
     */
    public Builder setPowerValue(long value) {
      
      powerValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *势力值
     * </pre>
     *
     * <code>int64 powerValue = 6;</code>
     */
    public Builder clearPowerValue() {
      
      powerValue_ = 0L;
      onChanged();
      return this;
    }

    private int landX_ ;
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>int32 landX = 7;</code>
     */
    public int getLandX() {
      return landX_;
    }
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>int32 landX = 7;</code>
     */
    public Builder setLandX(int value) {
      
      landX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标X
     * </pre>
     *
     * <code>int32 landX = 7;</code>
     */
    public Builder clearLandX() {
      
      landX_ = 0;
      onChanged();
      return this;
    }

    private int landY_ ;
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 landY = 8;</code>
     */
    public int getLandY() {
      return landY_;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 landY = 8;</code>
     */
    public Builder setLandY(int value) {
      
      landY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *坐标Y
     * </pre>
     *
     * <code>int32 landY = 8;</code>
     */
    public Builder clearLandY() {
      
      landY_ = 0;
      onChanged();
      return this;
    }

    private int fightValue_ ;
    /**
     * <pre>
     *所有部队总战斗力
     * </pre>
     *
     * <code>int32 fightValue = 9;</code>
     */
    public int getFightValue() {
      return fightValue_;
    }
    /**
     * <pre>
     *所有部队总战斗力
     * </pre>
     *
     * <code>int32 fightValue = 9;</code>
     */
    public Builder setFightValue(int value) {
      
      fightValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *所有部队总战斗力
     * </pre>
     *
     * <code>int32 fightValue = 9;</code>
     */
    public Builder clearFightValue() {
      
      fightValue_ = 0;
      onChanged();
      return this;
    }

    private int isOnline_ ;
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>int32 isOnline = 10;</code>
     */
    public int getIsOnline() {
      return isOnline_;
    }
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>int32 isOnline = 10;</code>
     */
    public Builder setIsOnline(int value) {
      
      isOnline_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家是否在线：0-不在线；1-在线
     * </pre>
     *
     * <code>int32 isOnline = 10;</code>
     */
    public Builder clearIsOnline() {
      
      isOnline_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> positions_ = java.util.Collections.emptyList();
    private void ensurePositionsIsMutable() {
      if (!((bitField0_ & 0x00000400) == 0x00000400)) {
        positions_ = new java.util.ArrayList<java.lang.Integer>(positions_);
        bitField0_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public java.util.List<java.lang.Integer>
        getPositionsList() {
      return java.util.Collections.unmodifiableList(positions_);
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public int getPositionsCount() {
      return positions_.size();
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public int getPositions(int index) {
      return positions_.get(index);
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public Builder setPositions(
        int index, int value) {
      ensurePositionsIsMutable();
      positions_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public Builder addPositions(int value) {
      ensurePositionsIsMutable();
      positions_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public Builder addAllPositions(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePositionsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, positions_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
     * </pre>
     *
     * <code>repeated int32 positions = 11;</code>
     */
    public Builder clearPositions() {
      positions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }

    private int tsLandX_ ;
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>int32 tsLandX = 12;</code>
     */
    public int getTsLandX() {
      return tsLandX_;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>int32 tsLandX = 12;</code>
     */
    public Builder setTsLandX(int value) {
      
      tsLandX_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标X
     * </pre>
     *
     * <code>int32 tsLandX = 12;</code>
     */
    public Builder clearTsLandX() {
      
      tsLandX_ = 0;
      onChanged();
      return this;
    }

    private int tsLandY_ ;
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>int32 tsLandY = 13;</code>
     */
    public int getTsLandY() {
      return tsLandY_;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>int32 tsLandY = 13;</code>
     */
    public Builder setTsLandY(int value) {
      
      tsLandY_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是某个郡城的守，值为郡城的坐标Y
     * </pre>
     *
     * <code>int32 tsLandY = 13;</code>
     */
    public Builder clearTsLandY() {
      
      tsLandY_ = 0;
      onChanged();
      return this;
    }

    private int occupiedFlag_ ;
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>int32 occupiedFlag = 14;</code>
     */
    public int getOccupiedFlag() {
      return occupiedFlag_;
    }
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>int32 occupiedFlag = 14;</code>
     */
    public Builder setOccupiedFlag(int value) {
      
      occupiedFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否沦陷标志位：1-沦陷；0-没有沦陷
     * </pre>
     *
     * <code>int32 occupiedFlag = 14;</code>
     */
    public Builder clearOccupiedFlag() {
      
      occupiedFlag_ = 0;
      onChanged();
      return this;
    }

    private long makeOverTime_ ;
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>int64 makeOverTime = 15;</code>
     */
    public long getMakeOverTime() {
      return makeOverTime_;
    }
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>int64 makeOverTime = 15;</code>
     */
    public Builder setMakeOverTime(long value) {
      
      makeOverTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *如果是盟主会有执行盟主转让操作的时间戳
     * </pre>
     *
     * <code>int64 makeOverTime = 15;</code>
     */
    public Builder clearMakeOverTime() {
      
      makeOverTime_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object nickName_ = "";
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>string nickName = 16;</code>
     */
    public java.lang.String getNickName() {
      java.lang.Object ref = nickName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nickName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>string nickName = 16;</code>
     */
    public com.google.protobuf.ByteString
        getNickNameBytes() {
      java.lang.Object ref = nickName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>string nickName = 16;</code>
     */
    public Builder setNickName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nickName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>string nickName = 16;</code>
     */
    public Builder clearNickName() {
      
      nickName_ = getDefaultInstance().getNickName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *玩家昵称
     * </pre>
     *
     * <code>string nickName = 16;</code>
     */
    public Builder setNickNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nickName_ = value;
      onChanged();
      return this;
    }

    private long lastOffTime_ ;
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>int64 lastOffTime = 17;</code>
     */
    public long getLastOffTime() {
      return lastOffTime_;
    }
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>int64 lastOffTime = 17;</code>
     */
    public Builder setLastOffTime(long value) {
      
      lastOffTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上次离线时间
     * </pre>
     *
     * <code>int64 lastOffTime = 17;</code>
     */
    public Builder clearLastOffTime() {
      
      lastOffTime_ = 0L;
      onChanged();
      return this;
    }

    private int mapAreaNo_ ;
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>int32 mapAreaNo = 18;</code>
     */
    public int getMapAreaNo() {
      return mapAreaNo_;
    }
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>int32 mapAreaNo = 18;</code>
     */
    public Builder setMapAreaNo(int value) {
      
      mapAreaNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 玩家所属的服务器编号
     * </pre>
     *
     * <code>int32 mapAreaNo = 18;</code>
     */
    public Builder clearMapAreaNo() {
      
      mapAreaNo_ = 0;
      onChanged();
      return this;
    }

    private int monsterScore_ ;
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>int32 monsterScore = 19;</code>
     */
    public int getMonsterScore() {
      return monsterScore_;
    }
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>int32 monsterScore = 19;</code>
     */
    public Builder setMonsterScore(int value) {
      
      monsterScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 本日获得魔物积分
     * </pre>
     *
     * <code>int32 monsterScore = 19;</code>
     */
    public Builder clearMonsterScore() {
      
      monsterScore_ = 0;
      onChanged();
      return this;
    }

    private long lastGetMonsterScore_ ;
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>int64 lastGetMonsterScore = 20;</code>
     */
    public long getLastGetMonsterScore() {
      return lastGetMonsterScore_;
    }
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>int64 lastGetMonsterScore = 20;</code>
     */
    public Builder setLastGetMonsterScore(long value) {
      
      lastGetMonsterScore_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上次获得魔物积分时间
     * </pre>
     *
     * <code>int64 lastGetMonsterScore = 20;</code>
     */
    public Builder clearLastGetMonsterScore() {
      
      lastGetMonsterScore_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:pb4server.QueryAllianceMemberVo)
  }

  // @@protoc_insertion_point(class_scope:pb4server.QueryAllianceMemberVo)
  private static final pb4server.QueryAllianceMemberVo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4server.QueryAllianceMemberVo();
  }

  public static pb4server.QueryAllianceMemberVo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryAllianceMemberVo>
      PARSER = new com.google.protobuf.AbstractParser<QueryAllianceMemberVo>() {
    public QueryAllianceMemberVo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryAllianceMemberVo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<QueryAllianceMemberVo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryAllianceMemberVo> getParserForType() {
    return PARSER;
  }

  public pb4server.QueryAllianceMemberVo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

