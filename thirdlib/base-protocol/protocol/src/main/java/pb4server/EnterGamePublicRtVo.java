// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal2world.proto

package pb4server;

/**
 * Protobuf type {@code pb4server.EnterGamePublicRtVo}
 */
public  final class EnterGamePublicRtVo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pb4server.EnterGamePublicRtVo)
    EnterGamePublicRtVoOrBuilder {
  // Use EnterGamePublicRtVo.newBuilder() to construct.
  private EnterGamePublicRtVo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EnterGamePublicRtVo() {
    members_ = java.util.Collections.emptyList();
    occupiedFlag_ = 0;
    occupiedById_ = 0L;
    occupiedByName_ = "";
    occupiedByShortName_ = "";
    occupiedByAt_ = 0;
    occupiedByPlayerId_ = 0L;
    occupiedByPlayerName_ = "";
    demandProtoId_ = 0;
    demandUnRead_ = 0;
    allianceMarks_ = java.util.Collections.emptyList();
    redPoints_ = java.util.Collections.emptyList();
    noReadTopic_ = 0;
    allianceWaijiaoTime_ = java.util.Collections.emptyList();
    rankLv_ = 0;
    hunterInvites_ = java.util.Collections.emptyList();
    reqListNum_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private EnterGamePublicRtVo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              members_ = new java.util.ArrayList<pb4server.MemberPlayerInfoVo>();
              mutable_bitField0_ |= 0x00000001;
            }
            members_.add(
                input.readMessage(pb4server.MemberPlayerInfoVo.parser(), extensionRegistry));
            break;
          }
          case 18: {
            pb4server.AllianceInfoVo.Builder subBuilder = null;
            if (allianceInfo_ != null) {
              subBuilder = allianceInfo_.toBuilder();
            }
            allianceInfo_ = input.readMessage(pb4server.AllianceInfoVo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(allianceInfo_);
              allianceInfo_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            occupiedFlag_ = input.readInt32();
            break;
          }
          case 32: {

            occupiedById_ = input.readInt64();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            occupiedByName_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            occupiedByShortName_ = s;
            break;
          }
          case 56: {

            occupiedByAt_ = input.readInt32();
            break;
          }
          case 64: {

            occupiedByPlayerId_ = input.readInt64();
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            occupiedByPlayerName_ = s;
            break;
          }
          case 80: {

            demandProtoId_ = input.readInt32();
            break;
          }
          case 88: {

            demandUnRead_ = input.readInt32();
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
              allianceMarks_ = new java.util.ArrayList<pb4server.AllianceMarkInfoVo>();
              mutable_bitField0_ |= 0x00000800;
            }
            allianceMarks_.add(
                input.readMessage(pb4server.AllianceMarkInfoVo.parser(), extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              redPoints_ = new java.util.ArrayList<pb4server.RedPointVo>();
              mutable_bitField0_ |= 0x00001000;
            }
            redPoints_.add(
                input.readMessage(pb4server.RedPointVo.parser(), extensionRegistry));
            break;
          }
          case 112: {

            noReadTopic_ = input.readInt32();
            break;
          }
          case 120: {
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
              allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00004000;
            }
            allianceWaijiaoTime_.add(input.readInt32());
            break;
          }
          case 122: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
              allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00004000;
            }
            while (input.getBytesUntilLimit() > 0) {
              allianceWaijiaoTime_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 130: {
            pb4server.AllianceLivenessVo.Builder subBuilder = null;
            if (allianceLivenessVo_ != null) {
              subBuilder = allianceLivenessVo_.toBuilder();
            }
            allianceLivenessVo_ = input.readMessage(pb4server.AllianceLivenessVo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(allianceLivenessVo_);
              allianceLivenessVo_ = subBuilder.buildPartial();
            }

            break;
          }
          case 136: {

            rankLv_ = input.readInt32();
            break;
          }
          case 146: {
            if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
              hunterInvites_ = new java.util.ArrayList<pb4server.HunterInviteInfoVo>();
              mutable_bitField0_ |= 0x00020000;
            }
            hunterInvites_.add(
                input.readMessage(pb4server.HunterInviteInfoVo.parser(), extensionRegistry));
            break;
          }
          case 152: {

            reqListNum_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        members_ = java.util.Collections.unmodifiableList(members_);
      }
      if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
        allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
      }
      if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
        allianceWaijiaoTime_ = java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
      }
      if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
        hunterInvites_ = java.util.Collections.unmodifiableList(hunterInvites_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pb4server.InternalWkt.internal_static_pb4server_EnterGamePublicRtVo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pb4server.InternalWkt.internal_static_pb4server_EnterGamePublicRtVo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pb4server.EnterGamePublicRtVo.class, pb4server.EnterGamePublicRtVo.Builder.class);
  }

  private int bitField0_;
  public static final int MEMBERS_FIELD_NUMBER = 1;
  private java.util.List<pb4server.MemberPlayerInfoVo> members_;
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
   */
  public java.util.List<pb4server.MemberPlayerInfoVo> getMembersList() {
    return members_;
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
   */
  public java.util.List<? extends pb4server.MemberPlayerInfoVoOrBuilder> 
      getMembersOrBuilderList() {
    return members_;
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
   */
  public int getMembersCount() {
    return members_.size();
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
   */
  public pb4server.MemberPlayerInfoVo getMembers(int index) {
    return members_.get(index);
  }
  /**
   * <pre>
   *联盟成员
   * </pre>
   *
   * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
   */
  public pb4server.MemberPlayerInfoVoOrBuilder getMembersOrBuilder(
      int index) {
    return members_.get(index);
  }

  public static final int ALLIANCEINFO_FIELD_NUMBER = 2;
  private pb4server.AllianceInfoVo allianceInfo_;
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
   */
  public boolean hasAllianceInfo() {
    return allianceInfo_ != null;
  }
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
   */
  public pb4server.AllianceInfoVo getAllianceInfo() {
    return allianceInfo_ == null ? pb4server.AllianceInfoVo.getDefaultInstance() : allianceInfo_;
  }
  /**
   * <pre>
   *联盟信息
   * </pre>
   *
   * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
   */
  public pb4server.AllianceInfoVoOrBuilder getAllianceInfoOrBuilder() {
    return getAllianceInfo();
  }

  public static final int OCCUPIEDFLAG_FIELD_NUMBER = 3;
  private int occupiedFlag_;
  /**
   * <pre>
   *是否是首次沦陷提醒（本次）
   * </pre>
   *
   * <code>int32 occupiedFlag = 3;</code>
   */
  public int getOccupiedFlag() {
    return occupiedFlag_;
  }

  public static final int OCCUPIEDBYID_FIELD_NUMBER = 4;
  private long occupiedById_;
  /**
   * <pre>
   *上级同盟ID
   * </pre>
   *
   * <code>int64 occupiedById = 4;</code>
   */
  public long getOccupiedById() {
    return occupiedById_;
  }

  public static final int OCCUPIEDBYNAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object occupiedByName_;
  /**
   * <pre>
   *上级同盟名称
   * </pre>
   *
   * <code>string occupiedByName = 5;</code>
   */
  public java.lang.String getOccupiedByName() {
    java.lang.Object ref = occupiedByName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      occupiedByName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *上级同盟名称
   * </pre>
   *
   * <code>string occupiedByName = 5;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByNameBytes() {
    java.lang.Object ref = occupiedByName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCCUPIEDBYSHORTNAME_FIELD_NUMBER = 6;
  private volatile java.lang.Object occupiedByShortName_;
  /**
   * <pre>
   *上级同盟简称
   * </pre>
   *
   * <code>string occupiedByShortName = 6;</code>
   */
  public java.lang.String getOccupiedByShortName() {
    java.lang.Object ref = occupiedByShortName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      occupiedByShortName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *上级同盟简称
   * </pre>
   *
   * <code>string occupiedByShortName = 6;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByShortNameBytes() {
    java.lang.Object ref = occupiedByShortName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByShortName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OCCUPIEDBYAT_FIELD_NUMBER = 7;
  private int occupiedByAt_;
  /**
   * <pre>
   *被沦陷的时间
   * </pre>
   *
   * <code>int32 occupiedByAt = 7;</code>
   */
  public int getOccupiedByAt() {
    return occupiedByAt_;
  }

  public static final int OCCUPIEDBYPLAYERID_FIELD_NUMBER = 8;
  private long occupiedByPlayerId_;
  /**
   * <pre>
   *攻击的玩家ID
   * </pre>
   *
   * <code>int64 occupiedByPlayerId = 8;</code>
   */
  public long getOccupiedByPlayerId() {
    return occupiedByPlayerId_;
  }

  public static final int OCCUPIEDBYPLAYERNAME_FIELD_NUMBER = 9;
  private volatile java.lang.Object occupiedByPlayerName_;
  /**
   * <pre>
   *攻击的玩家名字
   * </pre>
   *
   * <code>string occupiedByPlayerName = 9;</code>
   */
  public java.lang.String getOccupiedByPlayerName() {
    java.lang.Object ref = occupiedByPlayerName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      occupiedByPlayerName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *攻击的玩家名字
   * </pre>
   *
   * <code>string occupiedByPlayerName = 9;</code>
   */
  public com.google.protobuf.ByteString
      getOccupiedByPlayerNameBytes() {
    java.lang.Object ref = occupiedByPlayerName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      occupiedByPlayerName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEMANDPROTOID_FIELD_NUMBER = 10;
  private int demandProtoId_;
  /**
   * <pre>
   *请求捐卡的模版ID
   * </pre>
   *
   * <code>int32 demandProtoId = 10;</code>
   */
  public int getDemandProtoId() {
    return demandProtoId_;
  }

  public static final int DEMANDUNREAD_FIELD_NUMBER = 11;
  private int demandUnRead_;
  /**
   * <pre>
   *请求捐卡未读消息数量
   * </pre>
   *
   * <code>int32 demandUnRead = 11;</code>
   */
  public int getDemandUnRead() {
    return demandUnRead_;
  }

  public static final int ALLIANCEMARKS_FIELD_NUMBER = 12;
  private java.util.List<pb4server.AllianceMarkInfoVo> allianceMarks_;
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
   */
  public java.util.List<pb4server.AllianceMarkInfoVo> getAllianceMarksList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
   */
  public java.util.List<? extends pb4server.AllianceMarkInfoVoOrBuilder> 
      getAllianceMarksOrBuilderList() {
    return allianceMarks_;
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
   */
  public int getAllianceMarksCount() {
    return allianceMarks_.size();
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
   */
  public pb4server.AllianceMarkInfoVo getAllianceMarks(int index) {
    return allianceMarks_.get(index);
  }
  /**
   * <pre>
   *联盟标记列表
   * </pre>
   *
   * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
   */
  public pb4server.AllianceMarkInfoVoOrBuilder getAllianceMarksOrBuilder(
      int index) {
    return allianceMarks_.get(index);
  }

  public static final int REDPOINTS_FIELD_NUMBER = 13;
  private java.util.List<pb4server.RedPointVo> redPoints_;
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
   */
  public java.util.List<pb4server.RedPointVo> getRedPointsList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
   */
  public java.util.List<? extends pb4server.RedPointVoOrBuilder> 
      getRedPointsOrBuilderList() {
    return redPoints_;
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
   */
  public int getRedPointsCount() {
    return redPoints_.size();
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
   */
  public pb4server.RedPointVo getRedPoints(int index) {
    return redPoints_.get(index);
  }
  /**
   * <pre>
   *所有的小红点信息
   * </pre>
   *
   * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
   */
  public pb4server.RedPointVoOrBuilder getRedPointsOrBuilder(
      int index) {
    return redPoints_.get(index);
  }

  public static final int NOREADTOPIC_FIELD_NUMBER = 14;
  private int noReadTopic_;
  /**
   * <pre>
   *是否有未读的联盟邮件主题
   * </pre>
   *
   * <code>int32 noReadTopic = 14;</code>
   */
  public int getNoReadTopic() {
    return noReadTopic_;
  }

  public static final int ALLIANCEWAIJIAOTIME_FIELD_NUMBER = 15;
  private java.util.List<java.lang.Integer> allianceWaijiaoTime_;
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 15;</code>
   */
  public java.util.List<java.lang.Integer>
      getAllianceWaijiaoTimeList() {
    return allianceWaijiaoTime_;
  }
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 15;</code>
   */
  public int getAllianceWaijiaoTimeCount() {
    return allianceWaijiaoTime_.size();
  }
  /**
   * <pre>
   *联盟外交前20条的发布时间
   * </pre>
   *
   * <code>repeated int32 allianceWaijiaoTime = 15;</code>
   */
  public int getAllianceWaijiaoTime(int index) {
    return allianceWaijiaoTime_.get(index);
  }
  private int allianceWaijiaoTimeMemoizedSerializedSize = -1;

  public static final int ALLIANCELIVENESSVO_FIELD_NUMBER = 16;
  private pb4server.AllianceLivenessVo allianceLivenessVo_;
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
   */
  public boolean hasAllianceLivenessVo() {
    return allianceLivenessVo_ != null;
  }
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
   */
  public pb4server.AllianceLivenessVo getAllianceLivenessVo() {
    return allianceLivenessVo_ == null ? pb4server.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
  }
  /**
   * <pre>
   *联盟活跃度等级
   * </pre>
   *
   * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
   */
  public pb4server.AllianceLivenessVoOrBuilder getAllianceLivenessVoOrBuilder() {
    return getAllianceLivenessVo();
  }

  public static final int RANKLV_FIELD_NUMBER = 17;
  private int rankLv_;
  /**
   * <pre>
   *联盟段位等级
   * </pre>
   *
   * <code>int32 rankLv = 17;</code>
   */
  public int getRankLv() {
    return rankLv_;
  }

  public static final int HUNTERINVITES_FIELD_NUMBER = 18;
  private java.util.List<pb4server.HunterInviteInfoVo> hunterInvites_;
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
   */
  public java.util.List<pb4server.HunterInviteInfoVo> getHunterInvitesList() {
    return hunterInvites_;
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
   */
  public java.util.List<? extends pb4server.HunterInviteInfoVoOrBuilder> 
      getHunterInvitesOrBuilderList() {
    return hunterInvites_;
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
   */
  public int getHunterInvitesCount() {
    return hunterInvites_.size();
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
   */
  public pb4server.HunterInviteInfoVo getHunterInvites(int index) {
    return hunterInvites_.get(index);
  }
  /**
   * <pre>
   *猎杀邀请信息
   * </pre>
   *
   * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
   */
  public pb4server.HunterInviteInfoVoOrBuilder getHunterInvitesOrBuilder(
      int index) {
    return hunterInvites_.get(index);
  }

  public static final int REQLISTNUM_FIELD_NUMBER = 19;
  private int reqListNum_;
  /**
   * <pre>
   * 申请加入联盟数量
   * </pre>
   *
   * <code>int32 reqListNum = 19;</code>
   */
  public int getReqListNum() {
    return reqListNum_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < members_.size(); i++) {
      output.writeMessage(1, members_.get(i));
    }
    if (allianceInfo_ != null) {
      output.writeMessage(2, getAllianceInfo());
    }
    if (occupiedFlag_ != 0) {
      output.writeInt32(3, occupiedFlag_);
    }
    if (occupiedById_ != 0L) {
      output.writeInt64(4, occupiedById_);
    }
    if (!getOccupiedByNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, occupiedByName_);
    }
    if (!getOccupiedByShortNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, occupiedByShortName_);
    }
    if (occupiedByAt_ != 0) {
      output.writeInt32(7, occupiedByAt_);
    }
    if (occupiedByPlayerId_ != 0L) {
      output.writeInt64(8, occupiedByPlayerId_);
    }
    if (!getOccupiedByPlayerNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, occupiedByPlayerName_);
    }
    if (demandProtoId_ != 0) {
      output.writeInt32(10, demandProtoId_);
    }
    if (demandUnRead_ != 0) {
      output.writeInt32(11, demandUnRead_);
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      output.writeMessage(12, allianceMarks_.get(i));
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      output.writeMessage(13, redPoints_.get(i));
    }
    if (noReadTopic_ != 0) {
      output.writeInt32(14, noReadTopic_);
    }
    if (getAllianceWaijiaoTimeList().size() > 0) {
      output.writeUInt32NoTag(122);
      output.writeUInt32NoTag(allianceWaijiaoTimeMemoizedSerializedSize);
    }
    for (int i = 0; i < allianceWaijiaoTime_.size(); i++) {
      output.writeInt32NoTag(allianceWaijiaoTime_.get(i));
    }
    if (allianceLivenessVo_ != null) {
      output.writeMessage(16, getAllianceLivenessVo());
    }
    if (rankLv_ != 0) {
      output.writeInt32(17, rankLv_);
    }
    for (int i = 0; i < hunterInvites_.size(); i++) {
      output.writeMessage(18, hunterInvites_.get(i));
    }
    if (reqListNum_ != 0) {
      output.writeInt32(19, reqListNum_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < members_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, members_.get(i));
    }
    if (allianceInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAllianceInfo());
    }
    if (occupiedFlag_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, occupiedFlag_);
    }
    if (occupiedById_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, occupiedById_);
    }
    if (!getOccupiedByNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, occupiedByName_);
    }
    if (!getOccupiedByShortNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, occupiedByShortName_);
    }
    if (occupiedByAt_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, occupiedByAt_);
    }
    if (occupiedByPlayerId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, occupiedByPlayerId_);
    }
    if (!getOccupiedByPlayerNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, occupiedByPlayerName_);
    }
    if (demandProtoId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, demandProtoId_);
    }
    if (demandUnRead_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, demandUnRead_);
    }
    for (int i = 0; i < allianceMarks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, allianceMarks_.get(i));
    }
    for (int i = 0; i < redPoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, redPoints_.get(i));
    }
    if (noReadTopic_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, noReadTopic_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < allianceWaijiaoTime_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(allianceWaijiaoTime_.get(i));
      }
      size += dataSize;
      if (!getAllianceWaijiaoTimeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      allianceWaijiaoTimeMemoizedSerializedSize = dataSize;
    }
    if (allianceLivenessVo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getAllianceLivenessVo());
    }
    if (rankLv_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, rankLv_);
    }
    for (int i = 0; i < hunterInvites_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, hunterInvites_.get(i));
    }
    if (reqListNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(19, reqListNum_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pb4server.EnterGamePublicRtVo)) {
      return super.equals(obj);
    }
    pb4server.EnterGamePublicRtVo other = (pb4server.EnterGamePublicRtVo) obj;

    boolean result = true;
    result = result && getMembersList()
        .equals(other.getMembersList());
    result = result && (hasAllianceInfo() == other.hasAllianceInfo());
    if (hasAllianceInfo()) {
      result = result && getAllianceInfo()
          .equals(other.getAllianceInfo());
    }
    result = result && (getOccupiedFlag()
        == other.getOccupiedFlag());
    result = result && (getOccupiedById()
        == other.getOccupiedById());
    result = result && getOccupiedByName()
        .equals(other.getOccupiedByName());
    result = result && getOccupiedByShortName()
        .equals(other.getOccupiedByShortName());
    result = result && (getOccupiedByAt()
        == other.getOccupiedByAt());
    result = result && (getOccupiedByPlayerId()
        == other.getOccupiedByPlayerId());
    result = result && getOccupiedByPlayerName()
        .equals(other.getOccupiedByPlayerName());
    result = result && (getDemandProtoId()
        == other.getDemandProtoId());
    result = result && (getDemandUnRead()
        == other.getDemandUnRead());
    result = result && getAllianceMarksList()
        .equals(other.getAllianceMarksList());
    result = result && getRedPointsList()
        .equals(other.getRedPointsList());
    result = result && (getNoReadTopic()
        == other.getNoReadTopic());
    result = result && getAllianceWaijiaoTimeList()
        .equals(other.getAllianceWaijiaoTimeList());
    result = result && (hasAllianceLivenessVo() == other.hasAllianceLivenessVo());
    if (hasAllianceLivenessVo()) {
      result = result && getAllianceLivenessVo()
          .equals(other.getAllianceLivenessVo());
    }
    result = result && (getRankLv()
        == other.getRankLv());
    result = result && getHunterInvitesList()
        .equals(other.getHunterInvitesList());
    result = result && (getReqListNum()
        == other.getReqListNum());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMembersCount() > 0) {
      hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
      hash = (53 * hash) + getMembersList().hashCode();
    }
    if (hasAllianceInfo()) {
      hash = (37 * hash) + ALLIANCEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceInfo().hashCode();
    }
    hash = (37 * hash) + OCCUPIEDFLAG_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedFlag();
    hash = (37 * hash) + OCCUPIEDBYID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOccupiedById());
    hash = (37 * hash) + OCCUPIEDBYNAME_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedByName().hashCode();
    hash = (37 * hash) + OCCUPIEDBYSHORTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedByShortName().hashCode();
    hash = (37 * hash) + OCCUPIEDBYAT_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedByAt();
    hash = (37 * hash) + OCCUPIEDBYPLAYERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOccupiedByPlayerId());
    hash = (37 * hash) + OCCUPIEDBYPLAYERNAME_FIELD_NUMBER;
    hash = (53 * hash) + getOccupiedByPlayerName().hashCode();
    hash = (37 * hash) + DEMANDPROTOID_FIELD_NUMBER;
    hash = (53 * hash) + getDemandProtoId();
    hash = (37 * hash) + DEMANDUNREAD_FIELD_NUMBER;
    hash = (53 * hash) + getDemandUnRead();
    if (getAllianceMarksCount() > 0) {
      hash = (37 * hash) + ALLIANCEMARKS_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceMarksList().hashCode();
    }
    if (getRedPointsCount() > 0) {
      hash = (37 * hash) + REDPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getRedPointsList().hashCode();
    }
    hash = (37 * hash) + NOREADTOPIC_FIELD_NUMBER;
    hash = (53 * hash) + getNoReadTopic();
    if (getAllianceWaijiaoTimeCount() > 0) {
      hash = (37 * hash) + ALLIANCEWAIJIAOTIME_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceWaijiaoTimeList().hashCode();
    }
    if (hasAllianceLivenessVo()) {
      hash = (37 * hash) + ALLIANCELIVENESSVO_FIELD_NUMBER;
      hash = (53 * hash) + getAllianceLivenessVo().hashCode();
    }
    hash = (37 * hash) + RANKLV_FIELD_NUMBER;
    hash = (53 * hash) + getRankLv();
    if (getHunterInvitesCount() > 0) {
      hash = (37 * hash) + HUNTERINVITES_FIELD_NUMBER;
      hash = (53 * hash) + getHunterInvitesList().hashCode();
    }
    hash = (37 * hash) + REQLISTNUM_FIELD_NUMBER;
    hash = (53 * hash) + getReqListNum();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pb4server.EnterGamePublicRtVo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.EnterGamePublicRtVo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pb4server.EnterGamePublicRtVo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pb4server.EnterGamePublicRtVo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pb4server.EnterGamePublicRtVo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pb4server.EnterGamePublicRtVo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pb4server.EnterGamePublicRtVo)
      pb4server.EnterGamePublicRtVoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb4server.InternalWkt.internal_static_pb4server_EnterGamePublicRtVo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb4server.InternalWkt.internal_static_pb4server_EnterGamePublicRtVo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb4server.EnterGamePublicRtVo.class, pb4server.EnterGamePublicRtVo.Builder.class);
    }

    // Construct using pb4server.EnterGamePublicRtVo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMembersFieldBuilder();
        getAllianceMarksFieldBuilder();
        getRedPointsFieldBuilder();
        getHunterInvitesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (membersBuilder_ == null) {
        members_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        membersBuilder_.clear();
      }
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = null;
      } else {
        allianceInfo_ = null;
        allianceInfoBuilder_ = null;
      }
      occupiedFlag_ = 0;

      occupiedById_ = 0L;

      occupiedByName_ = "";

      occupiedByShortName_ = "";

      occupiedByAt_ = 0;

      occupiedByPlayerId_ = 0L;

      occupiedByPlayerName_ = "";

      demandProtoId_ = 0;

      demandUnRead_ = 0;

      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
      } else {
        allianceMarksBuilder_.clear();
      }
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        redPointsBuilder_.clear();
      }
      noReadTopic_ = 0;

      allianceWaijiaoTime_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00004000);
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = null;
      } else {
        allianceLivenessVo_ = null;
        allianceLivenessVoBuilder_ = null;
      }
      rankLv_ = 0;

      if (hunterInvitesBuilder_ == null) {
        hunterInvites_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
      } else {
        hunterInvitesBuilder_.clear();
      }
      reqListNum_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pb4server.InternalWkt.internal_static_pb4server_EnterGamePublicRtVo_descriptor;
    }

    public pb4server.EnterGamePublicRtVo getDefaultInstanceForType() {
      return pb4server.EnterGamePublicRtVo.getDefaultInstance();
    }

    public pb4server.EnterGamePublicRtVo build() {
      pb4server.EnterGamePublicRtVo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public pb4server.EnterGamePublicRtVo buildPartial() {
      pb4server.EnterGamePublicRtVo result = new pb4server.EnterGamePublicRtVo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (membersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          members_ = java.util.Collections.unmodifiableList(members_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.members_ = members_;
      } else {
        result.members_ = membersBuilder_.build();
      }
      if (allianceInfoBuilder_ == null) {
        result.allianceInfo_ = allianceInfo_;
      } else {
        result.allianceInfo_ = allianceInfoBuilder_.build();
      }
      result.occupiedFlag_ = occupiedFlag_;
      result.occupiedById_ = occupiedById_;
      result.occupiedByName_ = occupiedByName_;
      result.occupiedByShortName_ = occupiedByShortName_;
      result.occupiedByAt_ = occupiedByAt_;
      result.occupiedByPlayerId_ = occupiedByPlayerId_;
      result.occupiedByPlayerName_ = occupiedByPlayerName_;
      result.demandProtoId_ = demandProtoId_;
      result.demandUnRead_ = demandUnRead_;
      if (allianceMarksBuilder_ == null) {
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          allianceMarks_ = java.util.Collections.unmodifiableList(allianceMarks_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.allianceMarks_ = allianceMarks_;
      } else {
        result.allianceMarks_ = allianceMarksBuilder_.build();
      }
      if (redPointsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.redPoints_ = redPoints_;
      } else {
        result.redPoints_ = redPointsBuilder_.build();
      }
      result.noReadTopic_ = noReadTopic_;
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        allianceWaijiaoTime_ = java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
        bitField0_ = (bitField0_ & ~0x00004000);
      }
      result.allianceWaijiaoTime_ = allianceWaijiaoTime_;
      if (allianceLivenessVoBuilder_ == null) {
        result.allianceLivenessVo_ = allianceLivenessVo_;
      } else {
        result.allianceLivenessVo_ = allianceLivenessVoBuilder_.build();
      }
      result.rankLv_ = rankLv_;
      if (hunterInvitesBuilder_ == null) {
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          hunterInvites_ = java.util.Collections.unmodifiableList(hunterInvites_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.hunterInvites_ = hunterInvites_;
      } else {
        result.hunterInvites_ = hunterInvitesBuilder_.build();
      }
      result.reqListNum_ = reqListNum_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pb4server.EnterGamePublicRtVo) {
        return mergeFrom((pb4server.EnterGamePublicRtVo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pb4server.EnterGamePublicRtVo other) {
      if (other == pb4server.EnterGamePublicRtVo.getDefaultInstance()) return this;
      if (membersBuilder_ == null) {
        if (!other.members_.isEmpty()) {
          if (members_.isEmpty()) {
            members_ = other.members_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMembersIsMutable();
            members_.addAll(other.members_);
          }
          onChanged();
        }
      } else {
        if (!other.members_.isEmpty()) {
          if (membersBuilder_.isEmpty()) {
            membersBuilder_.dispose();
            membersBuilder_ = null;
            members_ = other.members_;
            bitField0_ = (bitField0_ & ~0x00000001);
            membersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMembersFieldBuilder() : null;
          } else {
            membersBuilder_.addAllMessages(other.members_);
          }
        }
      }
      if (other.hasAllianceInfo()) {
        mergeAllianceInfo(other.getAllianceInfo());
      }
      if (other.getOccupiedFlag() != 0) {
        setOccupiedFlag(other.getOccupiedFlag());
      }
      if (other.getOccupiedById() != 0L) {
        setOccupiedById(other.getOccupiedById());
      }
      if (!other.getOccupiedByName().isEmpty()) {
        occupiedByName_ = other.occupiedByName_;
        onChanged();
      }
      if (!other.getOccupiedByShortName().isEmpty()) {
        occupiedByShortName_ = other.occupiedByShortName_;
        onChanged();
      }
      if (other.getOccupiedByAt() != 0) {
        setOccupiedByAt(other.getOccupiedByAt());
      }
      if (other.getOccupiedByPlayerId() != 0L) {
        setOccupiedByPlayerId(other.getOccupiedByPlayerId());
      }
      if (!other.getOccupiedByPlayerName().isEmpty()) {
        occupiedByPlayerName_ = other.occupiedByPlayerName_;
        onChanged();
      }
      if (other.getDemandProtoId() != 0) {
        setDemandProtoId(other.getDemandProtoId());
      }
      if (other.getDemandUnRead() != 0) {
        setDemandUnRead(other.getDemandUnRead());
      }
      if (allianceMarksBuilder_ == null) {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarks_.isEmpty()) {
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAllianceMarksIsMutable();
            allianceMarks_.addAll(other.allianceMarks_);
          }
          onChanged();
        }
      } else {
        if (!other.allianceMarks_.isEmpty()) {
          if (allianceMarksBuilder_.isEmpty()) {
            allianceMarksBuilder_.dispose();
            allianceMarksBuilder_ = null;
            allianceMarks_ = other.allianceMarks_;
            bitField0_ = (bitField0_ & ~0x00000800);
            allianceMarksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAllianceMarksFieldBuilder() : null;
          } else {
            allianceMarksBuilder_.addAllMessages(other.allianceMarks_);
          }
        }
      }
      if (redPointsBuilder_ == null) {
        if (!other.redPoints_.isEmpty()) {
          if (redPoints_.isEmpty()) {
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureRedPointsIsMutable();
            redPoints_.addAll(other.redPoints_);
          }
          onChanged();
        }
      } else {
        if (!other.redPoints_.isEmpty()) {
          if (redPointsBuilder_.isEmpty()) {
            redPointsBuilder_.dispose();
            redPointsBuilder_ = null;
            redPoints_ = other.redPoints_;
            bitField0_ = (bitField0_ & ~0x00001000);
            redPointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRedPointsFieldBuilder() : null;
          } else {
            redPointsBuilder_.addAllMessages(other.redPoints_);
          }
        }
      }
      if (other.getNoReadTopic() != 0) {
        setNoReadTopic(other.getNoReadTopic());
      }
      if (!other.allianceWaijiaoTime_.isEmpty()) {
        if (allianceWaijiaoTime_.isEmpty()) {
          allianceWaijiaoTime_ = other.allianceWaijiaoTime_;
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          ensureAllianceWaijiaoTimeIsMutable();
          allianceWaijiaoTime_.addAll(other.allianceWaijiaoTime_);
        }
        onChanged();
      }
      if (other.hasAllianceLivenessVo()) {
        mergeAllianceLivenessVo(other.getAllianceLivenessVo());
      }
      if (other.getRankLv() != 0) {
        setRankLv(other.getRankLv());
      }
      if (hunterInvitesBuilder_ == null) {
        if (!other.hunterInvites_.isEmpty()) {
          if (hunterInvites_.isEmpty()) {
            hunterInvites_ = other.hunterInvites_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureHunterInvitesIsMutable();
            hunterInvites_.addAll(other.hunterInvites_);
          }
          onChanged();
        }
      } else {
        if (!other.hunterInvites_.isEmpty()) {
          if (hunterInvitesBuilder_.isEmpty()) {
            hunterInvitesBuilder_.dispose();
            hunterInvitesBuilder_ = null;
            hunterInvites_ = other.hunterInvites_;
            bitField0_ = (bitField0_ & ~0x00020000);
            hunterInvitesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHunterInvitesFieldBuilder() : null;
          } else {
            hunterInvitesBuilder_.addAllMessages(other.hunterInvites_);
          }
        }
      }
      if (other.getReqListNum() != 0) {
        setReqListNum(other.getReqListNum());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pb4server.EnterGamePublicRtVo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pb4server.EnterGamePublicRtVo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<pb4server.MemberPlayerInfoVo> members_ =
      java.util.Collections.emptyList();
    private void ensureMembersIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        members_ = new java.util.ArrayList<pb4server.MemberPlayerInfoVo>(members_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.MemberPlayerInfoVo, pb4server.MemberPlayerInfoVo.Builder, pb4server.MemberPlayerInfoVoOrBuilder> membersBuilder_;

    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public java.util.List<pb4server.MemberPlayerInfoVo> getMembersList() {
      if (membersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(members_);
      } else {
        return membersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public int getMembersCount() {
      if (membersBuilder_ == null) {
        return members_.size();
      } else {
        return membersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public pb4server.MemberPlayerInfoVo getMembers(int index) {
      if (membersBuilder_ == null) {
        return members_.get(index);
      } else {
        return membersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder setMembers(
        int index, pb4server.MemberPlayerInfoVo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.set(index, value);
        onChanged();
      } else {
        membersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder setMembers(
        int index, pb4server.MemberPlayerInfoVo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.set(index, builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder addMembers(pb4server.MemberPlayerInfoVo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.add(value);
        onChanged();
      } else {
        membersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder addMembers(
        int index, pb4server.MemberPlayerInfoVo value) {
      if (membersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMembersIsMutable();
        members_.add(index, value);
        onChanged();
      } else {
        membersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder addMembers(
        pb4server.MemberPlayerInfoVo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.add(builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder addMembers(
        int index, pb4server.MemberPlayerInfoVo.Builder builderForValue) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.add(index, builderForValue.build());
        onChanged();
      } else {
        membersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder addAllMembers(
        java.lang.Iterable<? extends pb4server.MemberPlayerInfoVo> values) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, members_);
        onChanged();
      } else {
        membersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder clearMembers() {
      if (membersBuilder_ == null) {
        members_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        membersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public Builder removeMembers(int index) {
      if (membersBuilder_ == null) {
        ensureMembersIsMutable();
        members_.remove(index);
        onChanged();
      } else {
        membersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public pb4server.MemberPlayerInfoVo.Builder getMembersBuilder(
        int index) {
      return getMembersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public pb4server.MemberPlayerInfoVoOrBuilder getMembersOrBuilder(
        int index) {
      if (membersBuilder_ == null) {
        return members_.get(index);  } else {
        return membersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public java.util.List<? extends pb4server.MemberPlayerInfoVoOrBuilder> 
         getMembersOrBuilderList() {
      if (membersBuilder_ != null) {
        return membersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(members_);
      }
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public pb4server.MemberPlayerInfoVo.Builder addMembersBuilder() {
      return getMembersFieldBuilder().addBuilder(
          pb4server.MemberPlayerInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public pb4server.MemberPlayerInfoVo.Builder addMembersBuilder(
        int index) {
      return getMembersFieldBuilder().addBuilder(
          index, pb4server.MemberPlayerInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟成员
     * </pre>
     *
     * <code>repeated .pb4server.MemberPlayerInfoVo members = 1;</code>
     */
    public java.util.List<pb4server.MemberPlayerInfoVo.Builder> 
         getMembersBuilderList() {
      return getMembersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.MemberPlayerInfoVo, pb4server.MemberPlayerInfoVo.Builder, pb4server.MemberPlayerInfoVoOrBuilder> 
        getMembersFieldBuilder() {
      if (membersBuilder_ == null) {
        membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4server.MemberPlayerInfoVo, pb4server.MemberPlayerInfoVo.Builder, pb4server.MemberPlayerInfoVoOrBuilder>(
                members_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        members_ = null;
      }
      return membersBuilder_;
    }

    private pb4server.AllianceInfoVo allianceInfo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4server.AllianceInfoVo, pb4server.AllianceInfoVo.Builder, pb4server.AllianceInfoVoOrBuilder> allianceInfoBuilder_;
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public boolean hasAllianceInfo() {
      return allianceInfoBuilder_ != null || allianceInfo_ != null;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public pb4server.AllianceInfoVo getAllianceInfo() {
      if (allianceInfoBuilder_ == null) {
        return allianceInfo_ == null ? pb4server.AllianceInfoVo.getDefaultInstance() : allianceInfo_;
      } else {
        return allianceInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public Builder setAllianceInfo(pb4server.AllianceInfoVo value) {
      if (allianceInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allianceInfo_ = value;
        onChanged();
      } else {
        allianceInfoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public Builder setAllianceInfo(
        pb4server.AllianceInfoVo.Builder builderForValue) {
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = builderForValue.build();
        onChanged();
      } else {
        allianceInfoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public Builder mergeAllianceInfo(pb4server.AllianceInfoVo value) {
      if (allianceInfoBuilder_ == null) {
        if (allianceInfo_ != null) {
          allianceInfo_ =
            pb4server.AllianceInfoVo.newBuilder(allianceInfo_).mergeFrom(value).buildPartial();
        } else {
          allianceInfo_ = value;
        }
        onChanged();
      } else {
        allianceInfoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public Builder clearAllianceInfo() {
      if (allianceInfoBuilder_ == null) {
        allianceInfo_ = null;
        onChanged();
      } else {
        allianceInfo_ = null;
        allianceInfoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public pb4server.AllianceInfoVo.Builder getAllianceInfoBuilder() {
      
      onChanged();
      return getAllianceInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    public pb4server.AllianceInfoVoOrBuilder getAllianceInfoOrBuilder() {
      if (allianceInfoBuilder_ != null) {
        return allianceInfoBuilder_.getMessageOrBuilder();
      } else {
        return allianceInfo_ == null ?
            pb4server.AllianceInfoVo.getDefaultInstance() : allianceInfo_;
      }
    }
    /**
     * <pre>
     *联盟信息
     * </pre>
     *
     * <code>.pb4server.AllianceInfoVo allianceInfo = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4server.AllianceInfoVo, pb4server.AllianceInfoVo.Builder, pb4server.AllianceInfoVoOrBuilder> 
        getAllianceInfoFieldBuilder() {
      if (allianceInfoBuilder_ == null) {
        allianceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4server.AllianceInfoVo, pb4server.AllianceInfoVo.Builder, pb4server.AllianceInfoVoOrBuilder>(
                getAllianceInfo(),
                getParentForChildren(),
                isClean());
        allianceInfo_ = null;
      }
      return allianceInfoBuilder_;
    }

    private int occupiedFlag_ ;
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>int32 occupiedFlag = 3;</code>
     */
    public int getOccupiedFlag() {
      return occupiedFlag_;
    }
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>int32 occupiedFlag = 3;</code>
     */
    public Builder setOccupiedFlag(int value) {
      
      occupiedFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否是首次沦陷提醒（本次）
     * </pre>
     *
     * <code>int32 occupiedFlag = 3;</code>
     */
    public Builder clearOccupiedFlag() {
      
      occupiedFlag_ = 0;
      onChanged();
      return this;
    }

    private long occupiedById_ ;
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>int64 occupiedById = 4;</code>
     */
    public long getOccupiedById() {
      return occupiedById_;
    }
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>int64 occupiedById = 4;</code>
     */
    public Builder setOccupiedById(long value) {
      
      occupiedById_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟ID
     * </pre>
     *
     * <code>int64 occupiedById = 4;</code>
     */
    public Builder clearOccupiedById() {
      
      occupiedById_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByName_ = "";
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>string occupiedByName = 5;</code>
     */
    public java.lang.String getOccupiedByName() {
      java.lang.Object ref = occupiedByName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        occupiedByName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>string occupiedByName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByNameBytes() {
      java.lang.Object ref = occupiedByName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>string occupiedByName = 5;</code>
     */
    public Builder setOccupiedByName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      occupiedByName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>string occupiedByName = 5;</code>
     */
    public Builder clearOccupiedByName() {
      
      occupiedByName_ = getDefaultInstance().getOccupiedByName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟名称
     * </pre>
     *
     * <code>string occupiedByName = 5;</code>
     */
    public Builder setOccupiedByNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      occupiedByName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByShortName_ = "";
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>string occupiedByShortName = 6;</code>
     */
    public java.lang.String getOccupiedByShortName() {
      java.lang.Object ref = occupiedByShortName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        occupiedByShortName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>string occupiedByShortName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByShortNameBytes() {
      java.lang.Object ref = occupiedByShortName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByShortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>string occupiedByShortName = 6;</code>
     */
    public Builder setOccupiedByShortName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      occupiedByShortName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>string occupiedByShortName = 6;</code>
     */
    public Builder clearOccupiedByShortName() {
      
      occupiedByShortName_ = getDefaultInstance().getOccupiedByShortName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *上级同盟简称
     * </pre>
     *
     * <code>string occupiedByShortName = 6;</code>
     */
    public Builder setOccupiedByShortNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      occupiedByShortName_ = value;
      onChanged();
      return this;
    }

    private int occupiedByAt_ ;
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>int32 occupiedByAt = 7;</code>
     */
    public int getOccupiedByAt() {
      return occupiedByAt_;
    }
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>int32 occupiedByAt = 7;</code>
     */
    public Builder setOccupiedByAt(int value) {
      
      occupiedByAt_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *被沦陷的时间
     * </pre>
     *
     * <code>int32 occupiedByAt = 7;</code>
     */
    public Builder clearOccupiedByAt() {
      
      occupiedByAt_ = 0;
      onChanged();
      return this;
    }

    private long occupiedByPlayerId_ ;
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>int64 occupiedByPlayerId = 8;</code>
     */
    public long getOccupiedByPlayerId() {
      return occupiedByPlayerId_;
    }
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>int64 occupiedByPlayerId = 8;</code>
     */
    public Builder setOccupiedByPlayerId(long value) {
      
      occupiedByPlayerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家ID
     * </pre>
     *
     * <code>int64 occupiedByPlayerId = 8;</code>
     */
    public Builder clearOccupiedByPlayerId() {
      
      occupiedByPlayerId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object occupiedByPlayerName_ = "";
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>string occupiedByPlayerName = 9;</code>
     */
    public java.lang.String getOccupiedByPlayerName() {
      java.lang.Object ref = occupiedByPlayerName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        occupiedByPlayerName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>string occupiedByPlayerName = 9;</code>
     */
    public com.google.protobuf.ByteString
        getOccupiedByPlayerNameBytes() {
      java.lang.Object ref = occupiedByPlayerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        occupiedByPlayerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>string occupiedByPlayerName = 9;</code>
     */
    public Builder setOccupiedByPlayerName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      occupiedByPlayerName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>string occupiedByPlayerName = 9;</code>
     */
    public Builder clearOccupiedByPlayerName() {
      
      occupiedByPlayerName_ = getDefaultInstance().getOccupiedByPlayerName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *攻击的玩家名字
     * </pre>
     *
     * <code>string occupiedByPlayerName = 9;</code>
     */
    public Builder setOccupiedByPlayerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      occupiedByPlayerName_ = value;
      onChanged();
      return this;
    }

    private int demandProtoId_ ;
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>int32 demandProtoId = 10;</code>
     */
    public int getDemandProtoId() {
      return demandProtoId_;
    }
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>int32 demandProtoId = 10;</code>
     */
    public Builder setDemandProtoId(int value) {
      
      demandProtoId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *请求捐卡的模版ID
     * </pre>
     *
     * <code>int32 demandProtoId = 10;</code>
     */
    public Builder clearDemandProtoId() {
      
      demandProtoId_ = 0;
      onChanged();
      return this;
    }

    private int demandUnRead_ ;
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>int32 demandUnRead = 11;</code>
     */
    public int getDemandUnRead() {
      return demandUnRead_;
    }
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>int32 demandUnRead = 11;</code>
     */
    public Builder setDemandUnRead(int value) {
      
      demandUnRead_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *请求捐卡未读消息数量
     * </pre>
     *
     * <code>int32 demandUnRead = 11;</code>
     */
    public Builder clearDemandUnRead() {
      
      demandUnRead_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4server.AllianceMarkInfoVo> allianceMarks_ =
      java.util.Collections.emptyList();
    private void ensureAllianceMarksIsMutable() {
      if (!((bitField0_ & 0x00000800) == 0x00000800)) {
        allianceMarks_ = new java.util.ArrayList<pb4server.AllianceMarkInfoVo>(allianceMarks_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.AllianceMarkInfoVo, pb4server.AllianceMarkInfoVo.Builder, pb4server.AllianceMarkInfoVoOrBuilder> allianceMarksBuilder_;

    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public java.util.List<pb4server.AllianceMarkInfoVo> getAllianceMarksList() {
      if (allianceMarksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      } else {
        return allianceMarksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public int getAllianceMarksCount() {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.size();
      } else {
        return allianceMarksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public pb4server.AllianceMarkInfoVo getAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);
      } else {
        return allianceMarksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4server.AllianceMarkInfoVo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder setAllianceMarks(
        int index, pb4server.AllianceMarkInfoVo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.set(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder addAllianceMarks(pb4server.AllianceMarkInfoVo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4server.AllianceMarkInfoVo value) {
      if (allianceMarksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, value);
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder addAllianceMarks(
        pb4server.AllianceMarkInfoVo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder addAllianceMarks(
        int index, pb4server.AllianceMarkInfoVo.Builder builderForValue) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.add(index, builderForValue.build());
        onChanged();
      } else {
        allianceMarksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder addAllAllianceMarks(
        java.lang.Iterable<? extends pb4server.AllianceMarkInfoVo> values) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allianceMarks_);
        onChanged();
      } else {
        allianceMarksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder clearAllianceMarks() {
      if (allianceMarksBuilder_ == null) {
        allianceMarks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        allianceMarksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public Builder removeAllianceMarks(int index) {
      if (allianceMarksBuilder_ == null) {
        ensureAllianceMarksIsMutable();
        allianceMarks_.remove(index);
        onChanged();
      } else {
        allianceMarksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public pb4server.AllianceMarkInfoVo.Builder getAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public pb4server.AllianceMarkInfoVoOrBuilder getAllianceMarksOrBuilder(
        int index) {
      if (allianceMarksBuilder_ == null) {
        return allianceMarks_.get(index);  } else {
        return allianceMarksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public java.util.List<? extends pb4server.AllianceMarkInfoVoOrBuilder> 
         getAllianceMarksOrBuilderList() {
      if (allianceMarksBuilder_ != null) {
        return allianceMarksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(allianceMarks_);
      }
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public pb4server.AllianceMarkInfoVo.Builder addAllianceMarksBuilder() {
      return getAllianceMarksFieldBuilder().addBuilder(
          pb4server.AllianceMarkInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public pb4server.AllianceMarkInfoVo.Builder addAllianceMarksBuilder(
        int index) {
      return getAllianceMarksFieldBuilder().addBuilder(
          index, pb4server.AllianceMarkInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *联盟标记列表
     * </pre>
     *
     * <code>repeated .pb4server.AllianceMarkInfoVo allianceMarks = 12;</code>
     */
    public java.util.List<pb4server.AllianceMarkInfoVo.Builder> 
         getAllianceMarksBuilderList() {
      return getAllianceMarksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.AllianceMarkInfoVo, pb4server.AllianceMarkInfoVo.Builder, pb4server.AllianceMarkInfoVoOrBuilder> 
        getAllianceMarksFieldBuilder() {
      if (allianceMarksBuilder_ == null) {
        allianceMarksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4server.AllianceMarkInfoVo, pb4server.AllianceMarkInfoVo.Builder, pb4server.AllianceMarkInfoVoOrBuilder>(
                allianceMarks_,
                ((bitField0_ & 0x00000800) == 0x00000800),
                getParentForChildren(),
                isClean());
        allianceMarks_ = null;
      }
      return allianceMarksBuilder_;
    }

    private java.util.List<pb4server.RedPointVo> redPoints_ =
      java.util.Collections.emptyList();
    private void ensureRedPointsIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        redPoints_ = new java.util.ArrayList<pb4server.RedPointVo>(redPoints_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.RedPointVo, pb4server.RedPointVo.Builder, pb4server.RedPointVoOrBuilder> redPointsBuilder_;

    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public java.util.List<pb4server.RedPointVo> getRedPointsList() {
      if (redPointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(redPoints_);
      } else {
        return redPointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public int getRedPointsCount() {
      if (redPointsBuilder_ == null) {
        return redPoints_.size();
      } else {
        return redPointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public pb4server.RedPointVo getRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);
      } else {
        return redPointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder setRedPoints(
        int index, pb4server.RedPointVo value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.set(index, value);
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder setRedPoints(
        int index, pb4server.RedPointVo.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder addRedPoints(pb4server.RedPointVo value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder addRedPoints(
        int index, pb4server.RedPointVo value) {
      if (redPointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRedPointsIsMutable();
        redPoints_.add(index, value);
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder addRedPoints(
        pb4server.RedPointVo.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder addRedPoints(
        int index, pb4server.RedPointVo.Builder builderForValue) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        redPointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder addAllRedPoints(
        java.lang.Iterable<? extends pb4server.RedPointVo> values) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, redPoints_);
        onChanged();
      } else {
        redPointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder clearRedPoints() {
      if (redPointsBuilder_ == null) {
        redPoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        redPointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public Builder removeRedPoints(int index) {
      if (redPointsBuilder_ == null) {
        ensureRedPointsIsMutable();
        redPoints_.remove(index);
        onChanged();
      } else {
        redPointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public pb4server.RedPointVo.Builder getRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public pb4server.RedPointVoOrBuilder getRedPointsOrBuilder(
        int index) {
      if (redPointsBuilder_ == null) {
        return redPoints_.get(index);  } else {
        return redPointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public java.util.List<? extends pb4server.RedPointVoOrBuilder> 
         getRedPointsOrBuilderList() {
      if (redPointsBuilder_ != null) {
        return redPointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(redPoints_);
      }
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public pb4server.RedPointVo.Builder addRedPointsBuilder() {
      return getRedPointsFieldBuilder().addBuilder(
          pb4server.RedPointVo.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public pb4server.RedPointVo.Builder addRedPointsBuilder(
        int index) {
      return getRedPointsFieldBuilder().addBuilder(
          index, pb4server.RedPointVo.getDefaultInstance());
    }
    /**
     * <pre>
     *所有的小红点信息
     * </pre>
     *
     * <code>repeated .pb4server.RedPointVo redPoints = 13;</code>
     */
    public java.util.List<pb4server.RedPointVo.Builder> 
         getRedPointsBuilderList() {
      return getRedPointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.RedPointVo, pb4server.RedPointVo.Builder, pb4server.RedPointVoOrBuilder> 
        getRedPointsFieldBuilder() {
      if (redPointsBuilder_ == null) {
        redPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4server.RedPointVo, pb4server.RedPointVo.Builder, pb4server.RedPointVoOrBuilder>(
                redPoints_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        redPoints_ = null;
      }
      return redPointsBuilder_;
    }

    private int noReadTopic_ ;
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>int32 noReadTopic = 14;</code>
     */
    public int getNoReadTopic() {
      return noReadTopic_;
    }
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>int32 noReadTopic = 14;</code>
     */
    public Builder setNoReadTopic(int value) {
      
      noReadTopic_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否有未读的联盟邮件主题
     * </pre>
     *
     * <code>int32 noReadTopic = 14;</code>
     */
    public Builder clearNoReadTopic() {
      
      noReadTopic_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> allianceWaijiaoTime_ = java.util.Collections.emptyList();
    private void ensureAllianceWaijiaoTimeIsMutable() {
      if (!((bitField0_ & 0x00004000) == 0x00004000)) {
        allianceWaijiaoTime_ = new java.util.ArrayList<java.lang.Integer>(allianceWaijiaoTime_);
        bitField0_ |= 0x00004000;
       }
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getAllianceWaijiaoTimeList() {
      return java.util.Collections.unmodifiableList(allianceWaijiaoTime_);
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public int getAllianceWaijiaoTimeCount() {
      return allianceWaijiaoTime_.size();
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public int getAllianceWaijiaoTime(int index) {
      return allianceWaijiaoTime_.get(index);
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public Builder setAllianceWaijiaoTime(
        int index, int value) {
      ensureAllianceWaijiaoTimeIsMutable();
      allianceWaijiaoTime_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public Builder addAllianceWaijiaoTime(int value) {
      ensureAllianceWaijiaoTimeIsMutable();
      allianceWaijiaoTime_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public Builder addAllAllianceWaijiaoTime(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAllianceWaijiaoTimeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, allianceWaijiaoTime_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟外交前20条的发布时间
     * </pre>
     *
     * <code>repeated int32 allianceWaijiaoTime = 15;</code>
     */
    public Builder clearAllianceWaijiaoTime() {
      allianceWaijiaoTime_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }

    private pb4server.AllianceLivenessVo allianceLivenessVo_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4server.AllianceLivenessVo, pb4server.AllianceLivenessVo.Builder, pb4server.AllianceLivenessVoOrBuilder> allianceLivenessVoBuilder_;
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public boolean hasAllianceLivenessVo() {
      return allianceLivenessVoBuilder_ != null || allianceLivenessVo_ != null;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public pb4server.AllianceLivenessVo getAllianceLivenessVo() {
      if (allianceLivenessVoBuilder_ == null) {
        return allianceLivenessVo_ == null ? pb4server.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
      } else {
        return allianceLivenessVoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public Builder setAllianceLivenessVo(pb4server.AllianceLivenessVo value) {
      if (allianceLivenessVoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        allianceLivenessVo_ = value;
        onChanged();
      } else {
        allianceLivenessVoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public Builder setAllianceLivenessVo(
        pb4server.AllianceLivenessVo.Builder builderForValue) {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = builderForValue.build();
        onChanged();
      } else {
        allianceLivenessVoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public Builder mergeAllianceLivenessVo(pb4server.AllianceLivenessVo value) {
      if (allianceLivenessVoBuilder_ == null) {
        if (allianceLivenessVo_ != null) {
          allianceLivenessVo_ =
            pb4server.AllianceLivenessVo.newBuilder(allianceLivenessVo_).mergeFrom(value).buildPartial();
        } else {
          allianceLivenessVo_ = value;
        }
        onChanged();
      } else {
        allianceLivenessVoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public Builder clearAllianceLivenessVo() {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVo_ = null;
        onChanged();
      } else {
        allianceLivenessVo_ = null;
        allianceLivenessVoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public pb4server.AllianceLivenessVo.Builder getAllianceLivenessVoBuilder() {
      
      onChanged();
      return getAllianceLivenessVoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    public pb4server.AllianceLivenessVoOrBuilder getAllianceLivenessVoOrBuilder() {
      if (allianceLivenessVoBuilder_ != null) {
        return allianceLivenessVoBuilder_.getMessageOrBuilder();
      } else {
        return allianceLivenessVo_ == null ?
            pb4server.AllianceLivenessVo.getDefaultInstance() : allianceLivenessVo_;
      }
    }
    /**
     * <pre>
     *联盟活跃度等级
     * </pre>
     *
     * <code>.pb4server.AllianceLivenessVo allianceLivenessVo = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        pb4server.AllianceLivenessVo, pb4server.AllianceLivenessVo.Builder, pb4server.AllianceLivenessVoOrBuilder> 
        getAllianceLivenessVoFieldBuilder() {
      if (allianceLivenessVoBuilder_ == null) {
        allianceLivenessVoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            pb4server.AllianceLivenessVo, pb4server.AllianceLivenessVo.Builder, pb4server.AllianceLivenessVoOrBuilder>(
                getAllianceLivenessVo(),
                getParentForChildren(),
                isClean());
        allianceLivenessVo_ = null;
      }
      return allianceLivenessVoBuilder_;
    }

    private int rankLv_ ;
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>int32 rankLv = 17;</code>
     */
    public int getRankLv() {
      return rankLv_;
    }
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>int32 rankLv = 17;</code>
     */
    public Builder setRankLv(int value) {
      
      rankLv_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *联盟段位等级
     * </pre>
     *
     * <code>int32 rankLv = 17;</code>
     */
    public Builder clearRankLv() {
      
      rankLv_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<pb4server.HunterInviteInfoVo> hunterInvites_ =
      java.util.Collections.emptyList();
    private void ensureHunterInvitesIsMutable() {
      if (!((bitField0_ & 0x00020000) == 0x00020000)) {
        hunterInvites_ = new java.util.ArrayList<pb4server.HunterInviteInfoVo>(hunterInvites_);
        bitField0_ |= 0x00020000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.HunterInviteInfoVo, pb4server.HunterInviteInfoVo.Builder, pb4server.HunterInviteInfoVoOrBuilder> hunterInvitesBuilder_;

    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public java.util.List<pb4server.HunterInviteInfoVo> getHunterInvitesList() {
      if (hunterInvitesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(hunterInvites_);
      } else {
        return hunterInvitesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public int getHunterInvitesCount() {
      if (hunterInvitesBuilder_ == null) {
        return hunterInvites_.size();
      } else {
        return hunterInvitesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public pb4server.HunterInviteInfoVo getHunterInvites(int index) {
      if (hunterInvitesBuilder_ == null) {
        return hunterInvites_.get(index);
      } else {
        return hunterInvitesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder setHunterInvites(
        int index, pb4server.HunterInviteInfoVo value) {
      if (hunterInvitesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHunterInvitesIsMutable();
        hunterInvites_.set(index, value);
        onChanged();
      } else {
        hunterInvitesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder setHunterInvites(
        int index, pb4server.HunterInviteInfoVo.Builder builderForValue) {
      if (hunterInvitesBuilder_ == null) {
        ensureHunterInvitesIsMutable();
        hunterInvites_.set(index, builderForValue.build());
        onChanged();
      } else {
        hunterInvitesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder addHunterInvites(pb4server.HunterInviteInfoVo value) {
      if (hunterInvitesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHunterInvitesIsMutable();
        hunterInvites_.add(value);
        onChanged();
      } else {
        hunterInvitesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder addHunterInvites(
        int index, pb4server.HunterInviteInfoVo value) {
      if (hunterInvitesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHunterInvitesIsMutable();
        hunterInvites_.add(index, value);
        onChanged();
      } else {
        hunterInvitesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder addHunterInvites(
        pb4server.HunterInviteInfoVo.Builder builderForValue) {
      if (hunterInvitesBuilder_ == null) {
        ensureHunterInvitesIsMutable();
        hunterInvites_.add(builderForValue.build());
        onChanged();
      } else {
        hunterInvitesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder addHunterInvites(
        int index, pb4server.HunterInviteInfoVo.Builder builderForValue) {
      if (hunterInvitesBuilder_ == null) {
        ensureHunterInvitesIsMutable();
        hunterInvites_.add(index, builderForValue.build());
        onChanged();
      } else {
        hunterInvitesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder addAllHunterInvites(
        java.lang.Iterable<? extends pb4server.HunterInviteInfoVo> values) {
      if (hunterInvitesBuilder_ == null) {
        ensureHunterInvitesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hunterInvites_);
        onChanged();
      } else {
        hunterInvitesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder clearHunterInvites() {
      if (hunterInvitesBuilder_ == null) {
        hunterInvites_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
      } else {
        hunterInvitesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public Builder removeHunterInvites(int index) {
      if (hunterInvitesBuilder_ == null) {
        ensureHunterInvitesIsMutable();
        hunterInvites_.remove(index);
        onChanged();
      } else {
        hunterInvitesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public pb4server.HunterInviteInfoVo.Builder getHunterInvitesBuilder(
        int index) {
      return getHunterInvitesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public pb4server.HunterInviteInfoVoOrBuilder getHunterInvitesOrBuilder(
        int index) {
      if (hunterInvitesBuilder_ == null) {
        return hunterInvites_.get(index);  } else {
        return hunterInvitesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public java.util.List<? extends pb4server.HunterInviteInfoVoOrBuilder> 
         getHunterInvitesOrBuilderList() {
      if (hunterInvitesBuilder_ != null) {
        return hunterInvitesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(hunterInvites_);
      }
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public pb4server.HunterInviteInfoVo.Builder addHunterInvitesBuilder() {
      return getHunterInvitesFieldBuilder().addBuilder(
          pb4server.HunterInviteInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public pb4server.HunterInviteInfoVo.Builder addHunterInvitesBuilder(
        int index) {
      return getHunterInvitesFieldBuilder().addBuilder(
          index, pb4server.HunterInviteInfoVo.getDefaultInstance());
    }
    /**
     * <pre>
     *猎杀邀请信息
     * </pre>
     *
     * <code>repeated .pb4server.HunterInviteInfoVo hunterInvites = 18;</code>
     */
    public java.util.List<pb4server.HunterInviteInfoVo.Builder> 
         getHunterInvitesBuilderList() {
      return getHunterInvitesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        pb4server.HunterInviteInfoVo, pb4server.HunterInviteInfoVo.Builder, pb4server.HunterInviteInfoVoOrBuilder> 
        getHunterInvitesFieldBuilder() {
      if (hunterInvitesBuilder_ == null) {
        hunterInvitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            pb4server.HunterInviteInfoVo, pb4server.HunterInviteInfoVo.Builder, pb4server.HunterInviteInfoVoOrBuilder>(
                hunterInvites_,
                ((bitField0_ & 0x00020000) == 0x00020000),
                getParentForChildren(),
                isClean());
        hunterInvites_ = null;
      }
      return hunterInvitesBuilder_;
    }

    private int reqListNum_ ;
    /**
     * <pre>
     * 申请加入联盟数量
     * </pre>
     *
     * <code>int32 reqListNum = 19;</code>
     */
    public int getReqListNum() {
      return reqListNum_;
    }
    /**
     * <pre>
     * 申请加入联盟数量
     * </pre>
     *
     * <code>int32 reqListNum = 19;</code>
     */
    public Builder setReqListNum(int value) {
      
      reqListNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 申请加入联盟数量
     * </pre>
     *
     * <code>int32 reqListNum = 19;</code>
     */
    public Builder clearReqListNum() {
      
      reqListNum_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:pb4server.EnterGamePublicRtVo)
  }

  // @@protoc_insertion_point(class_scope:pb4server.EnterGamePublicRtVo)
  private static final pb4server.EnterGamePublicRtVo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pb4server.EnterGamePublicRtVo();
  }

  public static pb4server.EnterGamePublicRtVo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EnterGamePublicRtVo>
      PARSER = new com.google.protobuf.AbstractParser<EnterGamePublicRtVo>() {
    public EnterGamePublicRtVo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnterGamePublicRtVo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EnterGamePublicRtVo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EnterGamePublicRtVo> getParserForType() {
    return PARSER;
  }

  public pb4server.EnterGamePublicRtVo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

