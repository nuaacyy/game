syntax = "proto3";

package pb4server;

import "client2server.proto";

option java_package = "pb4server";
option java_outer_classname = "InternalPkt";
option java_multiple_files = true;

// 内部服务器发送给客户端的信封消息
message ScMsgEnvelope {
    int32 msgType = 1;
    int32 clientMsgNo = 2;
    bytes msgBin = 3;
}

// gate -> home
// 信封消息
message ProtoPlayerEnvelope {
    int32 msgType = 1;
    int32 clientMsgNo = 2;
    int64 playerId = 3;
    bytes msgBin = 4;

}

// gate -> world
// 信封消息
message ProtoWorldEnvelope {
    int32 msgType = 1;
    int32 clientMsgNo = 2;
    int64 playerId = 3;
    int64 worldId = 4;
    bytes msgBin = 5;
}

// Home到Public的ask请求
message Home2PublicAskReq {
    int64 playerId = 1;
    int64 publicId = 2;
    int32 clientMsgNo = 3;

    oneof msg {
        SetAllianceFlagAskReq setAllianceFlagAskReq = 11;
        RemoveAllianceHelpAskReq removeAllianceHelpAskReq = 12;
        AllianceImpeachAskReq allianceImpeachAskReq = 13;
        AllianceMemberQuitAskReq allianceMemberQuitAskReq = 14;
        SetAllianceNameAskReq setAllianceNameAskReq = 15;
        SendAllianceHelpAskReq sendAllianceHelpAskReq = 16;
        GoAllianceHelpAskReq goAllianceHelpAskReq = 17;
        OpenAllianceHelpAskReq openAllianceHelpAskReq = 18;
        OpenAllianceCompetitionMainAskReq openAllianceCompetitionMainAskReq = 19;
        GetAllianceCompetitionQuestAskReq getAllianceCompetitionQuestAskReq = 20;
        RewardAllianceCompetitionQuestAskReq rewardAllianceCompetitionQuestAskReq = 21;
        CancelAllianceCompetitionQuestAskReq cancelAllianceCompetitionQuestAskReq = 22;
        GetAllianceCompetitionRewardAskReq getAllianceCompetitionRewardAskReq = 23;
        GetCasinoAskReq getCasinoAskReq = 25;
        DrawCasinoAskReq drawCasinoAskReq = 26;
        UpdateAllianceMemberInfoInHomeAskReq updateAllianceMemberInfoInHomeAskReq = 27;
        RoomOwnerChangeAskReq roomOwnerChangeAskReq = 28;
        CreateRoomAskReq createRoomAskReq = 29;
        DissmissChatRoomAskReq dissmissChatRoomAskReq = 30;
        GetAllianceChatAskReq getAllianceChatAskReq = 31;
        InviteJoinChatAskReq inviteJoinChatAskReq = 32;
        KickOutChatRoomAskReq kickOutChatRoomAskReq = 33;
        QueryMemberInRoomAskReq queryMemberInRoomAskReq = 34;
        QuitOneRoomAskReq quitOneRoomAskReq = 35;
        RenameChatRoomAskReq renameChatRoomAskReq = 36;
        SendAllianceChatAskReq sendAllianceChatAskReq = 37;
        SendRoomMsgAskReq sendRoomMsgAskReq = 38;
        GetGroupChatAskReq getGroupChatAskReq = 39;
        GetChatroomAskReq getChatroomAskReq = 40;
        ReceiveAllianceGiftAskReq receiveAllianceGiftAskReq = 41;
        RemoveAllianceWaijiaoReq removeAllianceWaijiaoReq = 42;
    }
}

// Home到Public的ask返回
message Home2PublicAskResp {
    int64 playerId = 1;
    int32 clientMsgNo = 2;

    oneof msg {
        SetAllianceFlagAskRt setAllianceFlagAskRt = 11;
        RemoveAllianceHelpAskRt removeAllianceHelpAskRt = 12;
        AllianceImpeachAskRt allianceImpeachAskRt = 13;
        AllianceMemberQuitAskRt allianceMemberQuitAskRt = 14;
        SetAllianceNameAskRt setAllianceNameAskRt = 15;
        SendAllianceHelpAskRt sendAllianceHelpAskRt = 16;
        GoAllianceHelpAskRt goAllianceHelpAskRt = 17;
        OpenAllianceHelpAskRt openAllianceHelpAskRt = 18;
        OpenAllianceCompetitionMainAskRt openAllianceCompetitionMainAskRt = 19;
        GetAllianceCompetitionQuestAskRt getAllianceCompetitionQuestAskRt = 20;
        RewardAllianceCompetitionQuestAskRt rewardAllianceCompetitionQuestAskRt = 21;
        CancelAllianceCompetitionQuestAskRt cancelAllianceCompetitionQuestAskRt = 22;
        GetAllianceCompetitionRewardAskRt getAllianceCompetitionRewardAskRt = 23;
        GetCasinoAskRt getCasinoAskRt = 25;
        DrawCasinoAskRt drawCasinoAskRt = 26;
        UpdateAllianceMemberInfoInHomeAskRt updateAllianceMemberInfoInHomeAskRt = 27;
        RoomOwnerChangeAskRt roomOwnerChangeAskRt = 28;
        CreateRoomAskRt createRoomAskRt = 29;
        DissmissChatRoomAskRt dissmissChatRoomAskRt = 30;
        GetAllianceChatAskRt getAllianceChatAskRt = 31;
        InviteJoinChatAskRt inviteJoinChatAskRt = 32;
        KickOutChatRoomAskRt kickOutChatRoomAskRt = 33;
        QueryMemberInRoomAskRt queryMemberInRoomAskRt = 34;
        QuitOneRoomAskRt quitOneRoomAskRt = 35;
        RenameChatRoomAskRt renameChatRoomAskRt = 36;
        SendAllianceChatAskRt sendAllianceChatAskRt = 37;
        SendRoomMsgAskRt sendRoomMsgAskRt = 38;
        GetGroupChatAskRt getGroupChatAskRt = 39;
        GetChatroomAskRt getChatroomAskRt = 40;
        ReceiveAllianceGiftAskRt receiveAllianceGiftAskRt = 41;
        RemoveAllianceWaijiaoRt removeAllianceWaijiaoRt = 42;
    }
}

// 删除联盟外交留言
message RemoveAllianceWaijiaoReq {
    repeated int64 removeIds = 1;// 要删除的留言IDS
}

message RemoveAllianceWaijiaoRt {
    int32 rt = 1;
    repeated int64 removeIds = 2;// 真正删除掉的留言IDS
}


// 修改联盟旗帜ask
message SetAllianceFlagAskReq {
    int32 color = 1;
    int32 style = 2;
    int32 effect = 3;
}

message SetAllianceFlagAskRt {
    int32 rt = 1;
}

// 删除帮助信息
message RemoveAllianceHelpAskReq {
    int64 helpId = 1;
}

message RemoveAllianceHelpAskRt {
    int32 rt = 1;
}

// 弹劾盟主
message AllianceImpeachAskReq {
}

message AllianceImpeachAskRt {
    int32 rt = 1;
}

// 玩家离帮
message AllianceMemberQuitAskReq {
    int32 isRook = 1; // 是否是新手期玩家  0-否 1-是
}

message AllianceMemberQuitAskRt {
    int32 rt = 1;
}

// 修改联盟名称/检测简称
message SetAllianceNameAskReq {
    int32 setType = 1; // 修改类型 1-名称  2-简称 3-语种
    string name = 2; // 要修改成的内容
}

message SetAllianceNameAskRt {
    int32 rt = 1;
}

// 登记联盟帮助
message SendAllianceHelpAskReq {
    int32 helpType = 1;
    int64 helpValue1 = 2;
    int64 helpValue2 = 3;
    int64 helpValue3 = 4;
    int64 helpValue4 = 5;
    int32 nowHelpNum = 6;
}

message SendAllianceHelpAskRt {
    int32 rt = 1;
    int64 helpId = 2;
}

// 帮助玩家
message GoAllianceHelpAskReq {
    repeated int64 helpIds = 1; // 联盟帮助IDS
}

message GoAllianceHelpAskRt {
    int32 rt = 1;
    int32 helpSuccess = 2; //bool改int
}

// 打开帮会帮助主界面
message OpenAllianceHelpAskReq {
}

message OpenAllianceHelpAskRt {
    int32 rt = 1;
    repeated MyHelpVo myHelpVo = 2; // 我的研发信息
    repeated AllianceHelpVo allianceHelpVos = 3; //帮助信息列表
}

message MyHelpVo {
    int64 helpId = 1; // 帮助信息的唯一ID
    int32 helpType = 2; // 帮助类型  1-研发帮助
    int32 maxHelpNum = 3; // 上限帮助次数
    int32 nowHelpNum = 4; // 当前帮助次数
    int64 helpValue1 = 5; // 信息1  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段表示科技ID
    int64 helpValue2 = 6; // 信息2  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段表示科技等级
    int64 helpValue3 = 7; // 信息3  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段暂无意义,预留
    int64 helpValue4 = 8; // 信息4  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段暂无意义,预留
}

message AllianceHelpVo {
    int64 helpId = 1; // 帮助信息的唯一ID
    int32 helpType = 2; // 帮助类型  1-研发帮助
    int32 maxHelpNum = 3; // 上限帮助次数
    int32 nowHelpNum = 4; // 当前帮助次数
    int64 helpPlayerId = 5; // 需要帮助的玩家ID
    string helpPlayerName = 6; // 需要帮助的玩家名
    int64 helpValue1 = 7; // 信息1  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段表示科技ID
    int64 helpValue2 = 8; // 信息2  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段表示科技等级
    int64 helpValue3 = 9; // 信息3  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段暂无意义,预留
    int64 helpValue4 = 10; // 信息4  对于不同的帮助类型有不同的意义,如 研发帮助 这个字段暂无意义,预留
    int32 photoId = 11; // 玩家头像
}

// 打开联盟总动员主界面
message OpenAllianceCompetitionMainAskReq {
}

message OpenAllianceCompetitionMainAskRt {
    int32 rt = 1;
    int32 nowScore = 2; // 当前积分
    int32 joinPlayerNum = 3; // 参与人数
    int32 rewardTime = 4; // 领奖时间
    repeated AllianceCompetitionQuestVo quests = 5; // 联盟总动员任务信息
}

message AllianceCompetitionQuestVo {
    int32 index = 1; // 任务排序
    int32 questId = 2; // 被领取之后就是0
    int32 refTime = 3; // 任务刷新倒计时,只有任务ID是0的时候这个才不为zeroTime
}

// 领取联盟总动员任务
message GetAllianceCompetitionQuestAskReq {
    int32 inedx = 1; // 领取的任务位置
}

message GetAllianceCompetitionQuestAskRt {
    int32 rt = 1;
    int32 questId = 2; // 领到的任务ID
}

// 领取联盟总动员任务奖励
message RewardAllianceCompetitionQuestAskReq {
    int32 addScore = 1; // 加到的积分
}

message RewardAllianceCompetitionQuestAskRt {
    int32 rt = 1;
}

// 取消联盟总动员任务
message CancelAllianceCompetitionQuestAskReq {
    int32 inedx = 1; // 领取的任务位置
}

message CancelAllianceCompetitionQuestAskRt {
    int32 rt = 1;
}

// 领取联盟总动员阶段奖励
message GetAllianceCompetitionRewardAskReq {
    int32 maxScore = 1; // 客户端来领取的任务的最大score值
}

message GetAllianceCompetitionRewardAskRt {
    int32 rt = 1;
}


// 获取赌场奖池信息
message GetCasinoAskReq {
}

message GetCasinoAskRt {
    int32 rt = 1;
    int64 totalMoney = 2;
    repeated client2server.CasinosWinner casinosWinner = 3;
}

// 赌场抽到大奖
message DrawCasinoAskReq {
    int32 rate = 1;
    int32 areaNo = 2; // 服务器编号
    string playerName = 3; // 玩家名
    string allianceShortName = 4; // 玩家昵称
    int64 myPlayerId = 5; // 玩家id
}

message DrawCasinoAskRt {
    int32 rt = 1;
    int64 totalMoney = 2;
}

message UpdateAllianceMemberInfoAskVo {
    int32 updateType = 1;
    string info = 2;
}

message UpdateAllianceMemberInfoInHomeAskReq {
    repeated UpdateAllianceMemberInfoAskVo updates = 1;
}

message UpdateAllianceMemberInfoInHomeAskRt {
    int32 rt = 1;
}

message RoomOwnerChangeAskReq {
    int64 roomId = 1;
    int64 newOwner = 2;
}

message RoomOwnerChangeAskRt {
    int32 rt = 1;
    int64 chatRoomId = 2;
    string roomName = 3;
    int32 unreadNum = 4;
    repeated int32 iconProtoIds = 5;
    int32 memberNum = 6;
    int64 roomPlayerId = 7;
    repeated int64 members = 8;
    int64 lastSendTime = 9;
}


message CreateRoomAskReq {
    string nameRoom = 1;
    int32 iconProto = 2;
    string playerName = 3;
    int32 vipLv = 4;
    int32 areaNo = 5;
    string allianceShortName = 6;
    int64 fightValue = 7;
    int32 castleLv = 8;
    string playerShortName = 9;
}

message CreateRoomAskRt {
    int32 rt = 1;
    int64 chatRoomId = 2;
    string roomName = 3;
    int32 unreadNum = 4;
    repeated int32 iconProtoIds = 5;
    int32 memberNum = 6;
    int64 roomPlayerId = 7;
}

message DissmissChatRoomAskReq {
    int64 roomId = 1;
}

message DissmissChatRoomAskRt {
    int32 rt = 1;
    repeated int64 members = 2;
    int64 chatRoomId = 3;
    string roomName = 4;
    int32 unreadNum = 5;
    repeated int32 iconProtoIds = 6;
    int32 memberNum = 7;
    int64 roomPlayerId = 8;
}

message GetAllianceChatAskReq {
    int64 chatId = 1;
}

message GetAllianceChatAskRt {
    int32 rt = 1;
    GetChatInfoRtVo getChatInfoRt = 2;
}

message GetChatInfoRtVo {
    int32 rt = 1;
    repeated ChatInfoVo chatInfos = 2;
    int32 chatType = 3;
}

message ChatInfoVo {
    int32 type = 1; //  聊天频道   0世界 1国家 2联盟 3跟好友聊天  4群聊
    int32 isSystem = 2; // 是否是系统发布:0-玩家发布  1-系统发布
    int32 country = 3; // 真实国家
    string allianceName = 4; // 联盟名称
    string allianceShortName = 5; // 联盟简称
    string alliancePositions = 6; // 所属联盟官位
    string player = 7; // 说话者名字
    string playerShortName = 8; // 玩家昵称
    int32 playerIcon = 9; // 头像模板id
    NoticeVo message = 10; // 内容
    int32 sendTime = 11; // 发送时间
    int64 id = 12; // 唯一ID
    int64 playerId = 13; // 玩家ID
    int32 messageType = 14; // 消息类型  1-普通消息  2-红包消息（暂时被砍） 3-表情  4-战报分享  5-集结  6-喇叭 7-坐标
    int32 office = 15; //官职Id
    int32 vipLv = 16; // vip等级
    int32 areaNo = 17; // 服务器编号
    SimpleFightReportVo easyFightInfo = 18; // 战报分享
    SimpleMassInfoVo massInfo = 19; // 集结信息
    int64 chatRoomId = 20; // 聊天室Id
    int64 talkToId = 21; // 我的聊天对象id
    int32 x = 22; // 坐标x
    int32 y = 23; // 坐标y
}

message NoticeVo {
    int32 readType = 1; //邮件结构体的读取类型 1-读lan (一般都是游戏内发的) 2-直接读取内容(一般都是后台发的)
    string noticeLanId = 2; //公告内容lanId
    repeated string noticeParams = 3; //公告参数
}

message SimpleFightReportVo {
    int32 reportType = 1; // 魔物,集结战报,侦察等,参考下面的reportType
    string mainPlayer = 2; // 左边人的名字
    string mainPlayerAlliance = 3; // 左边人的联盟
    int32 atkOrDef = 4; // 攻击或防守 0进攻 1防守
    string targetName = 5; // 右边魔物或者对手的名字
    string allianceOrLv = 6; // 右边魔物等级或者对手的联盟名
    int64 reportId = 7; // report战报id
    int32 mainIconId = 8; // 左边人头像模板
    int32 iconId = 9; // 右边人头像模板
    int32 monsterId = 10; // 魔物模板Id
    int64 world = 11; // 世界服id
}

message SimpleMassInfoVo {
    int64 massId = 1; // 集结id
    string massName = 2; // 集结名字
}


message InviteJoinChatAskReq {
    int64 roomId = 1;
    int64 playerIdAdd = 2;
    string playerName = 3; // 玩家名字
    int32 protoId = 4; // 头像ID
    int32 vipLv = 5;
    int32 areaNo = 6;
    string allianceShortName = 7;
    int64 fightValue = 8;
    int32 castleLv = 9;
    string playerShortName = 10;
}

message InviteJoinChatAskRt {
    int32 rt = 1;
    int64 freshmen = 2;
    int64 chatRoomId = 3;
    string roomName = 4;
    int32 unreadNum = 5;
    repeated int32 iconProtoIds = 6;
    int32 memberNum = 7;
    int64 roomPlayerId = 8;
    repeated int64 memberIds = 9;
    int64 lastSendTime = 10;
}

message KickOutChatRoomAskReq {
    int64 roomId = 1;
    int64 playerIdRemove = 2;

}

message KickOutChatRoomAskRt {
    int32 rt = 1;
    int64 chatRoomId = 2;
    string roomName = 3;
    int32 unreadNum = 4;
    repeated int32 iconProtoIds = 5;
    int32 memberNum = 6;
    int64 roomPlayerId = 7;
    repeated int64 memberIds = 8;
    int64 lastSendTime = 9;
}

message QueryMemberInRoomAskReq {
    int64 roomId = 1;
}

message QueryMemberInRoomAskRt {
    int32 rt = 1;
    repeated GroupMemberVo groupMember = 2;
}

message GroupMemberVo {
    int64 playerId = 1;
    string playerName = 2;
    int32 protoId = 3;
    int32 vipLv = 4;
    int32 areaNo = 5;
    string allianceShortName = 6;
    int64 fightValue = 7;
    int32 castleLv = 8;
    string playerShortName = 9;
}


message QuitOneRoomAskReq {
    int64 roomId = 1;
}

message QuitOneRoomAskRt {
    int32 rt = 1;
    int64 chatRoomId = 2;
    string roomName = 3;
    int32 unreadNum = 4;
    repeated int32 iconProtoIds = 5;
    int32 memberNum = 6;
    int64 roomPlayerId = 7;
    repeated int64 memberIds = 8;
    int64 lastSendTime = 9;
}


message RenameChatRoomAskReq {
    int64 roomId = 1;
    string roomName = 2;
}

message RenameChatRoomAskRt {
    int32 rt = 1;
    repeated int64 members = 2;
    int64 chatRoomId = 3;
    string roomName = 4;
    int32 unreadNum = 5;
    repeated int32 iconProtoIds = 6;
    int32 memberNum = 7;
    int64 roomPlayerId = 8;
}


message SendAllianceChatAskReq {
    string message = 1; // 普通消息
    int32 messageType = 2; // 战报，表情，普通消息，喇叭
    string playerName = 3;
    string playerShortName = 4;
    int64 easyFightId = 5; // 战报id
    int64 massId = 6; // 集结id
    string massName = 7; // 集结名字
    int32 iconProtoId = 8; // 头像模板id
    int32 areaNo = 9; // 区号
    int64 pltAreaId = 10; // 所属服务器 唯一标识
    int32 vipLv = 11; // vip等级
    string allianceName = 12; // 联盟名称
    string allianceShortName = 13; // 联盟名称
    int32 wonderPos = 14; // 国王
    int32 kingdomPos = 15; // 大帝
}

message SendAllianceChatAskRt {
    int32 rt = 1;
    int64 chatId = 2;
}


message SendRoomMsgAskReq {
    string message = 1; // 普通消息
    int32 messageType = 2; // 战报，表情，普通消息，喇叭
    string playerName = 3;
    string playerShortName = 4;
    int64 easyFightId = 5; // 战报id
    int64 massId = 6; // 集结id
    string massName = 7; // 集结名字
    int32 iconProtoId = 8; // 头像模板id
    int32 areaNo = 9; // 区号
    int64 pltAreaId = 10; // 所属服务器 唯一标识
    int32 vipLv = 11; // vip等级
    string allianceName = 12; // 联盟名称
    string allianceShortName = 13; // 联盟名称
    int32 alliancePos = 14; // vip等级
    int64 roomId = 15;
    int32 wonderPos = 16;
}

message SendRoomMsgAskRt {
    int32 rt = 1;
    int64 chatId = 2;
}

message GetGroupChatAskReq {
    int64 chatId = 1;
    int64 roomId = 2;
}

message GetGroupChatAskRt {
    int32 rt = 1;
    repeated ChatInfoVo chatRecordList = 2;
}

message GetChatroomAskReq {
    int64 roomId = 1;
}

message GetChatroomAskRt {
    int32 rt = 1;
    client2server.ChatRoom ChatRoomVo = 2;
}

// 世界到公共的ask请求
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 世界到公共的ask请求
message World2PublicAskReq {
    int64 worldId = 1;
    int64 playerId = 2;
    int64 publicId = 3;
    int32 clientMsgNo = 4;

    oneof msg {
        CreateAllianceAskReq createAllianceAskReq = 11;
        JoinAllianceByIdAskReq joinAllianceByIdAskReq = 12;
        DealJoinAllianceAskReq dealJoinAllianceAskReq = 13;
        CheckAllianceNameAskReq checkAllianceNameAskReq = 14;
        AllianceInviteAskReq allianceInviteAskReq = 15;
        OpenAllianceGiftAskReq openAllianceGiftAskReq = 16;
        AllianceRecallPosAskReq allianceRecallPosAskReq = 17;
        SetAlliancePowerLimitAskReq setAlliancePowerLimitAskReq = 18;
        AllianceJoinCancelAskReq allianceJoinCancelAskReq = 19;
        WriteAllianceWaijiaoAskReq writeAllianceWaijiaoAskReq = 20;
        OpenAllianceWaijiaoAskReq openAllianceWaijiaoAskReq = 21;
        AllianceTopicDeleteAskReq allianceTopicDeleteAskReq = 22;
        AllianceTopicGetReplyAskReq allianceTopicGetReplyAskReq = 23;
        AllianceTopicReplyAskReq allianceTopicReplyAskReq = 24;
        AlliancePublishTopicAskReq alliancePublishTopicAskReq = 25;
        AllianceQueryTopicAskReq allianceQueryTopicAskReq = 26;
        QueryAllianceLogAskReq queryAllianceLogAskReq = 27;
        SetAllianceDescptAskReq setAllianceDescptAskReq = 28;
        RemoveAllianceMarkAskReq removeAllianceMarkAskReq = 29;
        SetAllianceMarkAskReq setAllianceMarkAskReq = 30;
        AllianceDismissAskReq allianceDismissAskReq = 31;
        ResetAlliancePosAskReq resetAlliancePosAskReq = 32;
        RemoveAllianceMemberAskReq removeAllianceMemberAskReq = 33;
        GetAllianceGiftAskReq getAllianceGiftAskReq = 34;
        QueryAllianceMemberAskReq queryAllianceMemberAskReq = 35;
        UpdateAllianceMemberInfoAskReq updateAllianceMemberInfoAskReq = 36;
        QueryAllianceReqListAskReq queryAllianceReqListAskReq = 37;
        QueryAllianceInfoAskReq queryAllianceInfoAskReq = 38;
        QueryAllianceListAskReq queryAllianceListAskReq = 39;
        SummonAllianceBossAskReq summonAllianceBossAskReq = 40;
        QueryAllianceBossLivenessAskReq queryAllianceBossLivenessAskReq = 41;
        QueryAllianceBossAskReq queryAllianceBossAskReq = 42;
        RemoveAllianceBossAskReq removeAllianceBossAskReq = 43;
        QueryInAllianceRankReq queryInAllianceRankReq = 44;
        QueryAllianceRankAskReq queryAllianceRankAskReq = 45;
        QueryAllianceRankFirstAskReq queryAllianceRankFirstAskReq = 46;
        AllianceTopicSignAskReq allianceTopicSignAskReq = 47;
        AllianceActivityScoreAddAskReq allianceActivityScoreAddAskReq = 48;
        SeleteAllianceActivityInfosReq seleteAllianceActivityInfosReq = 49;
        SelectActivityHistoryReq selectActivityHistoryReq = 50;
        OpenActivityAskReq openActivityAskReq = 51;
        SelectActivityRankAskReq selectActivityRankAskReq = 52;
        SelectNowRankReq selectNowRankReq = 53;
        ReceiveAllianceGiftAskReq receiveAllianceGiftAskReq = 54;
        SendAllianceMailAskReq sendAllianceMailAskReq = 55;
        SendAllianceAwardMailAskReq sendAllianceAwardMailAskReq = 56;
        SendAllianceMassAskReq sendAllianceMassAskReq = 57;
        ReloadPublicConfigAskReq reloadPublicConfigAskReq = 58;
        GmOverAllianceActivityAskReq gmOverAllianceActivityAskReq = 59;
        SendWonderAwardAskReq sendWonderAwardAskReq = 60;
        QueryWonderAwardRecordAskReq queryWonderAwardRecordAskReq = 61;
        ClearWonderAwardRecordAskReq clearWonderAwardRecordAskReq = 62;
        UpdateWonderInfoAskReq updateWonderInfoAskReq = 63;
        QueryOccupyWonderAskReq queryOccupyWonderAskReq = 64;
        HunterInviteAskReq hunterInviteAskReq = 65;
        UpdateHunterInviteAskReq updateHunterInviteAskReq = 66;
        SetPublicMoveServerStateReq setPublicMoveServerStateReq = 67;
        QueryApplyAllianceListAskReq queryApplyAllianceListAskReq = 68;
    }
}

// 世界到公共的ask返回
message World2PublicAskResp {
    int64 worldId = 1;
    int64 playerId = 2;
    int32 clientMsgNo = 3;

    oneof msg {
        CreateAllianceAskRt createAllianceAskRt = 11;
        JoinAllianceByIdAskRt joinAllianceByIdAskRt = 12;
        DealJoinAllianceAskRt dealJoinAllianceAskRt = 13;
        CheckAllianceNameAskRt checkAllianceNameAskRt = 14;
        AllianceInviteAskRt allianceInviteAskRt = 15;
        OpenAllianceGiftAskRt openAllianceGiftAskRt = 16;
        AllianceRecallPosAskRt allianceRecallPosAskRt = 17;
        SetAlliancePowerLimitAskRt setAlliancePowerLimitAskRt = 18;
        AllianceJoinCancelAskRt allianceJoinCancelAskRt = 19;
        WriteAllianceWaijiaoAskRt writeAllianceWaijiaoAskRt = 20;
        OpenAllianceWaijiaoAskRt OpenAllianceWaijiaoAskRt = 21;
        AllianceTopicDeleteAskRt allianceTopicDeleteAskRt = 22;
        AllianceTopicGetReplyAskRt allianceTopicGetReplyAskRt = 23;
        AllianceTopicReplyAskRt allianceTopicReplyAskRt = 24;
        AlliancePublishTopicAskRt alliancePublishTopicAskRt = 25;
        AllianceQueryTopicAskRt allianceQueryTopicAskRt = 26;
        QueryAllianceLogAskRt queryAllianceLogAskRt = 27;
        SetAllianceDescptAskRt setAllianceDescptAskRt = 28;
        RemoveAllianceMarkAskRt removeAllianceMarkAskRt = 29;
        SetAllianceMarkAskRt setAllianceMarkAskRt = 30;
        AllianceDismissAskRt allianceDismissAskRt = 31;
        ResetAlliancePosAskRt resetAlliancePosAskRt = 32;
        RemoveAllianceMemberAskRt removeAllianceMemberAskRt = 33;
        GetAllianceGiftAskRt getAllianceGiftAskRt = 34;
        QueryAllianceMemberAskRt queryAllianceMemberAskRt = 35;
        UpdateAllianceMemberInfoAskRt updateAllianceMemberInfoAskRt = 36;
        QueryAllianceReqListAskRt queryAllianceReqListAskRt = 37;
        QueryAllianceInfoAskRt queryAllianceInfoAskRt = 38;
        QueryAllianceListAskRt queryAllianceListAskRt = 39;
        SummonAllianceBossAskRt summonAllianceBossAskRt = 40;
        QueryAllianceBossLivenessAskRt queryAllianceBossLivenessAskRt = 41;
        QueryAllianceBossAskRt queryAllianceBossAskRt = 42;
        RemoveAllianceBossAskRt removeAllianceBossAskRt = 43;
        QueryInAllianceRankRt queryInAllianceRankRt = 44;
        QueryAllianceRankAskRt queryAllianceRankAskRt = 45;
        QueryAllianceRankFirstAskRt queryAllianceRankFirstAskRt = 46;
        AllianceTopicSignAskRt allianceTopicSignAskRt = 47;
        AllianceActivityScoreAddAskRt allianceActivityScoreAddAskRt = 48;
        SeleteAllianceActivityInfosRt seleteAllianceActivityInfosRt = 49;
        SelectActivityHistoryRt selectActivityHistoryRt = 50;
        OpenActivityAskRt openActivityAskRt = 51;
        SelectActivityRankAskRt selectActivityRankAskRt = 52;
        SelectNowRankRt selectNowRankRt = 53;
        ReceiveAllianceGiftAskRt receiveAllianceGiftAskRt = 54;
        SendAllianceMailAskRt sendAllianceMailAskRt = 55;
        SendAllianceAwardMailAskRt sendAllianceAwardMailAskRt = 56;
        SendAllianceMassAskRt sendAllianceMassAskRt = 57;
        ReloadPublicConfigAskRt reloadPublicConfigAskRt = 58;
        GmOverAllianceActivityAskRt gmOverAllianceActivityAskRt = 59;
        SendWonderAwardAskRt sendWonderAwardAskRt = 60;
        QueryWonderAwardRecordAskRt queryWonderAwardRecordAskRt = 61;
        ClearWonderAwardRecordAskRt clearWonderAwardRecordAskRt = 62;
        UpdateWonderInfoAskRt updateWonderInfoAskRt = 63;
        QueryOccupyWonderAskRt queryOccupyWonderAskRt = 64;
        HunterInviteAskRt hunterInviteAskRt = 65;
        UpdateHunterInviteAskRt updateHunterInviteAskRt = 66;
        SetPublicMoveServerStateRt setPublicMoveServerStateRt = 67;
        QueryApplyAllianceListAskRt queryApplyAllianceListAskRt = 68;
    }
}

// 已申请列表
message QueryApplyAllianceListAskReq {
}

message QueryApplyAllianceListAskRt {
    int32 rt = 1;
    AllianceQueryListInfoVo alliance = 2; //联盟列表
}

// 设置迁城状态
message SetPublicMoveServerStateReq {
    int32 state = 1; // 如果设置成锁定状态 下面的参数就没意义 如果是解锁状态的话 下面的值需要跟着修改的
    int32 areaNo = 2; // 区号
    int64 newWorldId = 3; // 服务器唯一id WorldId
    int32 x = 4;
    int32 y = 5;
}

message SetPublicMoveServerStateRt {
    int32 rt = 1;
}

// 创建公会ask
message CreateAllianceAskReq {
    string name = 1;
    string shortName = 2;
    int64 pid = 3;
    int32 allianceLan = 4;
    string playerName = 5;
    int64 power = 6;
    int64 lastLeaveTime = 7;
    int64 honor = 8;
    int32 canHelpNum = 9;
    int64 gamePltAreaNo = 10;
    int64 mapPltAreaNo = 11;
    int32 gameAreaNo = 12;
    int32 photoProtoId = 13;
    int32 playerCastleLv = 14;
    string playerNickName = 15;
}

message CreateAllianceAskRt {
    int32 rt = 1;
    int32 flagColor = 2;
    int32 flagStyle = 3;
    int32 flagEffect = 4;
    string allianceName = 5;
    string allianceShortName = 6;
}

// 加入联盟ask
message JoinAllianceByIdAskReq {
    int64 pid = 1;
    int64 fightValue = 2;
    string playerName = 3;
    int32 playerPhoto = 4;
    int64 pltAreaNo = 5;
    int32 areaNo = 6;
    int64 lastLoginTime = 7;
    int64 offTime = 8;
    int32 photoProtoId = 9;
    int32 playerCastleLv = 10;
    string playerNickName = 11;
}

message JoinAllianceByIdAskRt {
    int32 rt = 1;
    int32 isCreateJoinInfo = 2; // 是否需要创建申请记录
}

// 处理加入联盟请求ask
message DealJoinAllianceAskReq {
    int32 reqType = 1;
    int64 pid = 2;
    int64 reqPid = 3;
    QueryPlayerInfoAskVo queryPlayerInfoAskVo = 4;
}

message QueryPlayerInfoAskVo {
    int64 gamePltAreaNo = 1;
    string playerName = 2;
    int32 photoProtoId = 3;
    int64 offTime = 4;
    int64 mapPltAreaNo = 5;
    int64 lastLoginTime = 6;
    int32 mapAreaNo = 7;
    int32 playerCastleLv = 8;
    string playerNickName = 9;
}

message DealJoinAllianceAskRt {
    int32 rt = 1;
}

// 检测公会名有效性ask
message CheckAllianceNameAskReq {
    int32 nameType = 1;
    string name = 2;
}

message CheckAllianceNameAskRt {
    int32 rt = 1;
}

// 公会要求ask
message AllianceInviteAskReq {
    int64 invitePlayerId = 1;
}

message AllianceInviteAskRt {
    int32 rt = 1;
}

// 帮会礼物ask
message OpenAllianceGiftAskReq {
}

message OpenAllianceGiftAskRt {
    int32 rt = 1;
    AllianceBigGiftVo allianceBigGiftVo = 2; // 我的研发信息
}

message AllianceBigGiftVo {
    int32 bigGiftId = 1; // 左侧大礼物ID
    int32 bigGiftExp = 2; // 左侧大礼物钥匙值
    int32 giftLv = 3; // 上侧的礼物等级
    int32 giftExp = 4; // 上侧的礼物经验
}

// 罢免帮派职位
message AllianceRecallPosAskReq {
    int64 setPid = 1;
    int32 posId = 2;
}

message AllianceRecallPosAskRt {
    int32 rt = 1;
}

// 设置联盟申请实力限制
message SetAlliancePowerLimitAskReq {
    int64 power = 1;
    int64 canAddPower = 2;
}

message SetAlliancePowerLimitAskRt {
    int32 rt = 1;
}

// 取消联盟申请
message AllianceJoinCancelAskReq {
}

message AllianceJoinCancelAskRt {
    int32 rt = 1;
}

// 写外交界面
message WriteAllianceWaijiaoAskReq {
    int64 myAllianceId = 1; // 1-9是留言者的信息
    int32 flagColor = 2;
    int32 flagStyle = 3;
    int32 flagEffect = 4;
    string aName = 5;
    string asName = 6;
    string playerPos = 7;
    string waijiaoInfo = 8;
    int32 areaNo = 9; // 发言的人所属服务器区号
    string playerName = 10;
    int32 photoProtoId = 11;
    string nickName = 12;
}

message WriteAllianceWaijiaoAskRt {
    int32 rt = 1;
    AllianceWaijiaoInfoVo allianceWaijiaoInfos = 2;
}

message AllianceWaijiaoInfoVo {
    int32 flagColor = 1; //联盟旗帜的颜色
    int32 flagStyle = 2; //联盟旗帜的样式
    int32 flagEffect = 3; //联盟旗帜图案
    int64 aid = 4; //联盟名字
    string name = 5; //联盟ID
    string shortName = 6; //联盟简称
    int64 playerId = 7; //玩家ID
    string playerName = 8; //玩家名
    string playerPositions = 9; //玩家职位
    int32 createTime = 10; //发布时间
    string waijiaoInfo = 11; //内容
    int32 mapPltAreaNo = 12; //发表时所在区号
    int32 photoProtoId = 13; //头像
    string nickName = 14; //玩家昵称
    int64 waijiaoId = 15; // 外交ID
}

// 打开联盟外交界面
message OpenAllianceWaijiaoAskReq {
}

message OpenAllianceWaijiaoAskRt {
    int32 rt = 1;
    repeated AllianceWaijiaoInfoVo allianceWaijiaoInfos = 2;
}

// 联盟邮件主题删除
message AllianceTopicDeleteAskReq {
    int64 topicId = 1;
}

message AllianceTopicDeleteAskRt {
    int32 rt = 1;
}

// 玩家滚动回复列表时: 请求历史回复内容
message AllianceTopicGetReplyAskReq {
    int64 topicId = 1;
    int64 replyId = 2; //客户端拥有的离现在最久的回复ID
}

message AllianceTopicGetReplyAskRt {
    int32 rt = 1;
    repeated AllianceReplyInfoVo replys = 2; //返回的历史回复记录（也可能只是部分回复记录）
}

message AllianceReplyInfoVo {
    int64 replyId = 1; //回复的回复ID
    int64 playerId = 2; //回复的玩家ID
    string playerName = 3; //回复的玩家名称
    string playerShortName = 4; //回复的玩家昵称
    repeated int32 positions = 5; //回复者的职位
    int32 photoProtoId = 6; //回复者的头像模版
    string message = 7; //回复内容
    int32 replyAt = 8; //回复时间
    int32 vipLv = 9; //vip等级
    int32 curentPos = 10; // 官职
}

// 对联盟邮件主题进行回复
message AllianceTopicReplyAskReq {
    int64 topicId = 1;
    string message = 2; //发布内容
}

message AllianceTopicReplyAskRt {
    int32 rt = 1;
    AllianceReplyInfoVo reply = 2; //返回的回复消息
}

// 发布联盟邮件主题
message AlliancePublishTopicAskReq {
    int32 type = 1; //主题类型：40-联盟全体成员 41-白虎团邮件 42-青龙团邮件 43-玄武团邮件 44-朱雀团邮件
    string title = 2; //发布标题
    string message = 3; //发布内容
}

message AlliancePublishTopicAskRt {
    int32 rt = 1;
    AllianceTopicInfoVo topic = 2; //联盟邮件的主题及回复
}

// 联盟邮件主题
message AllianceTopicInfoVo {
    int64 topicId = 1; //主题ID
    int32 type = 2; //主题类型：40-联盟全体成员 41-白虎团邮件 42-青龙团邮件 43-玄武团邮件 44-朱雀团邮件
    int64 playerId = 3; //发布的玩家ID
    string playerName = 4; //发布的玩家名称
    int32 photoProtoId = 5; //发布者的头像模版
    string title = 6; //发布标题
    int32 lastAt = 7; //最后一次回复时间
    int32 isRead = 8; //是否已经读取
    int32 isSign = 9; //是否收藏
}

//查询联盟邮件主题
message AllianceQueryTopicAskReq {
}

message AllianceQueryTopicAskRt {
    int32 rt = 1;
    repeated AllianceTopicInfoVo topics = 2; //联盟邮件的主题及回复记录（部分回复记录）
}

// 查询联盟日志
message QueryAllianceLogAskReq {
}

message QueryAllianceLogAskRt {
    int32 rt = 1;
    repeated AllianceQueryLogInfo l = 2;
}

message AllianceQueryLogInfo {
    int32 dt = 1; //日志记录时间戳
    int32 typ = 2; //日志类型编号
    repeated string lgs = 3; //参数数组
}

// 设置联盟公告
message SetAllianceDescptAskReq {
    string desp = 1; // 公告内容
    int32 despType = 2; // 公告类型  1-公告 2-标语
}

message SetAllianceDescptAskRt {
    int32 rt = 1;
}

// 删除联盟标记/集合
message RemoveAllianceMarkAskReq {
    int64 markId = 1; // 标记ID
}

message RemoveAllianceMarkAskRt {
    int32 rt = 1;
}

// 设置联盟标记/集合
message SetAllianceMarkAskReq {
    int32 markType = 1; // 标记类型
    int32 x = 2; // X
    int32 y = 3; // Y
    int32 pltAreaNo = 4; // 服务器编号
    string title = 5; // 名字
    string desp = 6; // 介绍
}

message SetAllianceMarkAskRt {
    int32 rt = 1;
    int64 endTime = 2; //下次可再标记的结束时间戳
}

// 联盟解散
message AllianceDismissAskReq {
}

message AllianceDismissAskRt {
    int32 rt = 1;
}

// 任命职位
message ResetAlliancePosAskReq {
    int64 posPlayerId = 1; // 被设置职位人ID
    repeated int32 posId = 2; // 职位
}

message ResetAlliancePosAskRt {
    int32 rt = 1;
}

// 联盟踢人
message RemoveAllianceMemberAskReq {
    int64 removePlayerId = 1; // 被踢的玩家ID
    int32 isRook = 2; // 是否是新手期玩家  0-否 1-是
}

message RemoveAllianceMemberAskRt {
    int32 rt = 1;
}

// 领取联盟礼物
message GetAllianceGiftAskReq {
    int32 addExp = 1;
    int32 addBigExp = 2;
    repeated int64 giftIds = 3;
}

message GetAllianceGiftAskRt {
    int32 rt = 1;
}

// 查询联盟成员信息
message QueryAllianceMemberAskReq {
}

message QueryAllianceMemberAskRt {
    int32 rt = 1;
    int32 onlineQty = 2; //在线玩家数
    repeated QueryAllianceMemberVo queryAllianceMemberVos = 3;
}

message QueryAllianceMemberVo {
    int64 id = 1; //玩家ID
    string name = 2; //玩家名称
    int32 photoProtoId = 3; //头像模版ID
    int64 ctrbtTotal = 4; //总贡献
    int64 ctrbtWeek = 5; //本周贡献
    int64 powerValue = 6; //势力值
    int32 landX = 7; //坐标X
    int32 landY = 8; //坐标Y
    int32 fightValue = 9; //所有部队总战斗力
    int32 isOnline = 10; //玩家是否在线：0-不在线；1-在线
    repeated int32 positions = 11; //职位：1-盟主 2-副盟主 3-指挥官 4-外交官 5-团长 6-普通成员 7-白虎成员 8-青龙成员 9-玄武成员 10-朱雀成员 11-白虎团长 12-青龙团长 13-玄武团长 14-朱雀团长
    int32 tsLandX = 12; //如果是某个郡城的守，值为郡城的坐标X
    int32 tsLandY = 13; //如果是某个郡城的守，值为郡城的坐标Y
    int32 occupiedFlag = 14; //是否沦陷标志位：1-沦陷；0-没有沦陷
    int64 makeOverTime = 15; //如果是盟主会有执行盟主转让操作的时间戳
    string nickName = 16; //玩家昵称
    int64 lastOffTime = 17; // 上次离线时间
    int32 mapAreaNo = 18; // 玩家所属的服务器编号
    int32 monsterScore = 19; // 本日获得魔物积分
    int64 lastGetMonsterScore = 20; // 上次获得魔物积分时间
}

// 修改联盟成员信息
message UpdateAllianceMemberInfoAskReq {
    repeated UpdateAllianceMemberInfoVo updates = 1;
}

message UpdateAllianceMemberInfoVo {
    int32 updateType = 1; // 修改的类型常量
    string info = 2; //修改成的内容
}

message UpdateAllianceMemberInfoAskRt {
    int32 rt = 1;
}

// 查询联盟的申请信息
message QueryAllianceReqListAskReq {
}

message QueryAllianceReqListAskRt {
    int32 rt = 1;
    int64 canAddPower = 2; // 可以直接加入的战斗力
    int64 powerLimit = 3; // 可申请的最低战斗力
    repeated AllianceQueryReqListInfoVo players = 4; //申请加入联盟的玩家列表
}

message AllianceQueryReqListInfoVo {
    int64 id = 1; //玩家ID
    string name = 2; //玩家名称
    int32 photoProtoId = 3; //玩家头像
    int64 fightValue = 4; //战斗力
}

// 查询某联盟具体信息
message QueryAllianceInfoAskReq {
}

message QueryAllianceInfoAskRt {
    int32 rt = 1;
    int64 id = 2; //联盟ID
    string name = 3; //联盟名称
    string shortName = 4; //联盟简称
    int64 alliancePlayerId = 5; //盟主ID
    string playerName = 6; //盟主名称
    int32 reservePlayers = 7; //当前招收人数
    int32 limitPlayers = 8; //招收人数上限
    int32 powerValue = 9; //当前势力值
    int64 woodConst = 10; //NPC城池木材固定值
    int64 ironConst = 11; //NPC城池铁矿固定值
    int64 stoneConst = 12; //NPC城池石料固定值
    int64 foodstuffConst = 13; //NPC城池粮食固定值
    string description = 14; //联盟公告
    int64 ctrbtWeek = 15; //玩家本周贡献
    int64 ctrbtTotal = 16; //玩家总贡献
    int32 relationShipId = 17; //联盟关系：1-友好；2-敌对；3-中立
    int32 rewards = 18; //奖池金额
    int64 powerLimit = 19; //允许加入联盟的最低战斗力
    int32 nextPublishTime = 20; //下次可发布任务时间
    int32 hasCountyCity = 21; //联盟是否有占领的郡城：0-没有；1-有
    int32 flagColor = 22; //旗帜的颜色模版ID
    int32 flagStyle = 23; //旗帜的样式模版ID
    int32 flagEffect = 24; //旗帜的图案模版ID
    int32 setRelationEndTime = 25; //联盟外交变更冷却结束时间
    int32 wood = 26; //木料加成
    int32 iron = 27; //晶矿加成
    int32 stone = 28; //石料加成
    int32 food = 29; //粮食加成
    int64 canAddLimit = 30; // 可以直接加入的战斗力 如果<0就表示没开启这个功能
    string biaoyu = 31; //联盟标语
    int32 allianceLan = 32; //联盟语种
    int32 allianceInAreaNo = 33; //联盟所属的服务器编号
    int32 occupyWonderCount = 34; //占领的奇观数量
    int32 isApply = 35; // 是否申请过这个联盟
    int32 fightRank = 36; // 战斗力排行
    int32 giftLv = 37; // 礼物等级
}

// 查询可申请联盟列表
message QueryAllianceListAskReq {
    int32 playerMapAreaNo = 1; // 查看者所属地图服ID
    string allianceName = 2; // 联盟名字或者简称
    int32 allianceLan = 3; // 所选语言
}

message QueryAllianceListAskRt {
    int32 rt = 1;
    repeated AllianceQueryListInfoVo alliances = 2; //联盟列表
}

message AllianceQueryListInfoVo {
    int64 id = 1; //联盟ID
    string name = 2; //联盟名称
    string shortName = 3; //联盟简称
    int32 reservePlayers = 4; //当前招收人数
    int64 powerValue = 5; //联盟势力值
    int32 operate = 6; //可进行操作：0-申请加入；1-取消申请
    int32 allianceLan = 7; // 所选语言
    int64 canAddPower = 8; // 可直接加入战斗力值
    int64 canReqPower = 9; // 可申请的战斗力值
    int32 flagColor = 10; //旗帜的颜色模版ID
    int32 flagStyle = 11; //旗帜的样式模版ID
    int32 flagEffect = 12; //旗帜的图案模版ID
    int64 alliancePower = 13; // 帮派战斗力
    int32 giftLv = 14; //礼物等级
    int32 areaNo = 15; // 区号
}

// 召唤联盟BOSS
message SummonAllianceBossAskReq {
    int32 bossId = 1; // 要召唤的联盟BOSSID
    int32 x = 2; // 要召唤的联盟BOSSID
    int32 y = 3; // 要召唤的联盟BOSSID
    int32 score = 4; // 要召唤的积分档次
    int32 areaNo = 5; // 服务器编号
}

message SummonAllianceBossAskRt {
    int32 rt = 1;
}

// 查看联盟boss活跃度进度
message QueryAllianceBossLivenessAskReq {
}

message QueryAllianceBossLivenessAskRt {
    int32 rt = 1;
    int32 value = 2; // 活跃度
    repeated AllianceBossLivenessVo allianceBossLiveness = 3; // 召唤状态
}

message AllianceBossLivenessVo {
    int32 score = 1; // 活跃度档
    repeated AllianceBossSummonInfoVo allianceBossSummonInfo = 2; // 该挡内的召唤情况
}

message AllianceBossSummonInfoVo {
    int32 bossId = 1;
    int32 state = 2;
}

// 查看所有被召唤的联盟boss
message QueryAllianceBossAskReq {
}

message QueryAllianceBossAskRt {
    int32 rt = 1;
    repeated AllianceBossVo allianceBossVos = 2; // 召唤状态
}

message AllianceBossVo {
    int32 bossId = 1;
    int32 areaNo = 2; // 服务器编号
    int32 x = 3;
    int32 y = 4;
    int32 overTime = 5; // 结束时间
}

// 删除联盟BOSS
message RemoveAllianceBossAskReq {
    int32 x = 1; // 要召唤的联盟BOSSID
    int32 y = 2; // 要召唤的联盟BOSSID
}

message RemoveAllianceBossAskRt {
    int32 rt = 1;
}

//// GAME -> PUBLIC
// 查询联盟内部数据排行榜
message QueryInAllianceRankReq {
    int32 rankType = 1; // 排行类型
}

// PUBLIC -> GAME
// 查询联盟内部数据排行榜返回
message QueryInAllianceRankRt {
    int32 rt = 1;
    repeated QueryInAllianceRankVo queryInAllianceRankVos = 2; // 排行内容
}

message QueryInAllianceRankVo {
    int64 playerId = 1; // 玩家ID
    string playerName = 2; // 玩家名字
    string playerNickName = 3; // 玩家昵称
    int64 areaNo = 4; // 玩家所处服务器
    int32 photo = 5; // 玩家头像
    repeated int64 value = 6; // 内容
    repeated int32 pos = 7; // 职位
    int64 power = 8; // 战斗力
    int32 curentPos = 9; // 官职
}

// GAME -> PUBLIC
// 查询联盟数据排行榜
message QueryAllianceRankAskReq {
    int32 rankType = 1; // 排行类型
    int32 page = 2;
    int32 num = 3;
    int32 areaNo = 4; //需要查询的玩家服
}

// PUBLIC -> GAME
// 查询联盟数据排行榜返回
message QueryAllianceRankAskRt {
    int32 rt = 1;
    repeated QueryAllianceRankAskVo queryAllianceRankVos = 2; // 排行内容
    int32 myAllianceRank = 3; // 我帮派的排行  0表示不再前100
    int64 myAllianceScore = 4; // 我帮派的成绩
}

message QueryAllianceRankAskVo {
    int64 allianceId = 1; //联盟ID
    int32 flagColor = 2; //旗帜的颜色模版ID
    int32 flagStyle = 3; //旗帜的样式模版ID
    int32 flagEffect = 4; //旗帜的图案模版ID
    string allianceName = 5; //联盟名称
    string allianceShortName = 6; //联盟简称
    int64 value = 7; //内容
}

// GAME -> PUBLIC
// 查询联盟数据排行榜首页
message QueryAllianceRankFirstAskReq {
    int32 areaNo = 1; //需要查询的玩家服
}

// PUBLIC -> GAME
// 查询联盟数据排行榜首页返回
message QueryAllianceRankFirstAskRt {
    int32 rt = 1;
    repeated QueryAllianceRankAskVos queryAllianceRankVos = 2; // 排行内容
}

message QueryAllianceRankAskVos {
    int32 rankType = 1;
    QueryAllianceRankAskVo queryAllianceRankVos = 2; // 排行内容
}

// GAME -> PUBLIC
// 收藏联盟主题
message AllianceTopicSignAskReq {
    int64 topicId = 1;
}

// PUBLIC -> GAME
// 收藏联盟主题返回
message AllianceTopicSignAskRt {
    int32 rt = 1;
}

// GAME -> PUBLIC
// 联盟活动积分增加
message AllianceActivityScoreAddAskReq {
    int64 addScore = 1;
    int32 conditionType = 2;
}

// PUBLIC -> GAME
// 联盟活动积分增加返回
message AllianceActivityScoreAddAskRt {
    int32 rt = 1;
    int64 successAddScore = 2;
}

// GAME -> PUBLIC
// 打开活动总界面只请求联盟活动的数据
message SeleteAllianceActivityInfosReq {
}

// PUBLIC -> GAME
// 打开活动总界面只请求联盟活动的数据返回
message SeleteAllianceActivityInfosRt {
    int32 rt = 1;
    repeated AllianceActivityInfoVo allianceActivityInfos = 2;
}

message AllianceActivityInfoVo {
    int32 activityId = 1;
    int32 score = 2;
    int32 rank = 3;
}

// GAME -> PUBLIC
// 查询活动的信息
message OpenActivityAskReq {
}

// PUBLIC -> GAME
// 查询活动的信息返回
message OpenActivityAskRt {
    int32 rt = 1;
    repeated OpenActivityAskVo infos = 2;
}

message OpenActivityAskVo {
    int32 activityId = 1;
    int32 myRank = 2;
    int32 castleLv = 3;
    int32 score = 4;
}

// GAME -> PUBLIC
// 查询活动历史
message SelectActivityHistoryReq {
    int32 activityId = 1;
}

// 查询活动历史返回
message SelectActivityHistoryRt {
    int32 rt = 1;
    repeated ActivityHistoryVo historyInfos = 2;
}

message ActivityHistoryVo {
    int32 activityProtoId = 1;
    int32 overTime = 2;
    int64 myScore = 3;
    int32 myRank = 4;
    int64 rankId = 5;
}

// GAME -> PUBLIC
// 查询活动排行
message SelectActivityRankAskReq {
    int64 rankId = 1;
}

// PUBLIC -> GAME
// 查询活动排行返回
message SelectActivityRankAskRt {
    int32 rt = 1;
    repeated AllianceActivityRankAskVo allianceActivityRankVos = 2;
}

message AllianceActivityRankAskVo {
    int64 allianceId = 1;
    string allianceName = 2;
    string shortName = 3;
    int32 myScore = 4;
    int32 flagColor = 5;
    int32 flagStyle = 6;
    int32 flagEffect = 7;
}

// GAME -> PUBLIC
// 查询活动此时排行
message SelectNowRankReq {
    int32 activityId = 1;
}

// PUBLIC -> GAME
// 查询活动排行返回
message SelectNowRankRt {
    int32 rt = 1;
    repeated AllianceActivityRankAskVo allianceActivityRankVos = 2;
}

//MsgType = 11000
// Public->Game
// 修改联盟旗帜之后的推送
message DealAfterSetAllianceFlagAskReq {
    int64 allianceId = 1;
    int32 color = 2;
    int32 style = 3;
    int32 effect = 4;
}

//MsgType = 11002
// Public->Game
// 帮派职位变化通知给所有帮众
message PosChangeNoticAllAllianceAskReq {
    int64 allianceId = 1;
    int32 pos = 2;
    string playerName = 3;
    string getPosPlayerName = 4;
    int32 changeType = 5;
    repeated int32 positions = 6;
    int64 setPlayerId = 7;
    int32 isOnline = 8;
    int32 photoProtoId = 9;
}

// GAME -> PUBLIC
// 发送联盟礼物
message ReceiveAllianceGiftAskReq {
    repeated ReceiveAllianceGiftAskReqVo giftMap = 1;
}

message ReceiveAllianceGiftAskReqVo {
    int32 giftId = 1;
    int32 giftNum = 2;
}

// PUBLIC -> GAME
// 发送联盟礼物返回
message ReceiveAllianceGiftAskRt {
    int32 rt = 1;
}

// GAME -> PUBLIC
// 发送联盟邮件
message SendAllianceMailAskReq {
    int32 readType = 1;
    string title = 2;
    repeated string titleParas = 3;
    string content = 4;
    repeated string contentParas = 5;
}

// PUBLIC -> GAME
// 发送联盟邮件返回
message SendAllianceMailAskRt {
    int32 rt = 1;
}

// GAME -> PUBLIC
// 发送联盟奖励邮件
message SendAllianceAwardMailAskReq {
    int32 readType = 1;
    string title = 2;
    repeated string titleParas = 3;
    string content = 4;
    repeated string contentParas = 5;
    string attach = 6;
}

// PUBLIC -> GAME
// 发送联盟奖励邮件返回
message SendAllianceAwardMailAskRt {
    int32 rt = 1;
}

// HOME -> PUBLIC
// 发送联盟聊天消息
message SendAllianceMassAskReq {
    string message = 1;
    int32 messageType = 2;
    string playerName = 3;
    string playerShortName = 4;
    int64 massId = 5;
    string massName = 6;
    int32 iconProtoId = 7;
    int32 areaNo = 8;
    int64 pltAreaId = 9;
    int32 vipLv = 10;
    string allianceName = 11;
    string allianceShortName = 12;
    int32 wonderPos = 13;
}

message SendAllianceMassAskRt {
    int32 rt = 1;
    int64 chatId = 2;
    int32 pos = 3;
}

// 重载配置表
message ReloadPublicConfigAskReq {
}

message ReloadPublicConfigAskRt {
    int32 rt = 1;
}

// GM命令结算联盟活动
message GmOverAllianceActivityAskReq {
}

// GM命令结算联盟活动返回
message GmOverAllianceActivityAskRt {
    int32 rt = 1;
}

// 请求发送奇观战奖励
message SendWonderAwardAskReq {
    int64 targetPlayerId = 1;
    int32 awardId = 2;
}

message SendWonderAwardAskRt {
    int32 rt = 1;
}

// 查询奇观战奖励记录
message QueryWonderAwardRecordAskReq {
}

message QueryWonderAwardRecordAskRt {
    int32 rt = 1;
    repeated WonderAwardRecordVo queryAllianceAwardInfo = 2;
}

message WonderAwardRecordVo {
    int32 awardId = 1;
    repeated int64 playerIds = 2;
}

// 请求清除奇观战奖励记录
message ClearWonderAwardRecordAskReq {
}

message ClearWonderAwardRecordAskRt {
    int32 rt = 1;
}

// 更新奇观信息
message UpdateWonderInfoAskReq {
    int32 changeType = 1;
    int32 wonderProtoId = 2;
    int32 status = 3;
    int64 warStartTime = 4;
    int64 warFinishTime = 5;
    string positionInfo = 6;
}

message UpdateWonderInfoAskRt {
    int32 rt = 1;
}

// 查询占领的奇观信息
message QueryOccupyWonderAskReq {
}

message QueryOccupyWonderAskRt {
    int32 rt = 1;
    repeated client2server.OccupyWonder occupyWonderInfo = 2;
}

// 发送狩猎邀请
message HunterInviteAskReq {
    int32 posX = 1;
    int32 posY = 2;
    int32 bossId = 3;
    int32 nowHp = 4;
    repeated AtkRecordVo atkRecord = 5;
}

message HunterInviteAskRt {
    int32 rt = 1;
}

message AtkRecordVo {
    int64 playerId = 1;
    int32 damage = 2;
}

// 更新狩猎邀请
message UpdateHunterInviteAskReq {
    int32 posX = 1;
    int32 posY = 2;
    int32 nowHp = 3;
    repeated AtkRecordVo atkRecord = 4;
}

message UpdateHunterInviteAskRt {
    int32 rt = 1;
}


// Public到Public的ask请求
message Public2PublicAskReq {
    int64 publicId = 1;

    oneof msg {
        CheckAllianceNameAskPublicReq checkAllianceNameAskPublicReq = 11;
    }
}

// Public到Public的ask返回
message Public2PublicAskResp {
    int64 publicId = 1;

    oneof msg {
        CheckAllianceNameAskPublicRt checkAllianceNameAskPublicRt = 11;
    }
}

// 检测联盟名字
message CheckAllianceNameAskPublicReq {
    int32 checkType = 1; // 检测类型 1-联盟名 2-联盟简称
    string name = 2;
    string shortName = 3;
}

message CheckAllianceNameAskPublicRt {
    int32 rt = 1;
}


// Public到PublicManager的ask请求
message Public2PublicManagerAskReq {
    int64 publicId = 1;
}

// Public到PublicManager的ask返回
message Public2PublicManagerAskResp {
    int64 publicId = 1;
}

// PublicManager到Public的ask请求
message PublicManager2PublicAskReq {
    int64 publicId = 1;

     oneof msg {
         CreateAllianceAskReq createAllianceAskReq = 11;
     }
}

// PublicManager到Public的ask返回
message PublicManager2PublicAskResp {
    int64 publicId = 1;

     oneof msg {
         CreateAllianceAskRt createAllianceAskRt = 11;
     }
}

// 世界到公共管理节点的ask请求
message World2PublicManagerAskReq {
    int64 worldId = 1;
    int64 playerId = 2;
    int64 publicId = 3;
    int32 clientMsgNo = 4;

    oneof msg {
        CreateAllianceAskReq createAllianceAskReq = 11;
    }
}

// 世界到公共管理节点的ask返回
message World2PublicManagerAskResp {
    int64 worldId = 1;
    int64 playerId = 2;
    int32 clientMsgNo = 3;

    oneof msg {
        CreateAllianceAskRt createAllianceAskRt = 11;
    }
}

// 世界公共数据到公共管理节点的ask请求
message WorldManager2PublicManagerAskReq {

    oneof msg {
        FindUseAllianceNamesReq findUseAllianceNamesReq = 11;
    }
}

message WorldManager2PublicManagerAskResp {

    oneof msg {
        FindUseAllianceNamesRt findUseAllianceNamesRt = 11;
    }
}

// 世界公共节点来请求获取当前已经被使用的联盟名
message FindUseAllianceNamesReq {
}

// 世界公共节点来请求获取当前已经被使用的联盟名返回
message FindUseAllianceNamesRt {
    int32 rt = 1;
    repeated string allianceName = 2;
    repeated string allianceShortName = 3;
    int32 nowSycnNameVersion = 4; // 当前版本号

    repeated AllianceRankInfos allianceRankInfo = 5 ;// 联盟排行
    repeated AllianceOccupyInfo allianceOccupyInfos = 6 ;// 联盟占领世界情况
}

message AllianceRankInfos{
    int32 rankType = 1; // 排行类型
    repeated AllianceSimpleInfoVo allianceRankInfo = 5 ;// 联盟排行
}

message AllianceOccupyInfo{
    int64 allianceId = 1; // 联盟ID
    string allianceMainMemberName = 2; // 盟主名字
    int32 allianceAreaNo = 3; // 联盟所属服务器
    string allianceName = 4; // 联盟名字
    string allianceShortName = 5; // 联盟简称
    repeated int64 worldId = 6 ;// 占领的世界ID
}

message AllianceSimpleInfoVo{
    string allianceName= 1;
    string allianceShortName= 2;
    int64 allianceId= 3;
    int32 flagColor= 4;
    int32 flagStyle= 5;
    int32 flagEffect= 6;
    int64 value= 7;
    string extend1= 8;
}

// Home到PublicManager的ask请求
message Home2PublicManagerAskReq {
    int64 playerId = 1;
    int64 publicId = 2;
    int32 clientMsgNo = 3;

    oneof msg {
        SetAllianceNameAskReq SetAllianceNameAskReq = 11;
        OpenAfterAllianceCompetitionAskReq openAfterAllianceCompetitionAskReq = 12;
    }
}

// Home到PublicManager的ask返回
message Home2PublicManagerAskResp {
    int64 playerId = 1;
    int32 clientMsgNo = 2;

    oneof msg {
        SetAllianceNameAskRt SetAllianceNameAskRt = 11;
        OpenAfterAllianceCompetitionAskRt openAfterAllianceCompetitionAskRt = 12;
    }
}

// 活动结束打开界面
message OpenAfterAllianceCompetitionAskReq {
}

message OpenAfterAllianceCompetitionAskRt {
    int32 rt = 1;
    int32 beforeRankLv = 2; // 联盟参赛之前的段位
    int32 afterRankLv = 3; // 联盟参赛之后的段位
    int32 score = 4; // 本次参赛获取到的积分
}


//===================================================================================================
message Public2PublicManagerTell {
    oneof msg {
        UnLockAllianceNameTell unLockAllianceNameTell = 11;
        SyncAllianceSimpleInfoTell syncAllianceSimpleInfoTell = 12;
    }
}

// 修改联盟名称之后的推送
message UnLockAllianceNameTell {
    string allianceName = 1;
    string allianceShortName = 2;
    int32 changeType = 3; // 1-把暂用状态变成已用状态 2-删除暂用名,用于解散联盟时
}

// 同步联盟基础属性
message SyncAllianceSimpleInfoTell {
    int32 changeType = 1;// 1-新增或者修改都直接覆盖 2-移除
    int64 allianceId = 2;
    SyncAllianceSimpleInfoVo syncAllianceSimpleInfoVo = 3;
}

message SyncAllianceSimpleInfoVo{
    string allianceName= 1;
    string allianceShortName= 2;
    int64 allianceId= 3;
    int32 flagColor= 4;
    int32 flagStyle= 5;
    int32 flagEffect= 6;
    int64 allianceCompetitionScore= 7;
    int64 allianceCompetitionScoreChangeTime= 8;
    // 下面几个只能推送差量,power是可能会少的 所以可能会负数
    int64 power= 9;
    int64 killSolider= 10;
    int64 monsterScore= 11;
    int32 allianceRankLv = 12;   // 联盟所处总动员段位
    int32 allianceMemberNum = 13;   // 联盟人数
    repeated int64 allianceOccupyInfos = 14;   // 联盟占领情况
    string allianceMainMemberName= 15;
    int32 allianceAreaNo= 16;
}

// 联盟管理节点到普通联盟节点的tell消息
message PublicManager2PublicTell {
    int64 publicId = 1;

    oneof msg {
        AllianceCompetitionOpenTell allianceCompetitionOpenTell = 11; // 联盟总动员开启
    }
}

// 联盟总动员状态修改
message AllianceCompetitionOpenTell {
    int32 state = 1; // 变化状态 1-获得资格  2-游戏时间结束进行奖励展示  3-活动彻底结束
    int32 rankLv = 2; // 用于状态2  表示活动结束之后的段位
    int32 indexLv = 3; // 用于状态2  表示本次活动的排名
}